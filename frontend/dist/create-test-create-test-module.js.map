{"version":3,"sources":["./src/app/shared/services/controlstore.service.ts","./src/app/create-test/create-test.component.ts","./src/app/create-test/create-test.component.html","./src/app/create-test/test-details/test-details.component.ts","./src/app/create-test/test-details/test-details.component.html","./src/app/create-test/applicability-criteria/applicability-criteria.component.ts","./src/app/create-test/applicability-criteria/applicability-criteria.component.html","./src/app/create-test/control-store-mapping/control-store-mapping.component.ts","./src/app/create-test/control-store-mapping/control-store-mapping.component.html","./src/app/create-test/create-test.module.ts","./src/app/create-test/select-test-stores/select-test-stores.component.ts","./src/app/create-test/select-test-stores/select-test-stores.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACO;AACZ;AACkB;AACjB;;;AAEvC;IAME,6BAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAHnC,iBAAY,GAAyB,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;QAC/D,mBAAc,GAAyB,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;IAE3B,CAAC;IAE9C,2CAAa,GAAb,UAAc,IAAS;QACrB,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,iBAAiB,EAAE;YACvB,IAAI;SACL,CAAC;aACD,IAAI,CACH,0DAAG,CAAC,UAAC,IAAS;YACZ,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,EAAE;oBACR,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,EAAE,CAAC;iBACX;aACF;iBAAM;gBACL,OAAO,EAAE,CAAC;aACX;QACH,CAAC,CAAC,EACF,iEAAU,CAAC,cAAM,sDAAE,CAAC,EAAE,CAAC,EAAN,CAAM,CAAC,CACzB,CAAC;IACN,CAAC;IAED,sCAAQ,GAAR,UAAS,IAAS;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,IAAI,CACjD,0DAAG,CAAC,UAAC,IAAS;YACZ,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,EAAE;oBACR,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,EAAE,CAAC;iBACX;aACF;iBAAM;gBACL,OAAO,EAAE,CAAC;aACX;QACH,CAAC,CAAC,EACF,iEAAU,CAAC,cAAM,sDAAE,CAAC,EAAE,CAAC,EAAN,CAAM,CAAC,CACzB,CAAC;IACJ,CAAC;IAED,0CAAY,GAAZ,UAAa,IAAS,EAAE,gBAAqB;QAC3C,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,kBAAkB,EAAE;YACxB,IAAI;YACJ,gBAAgB;SACjB,CAAC;aACD,IAAI,CACH,0DAAG,CAAC,UAAC,IAAS;YACZ,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,EAAE;oBACR,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,EAAE,CAAC;iBACX;aACF;iBAAM;gBACL,OAAO,EAAE,CAAC;aACX;QACH,CAAC,CAAC,EACF,iEAAU,CAAC,cAAM,sDAAE,CAAC,EAAE,CAAC,EAAN,CAAM,CAAC,CACzB,CAAC;IACN,CAAC;IAED,+CAAiB,GAAjB,UAAkB,EAAO;QAAzB,iBAkBC;QAjBC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,EAAE,0BAA0B,CAAC,CAAC;QAC7D,IAAG,IAAI,CAAC,cAAc,CAAC,KAAK,KAAK,IAAI,EAAC;YACpC,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAChC;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;YAC7C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,sBAAsB,GAAG,EAAE,CAAC,CAAC,IAAI,CAC1D,0DAAG,CAAC,UAAC,IAAS;gBACZ,IAAI,IAAI,EAAE;oBACR,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;oBAC5B,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,EAAE,CAAC;iBACX;YACH,CAAC,CAAC,EACF,iEAAU,CAAC,cAAM,sDAAE,CAAC,EAAE,CAAC,EAAN,CAAM,CAAC,CACzB,CAAC;SACH;IACH,CAAC;IAED,+CAAiB,GAAjB,UAAkB,IAAS;QACzB,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,0BAA0B,EAAE;YAChC,IAAI;SACL,CAAC;aACD,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,EACR,0DAAG,CAAC,UAAC,IAAS;YACZ,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,EAAE;oBACR,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,EAAE,CAAC;iBACX;aACF;iBAAM;gBACL,OAAO,EAAE,CAAC;aACX;QACH,CAAC,CAAC,EACF,iEAAU,CAAC,cAAM,sDAAE,CAAC,EAAE,CAAC,EAAN,CAAM,CAAC,CACzB,CAAC;IACN,CAAC;IAED,4CAAc,GAAd,UAAe,IAAS;QACtB,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,uBAAuB,EAAE;YAC7B,IAAI;SACL,CAAC;aACD,IAAI,CACH,0DAAG,CAAC,UAAC,IAAS;YACZ,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,EAAE;oBACR,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,EAAE,CAAC;iBACX;aACF;iBAAM;gBACL,OAAO,EAAE,CAAC;aACX;QACH,CAAC,CAAC,EACF,iEAAU,CAAC,cAAM,sDAAE,CAAC,EAAE,CAAC,EAAN,CAAM,CAAC,CACzB,CAAC;IACN,CAAC;IAED,uCAAS,GAAT,UAAU,IAAS;QACjB,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,4BAA4B,EAAE;YAClC,IAAI;SACL,CAAC;aACD,IAAI,CACH,0DAAG,CAAC,UAAC,IAAS;YACZ,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,EAAE;oBACR,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,EAAE,CAAC;iBACX;aACF;iBAAM;gBACL,OAAO,EAAE,CAAC;aACX;QACH,CAAC,CAAC,EACF,iEAAU,CAAC,cAAM,sDAAE,CAAC,EAAE,CAAC,EAAN,CAAM,CAAC,CACzB,CAAC;IACN,CAAC;IAED,2CAAa,GAAb,UAAc,IAAS;QACrB,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,gCAAgC,EAAE;YACtC,IAAI;SACL,CAAC;aACD,IAAI,CACH,0DAAG,CAAC,UAAC,IAAS;YACZ,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,EAAE;oBACR,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,EAAE,CAAC;iBACX;aACF;iBAAM;gBACL,OAAO,EAAE,CAAC;aACX;QACH,CAAC,CAAC,EACF,iEAAU,CAAC,cAAM,sDAAE,CAAC,EAAE,CAAC,EAAN,CAAM,CAAC,CACzB,CAAC;IACN,CAAC;IAED,+CAAiB,GAAjB,UAAkB,IAAS;QACzB,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,wBAAwB,EAAE;YAC9B,IAAI;SACL,CAAC;aACD,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,EACR,0DAAG,CAAC,UAAC,IAAS;YACZ,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,EAAE;oBACR,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,EAAE,CAAC;iBACX;aACF;iBAAM;gBACL,OAAO,EAAE,CAAC;aACX;QACH,CAAC,CAAC,EACF,iEAAU,CAAC,cAAM,sDAAE,CAAC,EAAE,CAAC,EAAN,CAAM,CAAC,CACzB,CAAC;IACN,CAAC;IAED,mDAAqB,GAArB,UAAsB,IAAS;QAC7B,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,4BAA4B,EAAE;YAClC,IAAI;SACL,CAAC;aACD,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,EACR,0DAAG,CAAC,UAAC,IAAS;YACZ,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,EAAE;oBACR,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,EAAE,CAAC;iBACX;aACF;iBAAM;gBACL,OAAO,EAAE,CAAC;aACX;QACH,CAAC,CAAC,EACF,iEAAU,CAAC,cAAM,sDAAE,CAAC,EAAE,CAAC,EAAN,CAAM,CAAC,CACzB,CAAC;IACN,CAAC;IAED,kDAAoB,GAApB,UAAqB,IAAS;QAC5B,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,kBAAkB,EAAE;YACxB,IAAI;SACL,CAAC;aACD,IAAI,CACH,0DAAG,CAAC,UAAC,IAAS;YACZ,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,EAAE;oBACR,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,EAAE,CAAC;iBACX;aACF;iBAAM;gBACL,OAAO,EAAE,CAAC;aACX;QACH,CAAC,CAAC,EACF,iEAAU,CAAC,cAAM,sDAAE,CAAC,EAAE,CAAC,EAAN,CAAM,CAAC,CACzB,CAAC;IACN,CAAC;IAED,0DAA4B,GAA5B,UAA6B,EAAO;QAApC,iBAkBC;QAjBC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,wBAAwB,CAAC,CAAC;QACzD,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,KAAK,IAAI,EAAC;YACnC,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC;SAC/B;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;YAC3C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAkB,GAAG,EAAE,CAAC,CAAC,IAAI,CACtD,0DAAG,CAAC,UAAC,IAAS;gBACZ,IAAI,IAAI,EAAE;oBACR,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;oBAC3B,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,EAAE,CAAC;iBACX;YACH,CAAC,CAAC,EACF,iEAAU,CAAC,cAAM,sDAAE,CAAC,EAAE,CAAC,EAAN,CAAM,CAAC,CACzB,CAAC;SACH;IACH,CAAC;IAEH,6CAAe,GAAf;QACE,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,6CAAe,GAAf,UAAgB,IAAS;QACvB,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IACD,8CAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,8CAAgB,GAAhB,UAAiB,IAAS;QACvB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,iDAAmB,GAAnB,UAAoB,EAAO;QAA3B,iBAWC;QAVC,IAAG,IAAI,CAAC,YAAY,CAAC,KAAK,KAAK,IAAI,EAAE;YACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAkB,GAAG,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;gBAChE,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC5B,CAAC,CAAE,CAAC;SACL;QACD,IAAG,IAAI,CAAC,cAAc,CAAC,KAAK,KAAK,IAAI,EAAE;YACrC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,sBAAsB,GAAG,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;gBACpE,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YAC7B,CAAC,CAAE,CAAC;SACL;IACH,CAAC;IAED,0DAA4B,GAA5B,UAA6B,IAAS;QACpC,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,iCAAiC,EAAE;YACvC,IAAI;SACL,CAAC;aACD,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,EACR,0DAAG,CAAC,UAAC,IAAS;YACZ,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,EAAE;oBACR,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,EAAE,CAAC;iBACX;aACF;iBAAM;gBACL,OAAO,EAAE,CAAC;aACX;QACH,CAAC,CAAC,EACF,iEAAU,CAAC,cAAM,sDAAE,CAAC,EAAE,CAAC,EAAN,CAAM,CAAC,CACzB,CAAC;IACN,CAAC;IAED,gDAAkB,GAAlB,UAAmB,IAAS;QAC1B,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,gCAAgC,EAAE,IAAI,CAAC;aAC5C,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,EACR,0DAAG,CAAC,UAAC,IAAS;YACZ,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,EAAE;oBACR,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,EAAE,CAAC;iBACX;aACF;iBAAM;gBACL,OAAO,EAAE,CAAC;aACX;QACH,CAAC,CAAC,EACF,iEAAU,CAAC,cAAM,sDAAE,CAAC,EAAE,CAAC,EAAN,CAAM,CAAC,CACzB,CAAC;IACN,CAAC;IAED,yDAA2B,GAA3B,UAA4B,IAAS;QACnC,IAAM,WAAW,GAAG;YAClB,YAAY,EAAE,MAAgB;SAC/B,CAAC;QACF,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,qCAAqC,EAAE,IAAI,EAAE,WAAW,CAAC;aAC9D,IAAI,CACH,0DAAG,CAAC,UAAC,IAAS;YACZ,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,EAAE;oBACR,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,EAAE,CAAC;iBACX;aACF;iBAAM;gBACL,OAAO,EAAE,CAAC;aACX;QACH,CAAC,CAAC,EACF,iEAAU,CAAC,cAAM,sDAAE,CAAC,EAAE,CAAC,EAAN,CAAM,CAAC,CACzB,CAAC;IACN,CAAC;IAED,oDAAsB,GAAtB,UAAuB,IAAS;QAC9B,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,+BAA+B,EAAE,IAAI,CAAC;aAC3C,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,EACR,0DAAG,CAAC,UAAC,IAAS;YACZ,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,EAAE;oBACR,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,EAAE,CAAC;iBACX;aACF;iBAAM;gBACL,OAAO,EAAE,CAAC;aACX;QACH,CAAC,CAAC,EACF,iEAAU,CAAC,cAAM,sDAAE,CAAC,EAAE,CAAC,EAAN,CAAM,CAAC,CACzB,CAAC;IACN,CAAC;0FAhXY,mBAAmB;0GAAnB,mBAAmB,WAAnB,mBAAmB,mBADP,MAAM;8BAN/B;CAwXC;AAjX+B;6FAAnB,mBAAmB;cAD/B,wDAAU;eAAC,EAAC,UAAU,EAAE,MAAM,EAAC;;;;;;;;;;;;;;ACNhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0G;AACrD;AAEa;AAC3B;AACL;AAC6C;AACH;AACF;;;;;;;;;;;;;;;;;;;;ICA5D;IAAA,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IAC3B;;;IAE4B,2EAA6C;IAAA,6EAAkB;IAAA,4DAAO;IAChG;;;IAG0B,2EAA6C;IAAA,iFAAsB;IAAA,4DAAO;IACpG;;;IAG0B,2EAA6C;IAAA,6EAAkB;IAAA,4DAAO;IAChG;;;IAG0B,2EAA6C;IAAA,gFAAqB;IAAA,4DAAO;IACnG;;;;;;IAYF,0EAEE;IAFmD,yVAA4B,qBAAqB,KAAE;IAEtG;IAAA,sEACsK;IAAA,0GAExK;IAAA,4DAAM;;;IAJD,8OAA8H;IAE/H,0DAA4J;IAA5J,8OAA4J;;;;IAVlK,mFACE;IAAA;IAAA,0EAEE;IAF2B,mVAA4B,eAAe,KAAE;IAExE;IAAA,sEAC0J;IAAA,+GAE5J;IAAA,4DAAM;IACN;IAAA,+IAEE;IAIJ;IAAA,4DAAmB;;;IAXZ,0DAAkH;IAAlH,kOAAkH;IAEnH,0DAAgJ;IAAhJ,kOAAgJ;IAG/I,0DAAuB;IAAvB,yFAAuB;;;;IAO9B,mFACE;IAAA;IAAA,0EAEE;IAF2B,iVAA0B,sBAAsB,EAAE,IAAI,KAAE;IAEnF;IAAA,sEACoL;IAAA,8GAEtL;IAAA,4DAAM;IACN;IAAA,0EAEE;IAF2B,iVAA0B,+BAA+B,EAAE,KAAK,KAAE;IAE7F;IAAA,sEACsM;IAAA,2GAExM;IAAA,4DAAM;IACR;IAAA,4DAAmB;;;IAXZ,0DAA4I;IAA5I,4PAA4I;IAE7I,0DAA0K;IAA1K,4PAA0K;IAIzK,0DAA8J;IAA9J,+QAA8J;IAE/J,0DAA4L;IAA5L,+QAA4L;;;IAzBpM,2EACE;IAAA;IAAA,sJACE;IAaF;IAAA,wJACE;IAaJ;IAAA,4DAAW;;;IA5BS,0DAAoB;IAApB,qFAAoB;IAcpB,0DAAqB;IAArB,sFAAqB;;;IAuBjC,qEACE;IAAA;IAAA,2EAAuB;IAAA,uDAAO;IAAA,4DAAO;IACvC;IAAA,4DAAK;;;IADoB,0DAAO;IAAP,wEAAO;;;;IAQxC,wEACE;IAAA;IAAA,uFAA2G;IAAzF,qWAAiC;IAAqC,4DAAmB;IAC7G;IAAA,qEAAe;;;;IACf,wEACE;IAAA;IAAA,iGAC6F;IADjE,+WAAiC;IACG,4DAA6B;IAC/F;IAAA,qEAAe;;;;IACf,wEACE;IAAA;IAAA,6FAEqF;IAF7D,2WAAiC;IAEG,4DAAyB;IACvF;IAAA,qEAAe;;;IAH6C,0DAAwC;IAAxC,yGAAwC;;;;IAIpG,wEACE;IAAA;IAAA,gGAC2F;IADhE,8WAAiC;IACG,4DAA4B;IAC7F;IAAA,qEAAe;;;ADhFvB;IAiCE,6BACU,WAA8B,EAC9B,kBAAsC,EAAQ,aAA4B,EACjE,aAAkC;QAHrD,iBAuBC;QAtBS,gBAAW,GAAX,WAAW,CAAmB;QAC9B,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAQ,kBAAa,GAAb,aAAa,CAAe;QACjE,kBAAa,GAAb,aAAa,CAAqB;QA7BrD,aAAQ,GAAG,KAAK,CAAC;QAEjB,kBAAa,GAAG,CAAC,CAAC;QACX,WAAM,GAAoC,EAAE,CAAC;QACpD,WAAM,GAAG,GAAG,CAAC;QAEb,4BAAuB,GAAiB,iDAAY,CAAC,KAAK,CAAC;QAC3D,4BAAuB,GAAiB,iDAAY,CAAC,KAAK,CAAC;QAG3D,gBAAW,GAAG,IAAI,CAAC;QACnB,mBAAc,GAAG,eAAe,CAAC;QACjC,iBAAY,GAAG,KAAK,CAAC;QACrB,yBAAoB,GAAG,sBAAsB,CAAC;QAC9C,oBAAe,GAAG,IAAI,CAAC;QAUvB,mBAAc,GAAG,KAAK,CAAC;QAMrB,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,eAAe,EAAE,aAAG;YAC9E,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAI,GAAG,CAAC,MAAM,KAAK,aAAa,EAAE;gBAChC,KAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,qBAAqB,EAAE,aAAG;YACpF,IAAI,GAAG,CAAC,MAAM,KAAK,aAAa,EAAE;gBAChC,KAAI,CAAC,WAAW,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC;gBACrC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAM,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;gBACrD,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;gBAClC,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,iBAAiB,EAAE;oBAC5D,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;iBAC5B;qBAAM;oBACL,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;iBAC7B;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAQ,GAAR;QAAA,iBA4BC;QA3BC,IAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,0BAA0B,EAAE,CAAC;QACzE,IAAI,gBAAgB,KAAK,IAAI,EAAE;YAC7B,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;SACtG;aAAM,IAAI,gBAAgB,CAAC,IAAI,KAAK,OAAO,EAAE;YAC5C,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;YAClF,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;SAC1B;QACD,UAAU,CAAC;YACT,IAAI,gBAAgB,IAAI,IAAI,IAAI,gBAAgB,CAAC,IAAI,IAAI,OAAO,EAAE;gBAChE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,EAAE,uBAAuB,CAAC,CAAC;gBAC5D,IAAI,gBAAgB,KAAK,IAAI,IAAI,CAAC,8DAAiB,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,gBAAgB,CAAC,gBAAgB,KAAK,CAAC,EAAE;oBACjI,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;oBACnC,KAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,IAAI,CAAC,CAAC;oBAChG,IAAI,gBAAgB,CAAC,gBAAgB,KAAK,CAAC,IAAI,gBAAgB,CAAC,IAAI,KAAK,MAAM,EAAE;wBAC/E,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;wBACzB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;wBACzB,IAAM,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;wBACrD,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;wBAClC,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,iBAAiB,EAAE;4BAC5D,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;yBAC5B;6BAAM;4BACL,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;yBAC7B;qBACF;iBACF;aACF;QACH,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,6CAAe,GAAf;QAAA,iBAIC;QAHC,UAAU,CAAC;YACf,KAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACD,CAAC;IAGD,yCAAW,GAAX;QACE,IAAI,CAAC,kBAAkB,CAAC,8BAA8B,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,WAAW,CAAC,6BAA6B,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,WAAW,CAAC,iCAAiC,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;QACnE,IAAG,CAAC,8DAAiB,CAAC,IAAI,CAAC,uBAAuB,CAAC,EAAC;YACpD,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,CAAC;SAC1C;QACD,IAAG,CAAC,8DAAiB,CAAC,IAAI,CAAC,uBAAuB,CAAC,EAAC;YAClD,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,CAAC;SAC5C;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,uBAAuB,EAAC,8BAA8B,CAAC,CAAC;IAC3E,CAAC;IAED,4CAAc,GAAd,UAAe,IAAS;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,sCAAQ,GAAR,UAAS,KAAU;QACjB,IAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,0BAA0B,EAAE,CAAC;QACzE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,gBAAgB,CAAC;QAC/C,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACvB,IAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;QACvC,IAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QACvC,IAAI,CAAC,8DAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;YAC7C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACnC,IAAI,IAAI,CAAC,gBAAgB,KAAK,CAAC,EAAE;gBAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;aACtB;iBAAM,IAAI,IAAI,CAAC,gBAAgB,KAAK,CAAC,EAAE;gBACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;aACtB;iBAAM,IAAI,IAAI,CAAC,gBAAgB,KAAK,CAAC,EAAE;gBACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;aACtB;YACD,IAAI,gBAAgB,CAAC,QAAQ,KAAK,aAAa,EAAE;gBAC/C,SAAS,GAAG,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;gBACtC,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;gBACvD,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;gBAC5F,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;aAChC;iBAAM,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;gBACpC,SAAS,GAAG,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;gBACtC,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;gBACvD,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;gBAC5F,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;aAChC;iBAAM;gBACL,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC;gBAClC,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC;gBACnD,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;gBAC5F,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;aAChC;YAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SACxB;IACH,CAAC;IAED,0CAAY,GAAZ;QACE,IAAI,gBAAqB,CAAC;QAC1B,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,0BAA0B,EAAE,CAAC;QACnE,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;QAClD,sCAAsC;QAEtC,IAAI,gBAAgB,CAAC,QAAQ,KAAK,UAAU,EAAE;YAC5C,IAAI,CAAC,8DAAiB,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,gBAAgB,CAAC,gBAAgB,KAAK,CAAC,EAAE;gBACpG,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,gBAAgB,CAAC,gBAAgB,GAAG,CAAC,CAAC;gBACnE,IAAI,CAAC,aAAa,GAAG,gBAAgB,CAAC,gBAAgB,GAAG,CAAC,CAAC;gBAC3D,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,CAAC,EAAE,gBAAgB,CAAC,IAAI,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;aACrI;SACF;aAAM;YACL,IAAI,CAAC,8DAAiB,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,gBAAgB,CAAC,gBAAgB,KAAK,CAAC,EAAE;gBACpG,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,gBAAgB,CAAC,gBAAgB,GAAG,CAAC,CAAC;gBACnE,IAAI,CAAC,aAAa,GAAG,gBAAgB,CAAC,gBAAgB,GAAG,CAAC,CAAC;gBAC3D,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,CAAC,EAAE,gBAAgB,CAAC,IAAI,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;aACrI;SACF;QACD,IAAI,gBAAgB,CAAC,gBAAgB,KAAK,CAAC,EAAE;YAC3C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;aAAM,IAAI,gBAAgB,CAAC,gBAAgB,KAAK,CAAC,EAAE;YAClD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;IACH,CAAC;IAED,uCAAS,GAAT,UAAU,KAAU;QAClB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;QACzC,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;QACrG,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,uBAAuB,CAAC,CAAC;IAC9C,CAAC;IAGD,sCAAQ,GADR;QAEE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IACnF,CAAC;IAED,gDAAkB,GAAlB,UAAmB,KAAU;QAC3B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,qBAAqB,EAAE;YAChD,MAAM,EAAE,aAAa;YACrB,IAAI,EAAE,IAAI,CAAC,cAAc;SAC1B,CAAC,CAAC;IACL,CAAC;IAED,wCAAU,GAAV;QACE,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,OAAO,OAAO,CAAC;SAChB;aAAM;YACL,OAAO,MAAM,CAAC;SACf;IACH,CAAC;IAED,8CAAgB,GAAhB;QACE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;gBACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;gBAC/C,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,6BAA6B,EAAE;oBACxD,MAAM,EAAE,aAAa;iBACtB,CAAC,CAAC;gBACH,IAAI,CAAC,oBAAoB,GAAG,sBAAsB,CAAC;aACpD;iBAAM;gBACL,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,qBAAqB,EAAE;oBAChD,MAAM,EAAE,aAAa;oBACrB,MAAM,EAAE,KAAK;iBACd,CAAC,CAAC;aACJ;SACF;aAAM;YACL,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;IACH,CAAC;IAED,uCAAS,GAAT,UAAU,EAAO,EAAE,IAAS,EAAE,IAAS;QACrC,IAAI,CAAC,8DAAiB,CAAC,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;YACpC,IAAM,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YAEvB,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,EAAE,GAAG,CAAC,CAAC;YACpC,IAAI,IAAI,KAAK,MAAM,EAAE;gBACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;aAC9E;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;aAChF;YACD,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;YAC/B,IAAI,EAAE,KAAK,CAAC,EAAE;gBACZ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;aACtB;iBAAM,IAAI,EAAE,KAAK,CAAC,EAAE;gBACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;aACtB;iBAAM,IAAI,EAAE,KAAK,CAAC,EAAE;gBACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;aACtB;SACF;aAAM;YACL,IAAM,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC;YACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;SAChC;IACH,CAAC;IAED,iDAAmB,GAAnB,UAAoB,KAAU;QAC5B,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;QACpC,IAAI,CAAC,WAAW,GAAG,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,8CAAgB,GAAhB,UAAiB,KAAU,EAAE,MAAe;QAC1C,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;QAC9B,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;IACpC,CAAC;0FAzRU,mBAAmB;uGAAnB,mBAAmB;;;;;;;;uJAAnB,oBAAgB;;YChB7B,uFACE;YAAA;YAAA,4EACE;YAAA;YAAA,yEACE;YAAA;YAAA,yEACE;YAAA;YAAA,8EACE;YAAA;YAAA,8FAEE;YAF6B,oLAAmB,qBAAiB,IAAC;YAElE;YAAA,iIACE;YAEF;YAAA,+EACE;YAAA;YAAA,kIAA0B;YAE5B;YAAA,4DAAW;YACX;YAAA,+EACE;YAAA;YAAA,kIAA0B;YAE5B;YAAA,4DAAW;YACX;YAAA,+EACE;YAAA;YAAA,kIAA0B;YAE5B;YAAA,4DAAW;YACX;YAAA,+EACE;YAAA;YAAA,kIAA0B;YAE5B;YAAA,4DAAW;YACb;YAAA,4DAAuB;YACzB;YAAA,4DAAW;YACX;YAAA,4HACE;YA8BF;YAAA,2EACE;YAAA;YAAA,gFACE;YAAA;YAAA,wFACE;YAAA;YAAA,4EAA4B;YAAA,yEAAa;YAAA,4DAAO;YAChD;YAAA,2EAAuB;YAAA,sEAAiE;YAAA,4DAAM;YAC9F;YAAA,iEACA;YAAA;YAAA,0EACE;YAAA;YAAA,gHACE;YAEJ;YAAA,4DAAK;YACP;YAAA,4DAAmB;YACrB;YAAA,4DAAW;YACb;YAAA,4DAAM;YACR;YAAA,4DAAM;YACN;YAAA,2EACE;YAAA;YAAA,oIACE;YAEF;YAAA,oIACE;YAGF;YAAA,oIACE;YAIF;YAAA,oIACE;YAGJ;YAAA,4DAAM;YACR;YAAA,4DAAM;YACR;YAAA,4DAAM;YACR;YAAA,4DAAoB;YACpB;YAAA,iFACE;YAAA;YAAA,6EAA0E;YAC5E;YAAA,4DAAM;YAQN;;YAzGmB,qFAA0B;YAI3B,0DAAmC;YAAnC,6JAAmC;YAM/B,0DAAwB;YAAxB,qFAAwB;YAIxB,0DAAwB;YAAxB,qFAAwB;YAIxB,0DAAwB;YAAxB,qFAAwB;YAIxB,0DAAwB;YAAxB,qFAAwB;YAM5B,0DAAoB;YAApB,kFAAoB;YAsClB,2DAA+B;YAA/B,oFAA+B;YAS7B,0DAA2B;YAA3B,yFAA2B;YAG3B,0DAA2B;YAA3B,yFAA2B;YAI3B,0DAA2B;YAA3B,yFAA2B;YAK3B,0DAAmD;YAAnD,oHAAmD;YAS3D,0DAAkC;YAAlC,+FAAkC;;8BDhGhD;CA0SC;AA1R+B;6FAAnB,mBAAmB;cAN/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAE5C;ubAGuB,OAAO;kBAA5B,uDAAS;mBAAC,SAAS;YAIC,MAAM;kBAA1B,uDAAS;mBAAC,QAAQ;YA4LnB,QAAQ;kBADP,0DAAY;mBAAC,eAAe,EAAE,CAAC,QAAQ,CAAC;;;;;;;;;;;;;;AEjN3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQuB;AACa;AAIZ;AACmB;AAEyB;AACa;AACL;AACnC;;;;;;;;;;;;;;;ICH3B,0EAAwD;IAAA,0FAA+B;IAAA,4DAAM;;;IAC7F,0EAAoD;IAAA,iFAAsB;IAAA,4DAAM;;;IAehF,0EAAoD;IAAA,kFAAuB;IAAA,4DAAM;;;IAgBjF,0EAAkD;IAAA,wFAA6B;IAAA,4DAAM;;;IA+BvF,0EAA2C;IAAA,uDAAiB;IAAA,4DAAM;;;IAAvB,0DAAiB;IAAjB,8FAAiB;;;IAE1D,0EAAmD;IAAA,uDAAkB;IAAA,4DAAM;;;IAAxB,0DAAkB;IAAlB,sFAAkB;;;IAcvE,0EAA4C;IAAA,uDAAkB;IAAA,4DAAM;;;IAAxB,0DAAkB;IAAlB,gGAAkB;;;IAE5D,0EAAoD;IAAA,uDAAmB;IAAA,4DAAM;;;IAAzB,0DAAmB;IAAnB,wFAAmB;;;AD5ErF;IAwDE,8BACU,WAA8B,EAC/B,MAAqB,EACrB,aAAkC,EACjC,aAA4B,EAC5B,GAAsB;QALhC,iBAgBC;QAfS,gBAAW,GAAX,WAAW,CAAmB;QAC/B,WAAM,GAAN,MAAM,CAAe;QACrB,kBAAa,GAAb,aAAa,CAAqB;QACjC,kBAAa,GAAb,aAAa,CAAe;QAC5B,QAAG,GAAH,GAAG,CAAmB;QAtDzB,WAAM,GAAQ,EAAE,CAAC;QACjB,aAAQ,GAAU,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QACpC,aAAQ,GAAU,CAAC,gBAAgB,EAAE,eAAe,EAAE,eAAe,EAAE,QAAQ,CAAC,CAAC;QACxF,wBAAmB,GAAiB,iDAAY,CAAC,KAAK,CAAC;QACvD,wBAAmB,GAAiB,iDAAY,CAAC,KAAK,CAAC;QACvD,wBAAmB,GAAiB,iDAAY,CAAC,KAAK,CAAC;QACvD,yBAAoB,GAAiB,iDAAY,CAAC,KAAK,CAAC;QACxD,mCAA8B,GAAiB,iDAAY,CAAC,KAAK,CAAC;QAClE,qBAAgB,GAAG;YACjB,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;YACZ,cAAc,EAAE,EAAE;YAClB,WAAW,EAAE,EAAE;YACf,UAAU,EAAE,EAAE;YACd,MAAM,EAAE,EAAE;SACX,CAAC;QACF,kBAAa,GAAG,KAAK,CAAC;QACtB,kBAAa,GAAG,KAAK,CAAC;QACtB,gBAAW,GAAG,KAAK,CAAC;QACpB,kBAAa,GAAG,KAAK,CAAC;QACtB,iBAAY,GAAG,KAAK,CAAC;QACrB,sBAAiB,GAAG,KAAK,CAAC;QAC1B,oBAAe,GAAsB,EAAE,CAAC;QAexC,cAAS,GAAG,KAAK,CAAC;QAKlB,mBAAc,GAAG,uCAAuC,CAAC;QACzD,oBAAe,GAAG,uCAAuC,CAAC;QAChD,aAAQ,GAAsB,IAAI,0DAAY,EAAO,CAAC;QACtD,iBAAY,GAAG,IAAI,0DAAY,EAAO,CAAC;QAW/C,IAAI,CAAC,eAAe,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC9E,IAAI,CAAC,QAAQ,GAAG,IAAI,0DAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,wBAAwB,EAAE,aAAG;YACnF,IAAI,GAAG,CAAC,MAAM,KAAK,aAAa,IAAI,GAAG,CAAC,gBAAgB,KAAK,CAAC,EAAE;gBAC9D,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;gBAC/B,KAAI,CAAC,WAAW,EAAE,CAAC;aACpB;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,uCAAQ,GAAR;QAAA,iBAoBC;QAlBC,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAClD,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACnD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,0BAA0B,EAAE,CAAC,IAAI,CAAC;QAC7E,IAAI,IAAI,CAAC,gBAAgB,KAAK,SAAS,EAAE;YACvC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;YACjE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;YACjE,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC;YAC7E,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;YAC/D,IAAI,CAAC,gBAAgB,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC;YACxE,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC;YAC7D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC;YAC5C,UAAU,CAAC;gBACT,KAAI,CAAC,OAAO,GAAG,CAAC,IAAI,IAAI,CAAC,KAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,EAAE,IAAI,IAAI,CAAC,KAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,CAAC;YAClH,CAAC,CAAC,CAAC;YACH,UAAU,CAAC;gBACT,KAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,KAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,EAAE,IAAI,IAAI,CAAC,KAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,CAAC;YACnH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,0CAAW,GAAX;QACE,IAAG,CAAC,8DAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAC;YAC9C,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;SACtC;QAAA,IAAG,CAAC,8DAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAC;YAC/C,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;SACtC;QAAA,IAAG,CAAC,8DAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAC;YAC/C,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;SACtC;QAAA,IAAG,CAAC,8DAAiB,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAC;YAChD,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;SACvC;QAAA,IAAG,CAAC,8DAAiB,CAAC,IAAI,CAAC,8BAA8B,CAAC,EAAC;YAC1D,IAAI,CAAC,8BAA8B,CAAC,WAAW,EAAE,CAAC;SACjD;IACb,CAAC;IAGD,8CAAe,GAAf;QAAA,iBASC;QARC,IAAI,IAAI,CAAC,gBAAgB,KAAK,SAAS,EAAE;YACvC,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;QACD,IAAM,IAAI,GAAG,CAAC,iEAAiE,EAAE,iEAAiE,EAAE,0EAA0E,EAAE,0IAA0I,CAAC,CAAC;QAC5W,UAAU,CAAC;YACT,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;IAC3B,CAAC;IAED,2CAAY,GAAZ,UAAa,IAAS;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,8CAAe,GAAf,UAAgB,KAAU;QACxB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,gCAAgC,CAAC,CAAC;QAC9E,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,iBAAiB,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,KAAK,iBAAiB,EAAE;YAChG,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;YACzB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;YAC1B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;IACH,CAAC;IAED,4CAAa,GAAb;QAAA,iBAgDC;QA9CC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,EAAE,CAAC;QACpC,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,EAAE,CAAC;QAC1C,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,EAAE,CAAC;QACvC,IAAI,CAAC,gBAAgB,CAAC,UAAU,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAE3B,IAAM,IAAI,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC;QACjE,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAChD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;gBACvF,IAAI,WAAW,CAAC,MAAM,KAAK,IAAI,EAAE;oBAC/B,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC/B,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;wBAC9B,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,kBAAkB,EAAE;4BAC7C,KAAK,EAAE,KAAK;4BACZ,OAAO,EAAE,qCAAqC;4BAC9C,WAAW,EAAE,KAAI,CAAC,iBAAiB;yBACpC,CAAC,CAAC;qBACJ;yBAAM,IAAI,KAAI,CAAC,iBAAiB,EAAE;wBACjC,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;wBAC/B,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,kBAAkB,EAAE;4BAC7C,KAAK,EAAE,KAAK;4BACZ,OAAO,EAAE,qCAAqC;4BAC9C,WAAW,EAAE,KAAI,CAAC,iBAAiB;yBACpC,CAAC,CAAC;qBACJ;iBACF;qBAAM;oBACL,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;iBAChC;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;SAChC;QACD,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAChD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,kBAAkB,EAAE;gBAC7C,KAAK,EAAE,KAAK;gBACZ,OAAO,EAAE,6BAA6B;gBACtC,WAAW,EAAE,IAAI;aAClB,CAAC,CAAC;SACJ;QACD,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,yCAAU,GAAV;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;QACpD,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,aAAa;eAClE,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC7D,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,kBAAkB,EAAE;gBAC7C,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;aAC9B,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,wBAAwB,EAAE;gBACnD,KAAK,EAAE,KAAK;aACb,CAAC,CAAC;SACJ;IACH,CAAC;IAED,0CAAW,GAAX;QACE,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YACrD,IAAM,KAAK,GAAG,IAAI,CAAC;YACnB,IAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,0BAA0B,EAAE,CAAC,gBAAgB,CAAC;YAC1F,IAAI,KAAK,EAAE;gBACT,IAAI,gBAAgB,KAAK,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,KAAK,EAAE,EAAE;oBACtE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;iBACjC;qBAAM;oBACL,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,kBAAkB,EAAE;wBAC7C,KAAK,EAAE,KAAK;wBACZ,WAAW,EAAE,KAAK;qBACnB,CAAC,CAAC;iBACJ;aACF;SACF;IACH,CAAC;IAED,2CAAY,GAAZ;QAAA,iBAiBC;QAhBC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,kBAAQ;YACzE,IAAI,QAAQ,CAAC,MAAM,KAAK,IAAI,EAAE;gBAC5B,KAAI,CAAC,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC;gBAC7B,KAAI,CAAC,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC;gBAC7B,KAAI,CAAC,UAAU,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBAClE,KAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC/B,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC9B,KAAI,CAAC,UAAU,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChE,KAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;gBAChC,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;gBAC/B,KAAI,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;gBAC9B,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACnE,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAChC,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;aAChC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAQ,GAAR,UAAS,KAAU;IACnB,CAAC;IAED,0CAAW,GAAX,UAAY,KAAU;QAAtB,iBA0DC;QAzDC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAM,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QAC1C,IAAM,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QACxC,IAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QACrC,IAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QACxC,IAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QACtC,IAAM,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACzB,IAAM,OAAO,GAAQ;YACnB,UAAU;YACV,WAAW,EAAE,WAAW,GAAG,CAAC;YAC5B,SAAS;YACT,QAAQ;YACR,SAAS,EAAE,SAAS,GAAG,CAAC;YACxB,OAAO;SACR,CAAC;QACF,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;YAC5G,IAAI,WAAW,CAAC,MAAM,KAAK,IAAI,EAAE;gBAC/B,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACnD,IAAI,KAAI,CAAC,OAAO,GAAG,CAAC,EAAE;oBACpB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;iBACvB;qBAAM;oBACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,KAAI,CAAC,OAAO,GAAG,CAAC,CAAC;iBAClB;gBACD,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,KAAI,CAAC,OAAO,GAAG,CAAC,IAAI,KAAI,CAAC,OAAO,GAAG,EAAE,EAAE;oBACzC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,KAAI,CAAC,cAAc,GAAG,uCAAuC,CAAC;iBAC/D;qBAAM;oBACL,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;iBAC3B;gBACD,KAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;gBAChD,IAAM,MAAI,GAAG,IAAI,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC5D,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,MAAI,CAAC,WAAW,EAAE,CAAC,CAAC;gBACpD,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC9C,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAI,CAAC,OAAO,EAAE,CAAC,CAAC;gBAC5C,OAAO,CAAC,GAAG,CAAC,MAAI,EAAE,oBAAoB,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC;aAC3D;iBAAM;gBACL,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;gBACzB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC3B;YACD,KAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;YAChD,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAC5D,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;YACpD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,UAAU,EAAE,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YACxF,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC3C,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;YAC5C,KAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,2CAAY,GAAZ,UAAa,KAAU;QAAvB,iBAsCC;QArCC,IAAI,KAAK,IAAI,IAAI,EAAE;YACjB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACtD,IAAM,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;YAC1C,IAAM,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YACxC,IAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;YACrC,IAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;YACxC,IAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YACtC,IAAM,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;YACnC,IAAM,OAAO,GAAQ;gBACnB,UAAU;gBACV,WAAW,EAAE,WAAW,GAAG,CAAC;gBAC5B,SAAS;gBACT,QAAQ;gBACR,SAAS,EAAE,SAAS,GAAG,CAAC;gBACxB,OAAO;aACR,CAAC;YACF,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;gBAC5G,IAAI,WAAW,CAAC,MAAM,KAAK,IAAI,EAAE;oBAC/B,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACpD,IAAI,KAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;wBACrB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;qBACvB;yBAAM;wBACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;wBACvB,KAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;qBACnB;oBACD,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;oBAC3B,IAAI,KAAI,CAAC,OAAO,GAAG,CAAC,IAAI,KAAI,CAAC,OAAO,GAAG,EAAE,EAAE;wBACzC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBAC1B,KAAI,CAAC,eAAe,GAAG,sCAAsC,CAAC;qBAC/D;yBAAM;wBACL,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;qBAC5B;iBACF;gBACD,KAAI,CAAC,UAAU,EAAE,CAAC;YACpB,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,uCAAQ,GAAR,UAAS,gBAAqB;QAA9B,iBAiCC;QAhCC,IAAM,IAAI,GAAG;YACX,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ;YACzC,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ;YACzC,eAAe,EAAE,IAAI,CAAC,gBAAgB,CAAC,cAAc;YACrD,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW;YACvC,cAAc,EAAE,IAAI,CAAC,gBAAgB,CAAC,UAAU;YAChD,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,eAAe,EAAE,IAAI,CAAC,gBAAgB;YACtC,aAAa,EAAE,IAAI,CAAC,cAAc;YAClC,SAAS,EAAE,CAAC;YACZ,QAAQ,EAAE,CAAC;YACX,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM;SACtC,CAAC;QACF,YAAY,CAAC,OAAO,CAAC,qBAAqB,EAAE,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;QAClF,cAAc,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QACpE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;YACvF,IAAI,WAAW,CAAC,MAAM,KAAK,IAAI,EAAE;gBAC/B,IAAI,KAAI,CAAC,MAAM,KAAK,EAAE,IAAI,KAAI,CAAC,MAAM,KAAK,SAAS,IAAI,KAAI,CAAC,MAAM,KAAK,WAAW,EAAE;oBAClF,IAAI,KAAI,CAAC,SAAS,EAAE;wBAClB,KAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC;qBACjD;oBACD,KAAI,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC;iBAChC;qBAAM;oBACL,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC;iBAC3B;gBACD,IAAI,CAAC,OAAO,GAAG,KAAI,CAAC,MAAM,CAAC;gBAC3B,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE;oBACnB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,gBAAgB,oBAAE,IAAI,QAAE,CAAC,CAAC;iBACpD;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAa,GAAb,UAAc,QAAa;QACzB,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChC,IAAM,SAAS,GAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;QAClE,OAAO,SAAS,CAAC,WAAW,EAAE,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC;IAChG,CAAC;4FA1XU,oBAAoB;wGAApB,oBAAoB;;;;;;;;YC1BjC,2EACE;YAAA;YAAA,sFACE;YAAA;YAAA,yEAA4B;YAAA,6EAAkB;YAAA,4DAAM;YACpD;YAAA,gEACA;YAAA;YAAA,6EACE;YAD0B,4IAAU,gBAAY,IAAC;YACjD;YAAA,0EACE;YAAA;YAAA,0EACE;YAAA;YAAA,0EACE;YAAA;YAAA,4EAA4D;YAAA,4EAAgB;YAAA,2EAA6B;YAAA,8EACvG;YAAA,4DAAO;YAAA,qEACqD;YAAA,4DAAQ;YACtE;YAAA,iFAIA;YAHO,4MAAuC,sFAC7B,mBAAe,IADc;YAD9C,4DAIA;YAAA;YAAA,yEACE;YAAA;YAAA,mHAAwD;YACxD;YAAA,mHAAoD;YACtD;YAAA,qEAAe;YACjB;YAAA,4DAAM;YACR;YAAA,4DAAM;YACN;YAAA,0EACE;YAAA;YAAA,0EACE;YAAA;YAAA,6EAA2D;YAAA,gFAAoB;YAAA,2EAA6B;YAAA,8EAC1G;YAAA,4DAAO;YAAA,sEACqD;YAAA,4DAAQ;YACtE;YAAA,sFAIA;YAHE,iNAAuC,qHAE6C,2BAAuB,IAFpE;YAGzC;YAAA,4DAAa;YACb;YAAA,yEACE;YAAA;YAAA,mHAAoD;YACtD;YAAA,qEAAe;YACjB;YAAA,4DAAM;YACR;YAAA,4DAAM;YACN;YAAA,0EACE;YAAA;YAAA,0EACE;YAAA;YAAA,6EAAkE;YAAA,4EAAgB;YAAA,2EACzD;YAAA,8EACvB;YAAA,4DAAO;YAAA,sEAC2F;YAAA,4DAAQ;YAC5G;YAAA,sFAIA;YAHE,uNAA6C;YAG/C;YAAA,4DAAa;YACb;YAAA,yEACE;YAAA;YAAA,mHAAkD;YACpD;YAAA,qEAAe;YACjB;YAAA,4DAAM;YACR;YAAA,4DAAM;YACR;YAAA,4DAAM;YACN;YAAA,0EACE;YAAA;YAAA,0EACE;YAAA;YAAA,6EAAoE;YAAA,mFAAuB;YAAA,4DAAQ;YACnG;YAAA,gFAGE;YAFQ,kNAA0C;YAElD;YAAA,4DAAW;YACf;YAAA,4DAAM;YACN;YAAA,2EACE;YAAA;YAAA,6EAAsE;YAAA,oFAAwB;YAAA,4DAAQ;YACtG;YAAA,gFAE6E;YADnE,iNAAyC;YACe,4DAAW;YAC/E;YAAA,4DAAM;YACR;YAAA,4DAAM;YACN;YAAA,2EACE;YAAA;YAAA,2EACE;YAAA;YAAA,2EACE;YAAA;YAAA,8EAA2D;YAAA,4EAAe;YAAA,4EAA6B;YAAA,+EACrG;YAAA,4DAAO;YAAA,uEACqD;YAAA,4DAAQ;YACtE;YAAA,8EAKA;YAL8D,mKAAiB,uBAAmB,IAAC;YAAnG,4DAKA;YAAA;YAAA,qHAA2C;YAC3C;YAAA,0EACE;YAAA;YAAA,qHAAmD;YACrD;YAAA,qEAAe;YACjB;YAAA,4DAAM;YACR;YAAA,4DAAM;YACN;YAAA,2EACE;YAAA;YAAA,2EACE;YAAA;YAAA,8EAA4D;YAAA,6EAAgB;YAAA,4EAA6B;YAAA,+EACvG;YAAA,4DAAO;YAAA,uEACqD;YAAA,4DAAQ;YACtE;YAAA,8EAKA;YAJO,mKAAiB,wBAAoB,IAAC;YAD7C,4DAKA;YAAA;YAAA,qHAA4C;YAC5C;YAAA,0EACE;YAAA;YAAA,qHAAoD;YACtD;YAAA,qEAAe;YACjB;YAAA,4DAAM;YACR;YAAA,4DAAM;YACR;YAAA,4DAAM;YACR;YAAA,4DAAO;YACT;YAAA,4DAAmB;YACrB;YAAA,4DAAW;YACX;;YAhGiF,2DAAqC;YAArC,kGAAqC;YAGnG,0DAAuC;YAAvC,kGAAuC;YAId,0DAAyB;YAAzB,uFAAyB;YACzB,0DAAqB;YAArB,mFAAqB;YAOgB,2DAAqC;YAArC,kGAAqC;YAGxG,0DAAuC;YAAvC,kGAAuC;YAKT,0DAAqB;YAArB,mFAAqB;YASvC,2DAAqC;YAArC,kGAAqC;YAEjD,0DAA6C;YAA7C,wGAA6C;YAKf,0DAAmB;YAAnB,iFAAmB;YAS3C,2DAA0C;YAA1C,qGAA0C;YAO1C,0DAAyC;YAAzC,oGAAyC;YAQgB,2DAAqC;YAArC,kGAAqC;YAG/B,0DAAqB;YAArB,gFAAqB;YAIvF,0DAAe;YAAf,6EAAe;YAEY,0DAAoB;YAApB,kFAAoB;YAOc,2DAAqC;YAArC,kGAAqC;YAI3E,0DAAsB;YAAtB,iFAAsB;YAG7C,0DAAgB;YAAhB,8EAAgB;YAEW,0DAAqB;YAArB,mFAAqB;;+BDjGjE;CAqZC;AA3XgC;6FAApB,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;+dA+CW,QAAQ;kBAAjB,oDAAM;YACG,YAAY;kBAArB,oDAAM;YAC0B,WAAW;kBAA3C,uDAAS;mBAAC,aAAa;YACM,OAAO;kBAApC,uDAAS;mBAAC,SAAS;;;;;;;;;;;;;;AE3EtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKuB;AAC2C;AACa;AACtC;AACP;AAGS;AAC+B;AACjC;;;;;;;;;;;;;ICM/B,wEACE;IAAA;IAAA,2EAA0B;IAAA,uDAAmD;IAAA,4DAAO;IACtF;IAAA,qEAAe;;;IADa,0DAAmD;IAAnD,gIAAmD;;;;IAfjF,0EACE;IAAA;IAAA,2EAA4B;IAAA,uDAA4C;IAAA,4DAAQ;IAAA,2EAC3C;IAAA,8DAAE;IAAA,4DAAO;IAC9C;IAAA,8FAUA;IANE,oYAAiD;IAMnD;IAAA,4DAA0B;IAC1B;IAAA,sJACE;IAEJ;IAAA,4DAAM;;;IAhBwB,0DAA4C;IAA5C,yHAA4C;IAItE,0DAA8B;IAA9B,uFAA8B;IASlB,0DAAkB;IAAlB,mFAAkB;;;IAoBhC,wEACE;IAAA;IAAA,2EAA0B;IAAA,uDAAsD;IAAA,4DAAO;IACzF;IAAA,qEAAe;;;IADa,0DAAsD;IAAtD,oIAAsD;;;;IAfpF,0EACE;IAAA;IAAA,2EAA4B;IAAA,uDAA+C;IAAA,4DAAQ;IAAA,2EAC9C;IAAA,8DAAE;IAAA,4DAAO;IAC9C;IAAA,8FAUA;IANE,qXAAuC;IAMzC;IAAA,4DAA0B;IAC1B;IAAA,sJACE;IAEJ;IAAA,4DAAM;;;IAhBwB,0DAA+C;IAA/C,4HAA+C;IAIzE,0DAA8B;IAA9B,uFAA8B;IASlB,0DAAqB;IAArB,sFAAqB;;;IASnC,qEAEA;;;IAF6F,sGAAqC;;;IAclI,wEACE;IAAA;IAAA,2EAA0B;IAAA,uDAAoD;IAAA,4DAAO;IACvF;IAAA,qEAAe;;;IADa,0DAAoD;IAApD,kIAAoD;;;;IAlBlF,0EACE;IAAA;IAAA,2EAA4B;IAAA,uDAA6C;IAAA,4DAAQ;IAAA,2EAC5C;IAAA,8DAAE;IAAA,4DAAO;IAC9C;IAAA,kIAEA;IAAA;IAAA,8FAWA;IAPE,mXAAqC;IAOvC;IAAA,4DAA0B;IAC1B;IAAA,sJACE;IAEJ;IAAA,4DAAM;;;IAnBwB,0DAA6C;IAA7C,0HAA6C;IAEnD,0DAA4B;IAA5B,6FAA4B;IAIhD,0DAA8B;IAA9B,uFAA8B;IAUlB,0DAAmB;IAAnB,oFAAmB;;;IAsBjC,wEACE;IAAA;IAAA,2EAA0B;IAAA,uDAAsD;IAAA,4DAAO;IACzF;IAAA,qEAAe;;;IADa,0DAAsD;IAAtD,oIAAsD;;;;IAfpF,0EACE;IAAA;IAAA,2EAA4B;IAAA,uDAA+C;IAAA,4DAAQ;IAAA,2EAC9C;IAAA,8DAAE;IAAA,4DAAO;IAC9C;IAAA,8FAUA;IANE,qXAAuC;IAMzC;IAAA,4DAA0B;IAC1B;IAAA,sJACE;IAEJ;IAAA,4DAAM;;;IAhBwB,0DAA+C;IAA/C,4HAA+C;IAIzE,0DAA8B;IAA9B,uFAA8B;IASlB,0DAAqB;IAArB,sFAAqB;;;IAoBnC,wEACE;IAAA;IAAA,2EAA0B;IAAA,uDAAqD;IAAA,4DAAO;IACxF;IAAA,qEAAe;;;IADa,0DAAqD;IAArD,mIAAqD;;;;IAfnF,0EACE;IAAA;IAAA,2EAA4B;IAAA,uDAA8C;IAAA,4DAAQ;IAAA,2EAC7C;IAAA,8DAAE;IAAA,4DAAO;IAC9C;IAAA,8FAUA;IANE,oXAAsC;IAMxC;IAAA,4DAA0B;IAC1B;IAAA,sJACE;IAEJ;IAAA,4DAAM;;;IAhBwB,0DAA8C;IAA9C,2HAA8C;IAIxE,0DAA8B;IAA9B,uFAA8B;IASlB,0DAAoB;IAApB,qFAAoB;;;IAwBhC,uFACoC;IAAA,uDAAwC;IAAA,4DAAmB;;;IAA7E,0EAAiB;IAAC,0DAAwC;IAAxC,4GAAwC;;ADxHxF,IAAM,MAAM,GAAG,mBAAO,CAAC,uDAA2C,CAAC,CAAC;AAMpE;IAkDE,wCACU,WAA8B,EAC/B,MAAqB,EACpB,aAA4B,EAC7B,aAAkC;QAJ3C,iBAqBC;QApBS,gBAAW,GAAX,WAAW,CAAmB;QAC/B,WAAM,GAAN,MAAM,CAAe;QACpB,kBAAa,GAAb,aAAa,CAAe;QAC7B,kBAAa,GAAb,aAAa,CAAqB;QAhD3C,wBAAmB,GAAiB,iDAAY,CAAC,KAAK,CAAC;QAGvD,mBAAc,GAAG,EAAE,CAAC;QAIpB,aAAQ,GAAQ,EAAE,CAAC;QAEnB,cAAS,GAAQ,EAAE,CAAC;QACpB,gBAAW,GAAQ,EAAE,CAAC;QACtB,WAAM,GAAQ,EAAE,CAAC;QACjB,YAAO,GAAQ,EAAE,CAAC;QAClB,cAAS,GAAQ,EAAE,CAAC;QACpB,cAAS,GAAQ,EAAE,CAAC;QAWpB,cAAS,GAAG,KAAK,CAAC;QAClB,aAAQ,GAAQ,GAAG,CAAC;QAEpB,gBAAW,GAAG,IAAI,CAAC;QAInB,YAAO,GAAG,IAAI,CAAC;QACf,aAAQ,GAAG,IAAI,CAAC;QAChB,2BAAsB,GAAG,EAAE,CAAC;QAC5B,oBAAe,GAAsB,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC5F,aAAQ,GAAG,IAAI,0DAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;QACpD,cAAS,GAAG,KAAK,CAAC;QAClB,cAAS,GAAG,KAAK,CAAC;QAClB,qBAAgB,GAAG,KAAK,CAAC;QACD,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QAChD,aAAQ,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAChE,yBAAoB,GAAG,KAAK,CAAC;QAC7B,eAAU,GAAQ,EAAE,CAAC;QAOnB,IAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,0BAA0B,EAAE,CAAC;QACzE,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC,gBAAgB,CAAC;QAC1D,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC,IAAI,CAAC;QAClC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,kCAAkC,EAAE,aAAG;YAC7F,IAAI,GAAG,CAAC,MAAM,KAAK,aAAa,IAAI,GAAG,CAAC,gBAAgB,KAAK,CAAC,EAAE;gBAC9D,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;gBAC/B,KAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,sBAAsB,GAAG;YAC5B,iBAAiB,EAAE,IAAI;YACvB,iBAAiB,EAAE,IAAI;YACvB,cAAc,EAAE,CAAC;SAClB,CAAC;IACJ,CAAC;IAED,iDAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACvD,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAClD,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAEnD,IAAI,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,iBAAiB,EAAE;YAC7D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,IAAI,CAAC,UAAU,KAAK,MAAM,EAAE;gBAC9B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;aACrB;iBAAM;gBACL,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;aACrB;SACF;QAGD,IAAI,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,KAAK,SAAS,IAAI,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,IAAI,IAAI,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,MAAM,EAAE;YAC9J,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;SACvE;QAED,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YAC3B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,uBAAuB,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC;YAC9D,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC;YAC1D,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,uBAAuB,CAAC,CAAC;YACjE,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC1C;QACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,0BAA0B,EAAE,CAAC,IAAI,CAAC;QAC7E,IAAI,IAAI,CAAC,gBAAgB,KAAK,SAAS,EAAE;YACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC;YAC7C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;YAC3C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;YACjD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC;YAClD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;YAC/C,IAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,KAAK,SAAS,EAAE;gBACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;aAC9D;YACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;YACvC,IAAI,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;gBACxD,IAAI,CAAC,YAAY,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,GAAC,OAAO,CAAC,CAAC,CAAC;aACxF;YACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC;SAC1D;IACH,CAAC;IAED,oDAAW,GAAX;QACE,IAAG,CAAC,8DAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAC;YAC9C,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;SACtC;IACL,CAAC;IAED,wDAAe,GAAf;QAAA,iBAMC;QALC,IAAI,IAAc,CAAC;QACnB,IAAI,GAAG,CAAC,0LAA0L,EAAE,+GAA+G,EAAE,6GAA6G,CAAC,CAAC;QACpa,UAAU,CAAC;YACX,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qDAAY,GAAZ,UAAa,IAAS;QACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,iDAAQ,GAAR,UAAS,gBAAqB;QAA9B,iBAiCC;QAhCC,IAAI,IAAI,CAAC,cAAc,KAAK,MAAM,EAAE;YAClC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACpB;QACD,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE;YAC3B,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC/B,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YACjC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACrC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC;YAC7C,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAC3B,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YAC3C,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAE,OAAO,CAAC,CAAC,CAAC;YACvE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;YACtC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;gBAChE,IAAI,WAAW,CAAC,MAAM,KAAK,IAAI,EAAE;oBAC/B,IAAG,CAAC,KAAI,CAAC,SAAS,IAAI,KAAI,CAAC,SAAS,KAAK,IAAI,EAAE;wBAC7C,KAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;qBAC9C;yBAAM;wBACL,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE;4BACnB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,gBAAgB,oBAAE,IAAI,EAAE,KAAI,CAAC,IAAI,EAAC,CAAC,CAAC;yBAC7D;qBACF;iBACF;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,yDAAgB,GAAhB;QAAA,iBAqBC;QApBC,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,UAAC,WAAgB;YAC7D,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,WAAW,CAAC,MAAM,KAAK,IAAI,EAAE;gBAC7B,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;gBACpD,KAAI,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACzC,8CAA8C;gBAC9C,IAAM,cAAc,GAAG,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACrD,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;gBACpB,KAAK,IAAI,CAAC,GAAG,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;oBACnD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;iBACnD;gBACD,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAC,EAAO,EAAE,EAAO,IAAK,SAAE,GAAG,EAAE,EAAP,CAAO,CAAC,CAAC;gBACpE,KAAI,CAAC,SAAS,GAAG,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAChD,KAAI,CAAC,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACjD,KAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;gBACjC,KAAI,CAAC,UAAU,EAAE,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mDAAU,GAAV,UAAW,CAAM,EAAE,CAAM;QACvB,OAAO,CAAC,GAAG,CAAC,CAAC;IACf,CAAC;IAGD,0DAAiB,GAAjB,UAAkB,KAAU;QAC1B,sBAAsB;IACxB,CAAC;IAED,mDAAU,GAAV,UAAW,KAAU;QACnB,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aACzB;YACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;IACH,CAAC;IAED,mDAAU,GAAV;QAAA,iBAMC;QALC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAE,CAAC,EAAE;YAC7B,UAAU,CAAC;gBACT,KAAI,CAAC,mBAAmB,EAAE,CAAC;YAC7B,CAAC,EAAE,GAAG,CAAC,CAAC;SACT;IACH,CAAC;IAED,oDAAW,GAAX,UAAY,KAAU;QACpB,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC1B;YACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;IACH,CAAC;IAED,sDAAa,GAAb,UAAc,KAAU;QACtB,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC3B;iBAAM;gBACL,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC5B;YACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;IACH,CAAC;IAED,sDAAa,GAAb,UAAc,KAAU;QACtB,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC3B;iBAAM;gBACL,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC5B;YACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;IACH,CAAC;IAED,qDAAY,GAAZ,UAAa,KAAU;QACrB,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aAC1B;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC3B;YACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;IACH,CAAC;IAED,0DAAiB,GAAjB;QACE,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS;eAC5D,IAAI,CAAC,WAAW,KAAK,SAAS,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS;eAClE,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS;eACpD,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,aAAa;eAC/D,CAAC,CAAC,IAAI,CAAC,YAAY,KAAK,SAAS,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC;eAClI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;YAChC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,kBAAkB,EAAE;gBAC7C,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;YACH,2BAA2B;YAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,kBAAkB,EAAE;gBAC7C,KAAK,EAAE,KAAK;gBACZ,OAAO,EAAE,iCAAiC;gBAC1C,WAAW,EAAE,IAAI;aAClB,CAAC,CAAC;SACJ;IACH,CAAC;IAED,oDAAW,GAAX,UAAY,KAAU;IACtB,CAAC;IAED,gDAAO,GAAP,UAAQ,KAAU;QAChB,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE;YACzD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;QACD,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,SAAS,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE;YAClH,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;QACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,0DAAiB,GAAjB;QAAA,iBA0BC;QAzBC,IAAI,IAAI,CAAC,cAAc,KAAK,MAAM,EAAE;YAClC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACpB;QACD,IAAI,IAAI,CAAC,cAAc,KAAK,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,EAAE;YAC9R,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;SACvB;aAAI;YACH,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAC,IAAI,CAAC,SAAS,EAAC,IAAI,CAAC,SAAS,EAAC,IAAI,CAAC,OAAO,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACpF,IAAM,QAAQ,GAAQ;gBACpB,OAAO,EAAE,IAAI,CAAC,MAAM;gBACpB,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,WAAW,EAAE,IAAI,CAAC,SAAS;gBAC3B,cAAc,EAAE,IAAI,CAAC,OAAO;gBAC5B,UAAU,EAAE,IAAI,CAAC,QAAQ;gBACzB,gBAAgB,EAAE,EAAE;gBACpB,YAAY,EAAE,IAAI,CAAC,YAAY,GAAG,OAAO;gBACzC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;aAC5B,CAAC;YACF,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;gBACvE,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACjD,CAAC,CAAC,CAAC;SACJ;IACD,CAAC;IAED,iDAAQ,GAAR,UAAS,KAAU;QACjB,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;YAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;QACD,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,SAAS,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE;YAClH,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;QACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,4DAAmB,GAAnB;QAAA,iBA+BC;QA9BC,IAAI,IAAI,CAAC,UAAU,KAAK,MAAM,EAAE;YAC9B,IAAM,WAAS,GAAG,IAAI,CAAC,MAAM,CAAC;YAC9B,IAAM,eAAa,GAAQ,EAAE,CAAC;YAC9B,IAAI,WAAS,KAAK,SAAS,IAAI,WAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,CAAM;oBAC7B,IAAM,SAAS,GAAG,WAAS,CAAC,SAAS,CAAC,UAAC,CAAM,IAAI,QAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,EAAzB,CAAyB,CAAC,CAAC;oBAC5E,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE;wBACpB,eAAa,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;qBACzC;gBACH,CAAC,CAAC,CAAC;aACJ;YACD,OAAO,CAAC,GAAG,CAAC,eAAa,EAAE,cAAc,CAAC,CAAC;YAC3C,IAAI,CAAC,OAAO,GAAG,eAAa,CAAC;YAC7B,IAAG,eAAa,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC7B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;aAClC;iBAAK;gBACJ,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;aACnC;YACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;YACtC,IAAI,CAAC,8DAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBAClC,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,CAAM,IAAI,YAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAxB,CAAwB,CAAC,CAAC;gBACrE,IAAI,CAAC,KAAK,EAAE;oBACV,IAAI,CAAC,OAAO,GAAE,EAAE,CAAC;oBACjB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;iBAC1B;gBACH,IAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAC,GAAQ,IAAK,YAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAA1B,CAA0B,CAAC,CAAC;gBACnF,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC1B,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC;aAC7B;SACF;IACH,CAAC;IAED,8DAAqB,GAArB,UAAsB,gBAAqB;QAA3C,iBAsBC;QArBC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QACpC,IAAM,IAAI,GAAG;YACX,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;YAC1B,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;YAC1C,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;YACtC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;YAC3C,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;SACxC,CAAC;QACF,IAAI,WAAW,CAAC;QAChB,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;YACpE,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;YACxC,IAAI,WAAW,CAAC,MAAM,KAAK,IAAI,EAAC;gBAC9B,IAAI,WAAW,CAAC,IAAI,KAAK,CAAC,EAAC;oBACzB,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE;wBACnB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,gBAAgB,oBAAE,IAAI,EAAE,KAAI,CAAC,IAAI,EAAC,CAAC,CAAC;qBAC7D;iBACF;aACF;iBAAM,IAAI,WAAW,CAAC,MAAM,KAAK,QAAQ,EAAC;gBACzC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aACvC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;gHAvYU,8BAA8B;kHAA9B,8BAA8B;YCrB3C,8EACE;YAAA;YAAA,sFACE;YAAA;YAAA,yEAA4B;YAAA,iFAAsB;YAAA,4DAAM;YACxD;YAAA,gEACA;YAAA;YAAA,yEACE;YAAA;YAAA,0EACE;YAAA;YAAA,6HACE;YAiBJ;YAAA,4DAAM;YACN;YAAA,0EACE;YAAA;YAAA,6HACE;YAiBJ;YAAA,4DAAM;YACN;YAAA,0EACE;YAAA;YAAA,6HACE;YAoBJ;YAAA,4DAAM;YACR;YAAA,4DAAM;YACN;YAAA,0EACE;YAAA;YAAA,0EACE;YAAA;YAAA,6HACE;YAiBJ;YAAA,4DAAM;YACN;YAAA,0EACE;YAAA;YAAA,6HACE;YAiBJ;YAAA,4DAAM;YACN;YAAA,0EACA;YAAA;YAAA,4DAAM;YACR;YAAA,4DAAM;YACN;YAAA,0EAAiC;YAAA,wFAA4B;YAAA,4DAAM;YACnE;YAAA,iEACA;YAAA;YAAA,0EACE;YAAA;YAAA,0EACE;YAAA;YAAA,4EAA4B;YAAA,6EAAiB;YAAA,sEAA+B;YAAA,4DAAQ;YACpF;YAAA,uEACE;YAAA;YAAA,uFACE;YAD6C,+MAAsB;YACnE;YAAA,wFACiD;YAA/B,yKAAU,uBAAmB,IAAC;YAAC,wDAAqC;YAAA,4DAAmB;YAC3G;YAAA,4DAAkB;YACpB;YAAA,4DAAM;YACR;YAAA,4DAAM;YACN;YAAA,0EACE;YAAA;YAAA,4EAA4B;YAAA,8EAAkB;YAAA,2EAAwB;YAAA,6DAAC;YAAA,4DAAO;YAAA,4DAAQ;YACtF;YAAA,uEACE;YAAA;YAAA,uFACE;YAD6C,+MAAsB,0GAAW,uBAAmB,IAA9B;YACnE;YAAA,uJACoC;YACpC;YAAA,wFACiD;YAA/B,yKAAU,uBAAmB,IAAC;YAAC,wDAAsC;YAAA,4DAAmB;YAC5G;YAAA,4DAAkB;YACpB;YAAA,4DAAM;YACR;YAAA,4DAAM;YACR;YAAA,4DAAM;YACN;YAAA,0EAAiC;YAAA,uFAA2B;YAAA,4DAAM;YAClE;YAAA,iEACA;YAAA;YAAA,0EACE;YAAA;YAAA,0EACE;YAAA;YAAA,2EACE;YAAA;YAAA,4EAA4B;YAAA,wDAC1B;YAAA,4EAA2C;YAAA,gEAAE;YAAA,4DAAO;YAAA,uEAIiB;YAAA,4DAAQ;YAC/E;YAAA,8EACA;YAD+C,kMAAkB,qGAAwB,oBAAgB,IAAxC;YAAjE,4DACA;YAAA;YAAA,0EAA4D;YAAA,2FAA8B;YAAA,4DAAI;YAChG;YAAA,4DAAM;YACR;YAAA,4DAAM;YACN;YAAA,2EACE;YAAA;YAAA,4EACE;YAAA;YAAA,6EAA4B;YAAA,yDAC1B;YAAA,6EAA2C;YAAA,gEAAE;YAAA,4DAAO;YAAA,uEAIiB;YAAA,4DAAQ;YAC/E;YAAA,8EAEA;YAF+C,0MAA0B,qGACzD,mBAAe,IAD0C;YAAzE,4DAEA;YAAA;YAAA,0EAA2D;YAAA,wFAA2B;YAAA,4DAAI;YAC5F;YAAA,4DAAM;YACR;YAAA,4DAAM;YACN;YAAA,2EACE;YAAA;YAAA,4EACE;YAAA;YAAA,6EAA4B;YAAA,6FAC1B;YAAA,wEAAiD;YAAA,uEAIiB;YAAA,4DAAQ;YAC5E;YAAA,8EAEF;YAFsF,yMAAyB;YAA7G,4DAEF;YAAA;YAAA,4DAAM;YACR;YAAA,4DAAM;YACR;YAAA,4DAAM;YACR;YAAA,4DAAmB;YACrB;YAAA,4DAAW;YACX;;YA9KgC,2DAA0C;YAA1C,wGAA0C;YAoB1C,0DAA0C;YAA1C,wGAA0C;YAoB1C,0DAA0C;YAA1C,wGAA0C;YAyB1C,0DAA0C;YAA1C,wGAA0C;YAoB1C,0DAA0C;YAA1C,wGAA0C;YA4BjB,2DAAsB;YAAtB,iFAAsB;YACvC,0DAAgB;YAAhB,yEAAgB;YACK,0DAAqC;YAArC,sGAAqC;YAOzC,2DAAsB;YAAtB,iFAAsB;YACjD,0DAA6B;YAA7B,2FAA6B;YAEnB,0DAAiB;YAAjB,0EAAiB;YACI,0DAAsC;YAAtC,uGAAsC;YAU7D,2DAC1B;YAD0B,kIAC1B;YAEyD,0DAAqC;YAArC,kGAAqC;YAGjD,0DAAkB;YAAlB,6EAAkB;YAC9D,0DAAmB;YAAnB,gFAAmB;YAKM,2DAC1B;YAD0B,kIAC1B;YAEyD,0DAAqC;YAArC,kGAAqC;YAGjD,0DAA0B;YAA1B,qFAA0B;YAEtE,0DAAkB;YAAlB,+EAAkB;YAQmC,2DAAqC;YAArC,kGAAqC;YAGhC,0DAAsB;YAAtB,mFAAsB;;yCD7K7F;CA6ZC;AAxY0C;6FAA9B,8BAA8B;cAL1C,uDAAS;eAAC;gBACT,QAAQ,EAAE,4BAA4B;gBACtC,WAAW,EAAE,yCAAyC;gBACtD,SAAS,EAAE,CAAC,yCAAyC,CAAC;aACvD;oZA0CyB,YAAY;kBAAnC,oDAAM;mBAAC,cAAc;YACZ,QAAQ;kBAAjB,oDAAM;;;;;;;;;;;;;;AE/DT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AAWjC;AACwD;AAC7C;AAEyB;AAElB;AACR;AACiC;AACT;AAClB;AACE;AACe;AAEY;AACjB;AAMZ;AACqC;AACE;;;;;;;;;;;;;;;;;ICjBpE,sEACE;IAAA,uDACA;IACF;IAAA,4DAAM;;;IAFJ,0DACA;IADA,gHACA;;;IAPN,0EACE;IAAA;IAAA,sEAAK;IAAA,2EAAmG;IAAA,uDACrG;IAAA,4DAAO;IAAA,4DAAM;IAChB;IAAA,gEACA;IAAA;IAAA,0EACE;IAAA;IAAA,wIACE;IAGJ;IAAA,4DAAM;IACR;IAAA,4DAAM;;;IAToG,0DACrG;IADqG,sIACrG;IAGI,0DAAwC;IAAxC,4FAAwC;;;IA8B/C,wEACE;IAAA;IAAA,0EAA8D;IAAA,uDAAiB;IAAA,4DAAM;IACvF;IAAA,qEAAe;;;IADiD,0DAAiB;IAAjB,qFAAiB;;;;IAEjF,wEACE;IAAA;IAAA,0EAAyD;IAAA,uDAAiB;IAAA,4DAAM;IAChF;IAAA,0EAA8C;IAAA,kLAE9C;IAAA,4DAAM;IACN;IAAA,6EACmC;IADhB,iWAAwB;IACR,6EACnC;IAAA,4DAAS;IACT;IAGF;IAAA,qEAAe;;;IAV4C,0DAAiB;IAAjB,qFAAiB;;;;IAW5E,0EACE;IADqB,sTAAS,YAAkB,IAAC;IACjD;IAAA,6EAA0F;IAAA,sEAAW;IAAA,4DAAS;IAC9G;IAAA,gFAEF;IADS,qXAA+C;IADtD,4DAEF;IAAA;IAAA,4DAAM;;;;IA9BZ,+EACE;IAAA;IAAA,sFACE;IAAA;IAAA,sEAAK;IAAA,0EAA0B;IAAA,6EAAkB;IAAA,4DAAO;IAAA,4DAAM;IAC9D;IAAA,gEACA;IAAA;IAAA,2EACE;IAAA;IAAA,2EAA6C;IAAA,6KAE7C;IAAA,4DAAM;IACN;IAAA,2EAAqH;IAA1E,gVAA4B,kBAAkB,KAAE;IAA0B,sHAErH;IAAA,4DAAM;IACN;IAAA,8JACE;IAEF;IAAA,+JACE;IAWF;IAAA,6IACE;IAIJ;IAAA,4DAAM;IACR;IAAA,4DAAmB;IACrB;IAAA,4DAAW;;;IAtBS,2DAAkB;IAAlB,mFAAkB;IAGlB,0DAAgB;IAAhB,iFAAgB;IAYzB,0DAAiB;IAAjB,kFAAiB;;;IAoBtB,wEACE;IAAA;IAAA,0EAA8D;IAAA,uDAAwB;IAAA,4DAAM;IAC9F;IAAA,qEAAe;;;IADiD,0DAAwB;IAAxB,6FAAwB;;;;IAExF,wEACE;IAAA;IAAA,0EAAyD;IAAA,uDAAwB;IAAA,4DAAM;IACvF;IAAA,0EAA8C;IAAA,kLAE9C;IAAA,4DAAM;IACN;IAAA,6EACmC;IADhB,wWAA+B;IACf,6EACnC;IAAA,4DAAS;IACT;IAGF;IAAA,qEAAe;;;IAV4C,0DAAwB;IAAxB,6FAAwB;;;;IAWnF,0EACE;IAD4B,sTAAS,YAA6B,IAAC;IACnE;IAAA,6EAA0F;IAAA,sEAAW;IAAA,4DAAS;IAC9G;IAAA,gFAEF;IADS,iYAA2D;IADlE,4DAEF;IAAA;IAAA,4DAAM;;;;IA9BZ,+EACE;IAAA;IAAA,sFACE;IAAA;IAAA,sEAAK;IAAA,0EAA0B;IAAA,6EAAkB;IAAA,4DAAO;IAAA,4DAAM;IAC9D;IAAA,gEACA;IAAA;IAAA,2EACE;IAAA;IAAA,2EAA6C;IAAA,6KAE7C;IAAA,4DAAM;IACN;IAAA,2EAAiH;IAAtE,gVAA4B,cAAc,KAAE;IAA0B,sHAEjH;IAAA,4DAAM;IACN;IAAA,8JACE;IAEF;IAAA,+JACE;IAWF;IAAA,6IACE;IAIJ;IAAA,4DAAM;IACR;IAAA,4DAAmB;IACrB;IAAA,4DAAW;;;IAtBS,2DAAsB;IAAtB,uFAAsB;IAGtB,0DAAuB;IAAvB,wFAAuB;IAYhC,0DAAwB;IAAxB,yFAAwB;;;;IAjGrC,sEACE;IAAA;IAAA,2EACE;IAAA;IAAA,sFACE;IAAA;IAAA,sEAAK;IAAA,0EAA0B;IAAA,2GAAgD;IAAA,4DAAO;IAAA,4DAAM;IAC5F;IAAA,iEACA;IAAA;IAAA,uEACE;IAAA;IAAA,sFACE;IADe,6WAA4B;IAC3C;IAAA,uFAA6B;IAAA,wFAA4B;IAAA,4DAAmB;IAC5E;IAEF;IAAA,4DAAkB;IACpB;IAAA,4DAAM;IACN;IAAA,iIACE;IAUF;IAAA,0EACE;IAAA;IAAA,0EACE;IAAA;IAAA,0EACE;IAAA;IAAA,4EAA4B;IAAA,+FAAmC;IAAA,4DAAQ;IACvE;IAAA,6EACF;IAD8B,oWAA6B;IAAzD,4DACF;IAAA;IAAA,4DAAM;IACR;IAAA,4DAAM;IACN;IAAA,4EAEkB;IAAA,wDAAuB;IAAA,4DAAO;IAClD;IAAA,4DAAM;IACR;IAAA,4DAAmB;IACrB;IAAA,4DAAW;IACX;IAAA,4IACE;IAkCF;IAAA,4IACE;IAiCJ;IAAA,4DAAM;;;IAnGmB,2DAA4B;IAA5B,0FAA4B;IAM1C,0DAA8B;IAA9B,+FAA8B;IAeD,2DAA6B;IAA7B,2FAA6B;IAK3C,0DAAuB;IAAvB,2FAAuB;IAIrC,0DAA8B;IAA9B,+FAA8B;IAmC9B,0DAA8B;IAA9B,+FAA8B;;;IA8ClC,0EAA+D;IAAA,wEAAwB;IAAA,2EAAgB;IAAA,4DAAI;IAC3G;IAAA,4DAAM;;;;IAVZ,sEACE;IAAA;IAAA,2EACE;IAAA;IAAA,sFACE;IAAA;IAAA,sEAAK;IAAA,0EAA0B;IAAA,8FAAmC;IAAA,4DAAO;IAAA,4DAAM;IAC/E;IAAA,iEACA;IAAA;IAAA,wFAGgI;IAFnE,+WAAmC;IAEa,4DAAmB;IAChI;IAAA,uIAA+D;IAEjE;IAAA,4DAAmB;IACrB;IAAA,4DAAW;IACb;IAAA,4DAAM;;;IARkB,2DAA+B;IAA/B,gGAA+B;IAI5C,0DAA+B;IAA/B,iGAA+B;;;IAkChC,wEACE;IAAA;IAAA,wEACE;IAAA;IAAA,4EACE;IAAA;IAAA,yEACE;IAAA;IAAA,yEAA8B;IAAA,gFAAqB;IAAA,4DAAK;IACxD;IAAA,sEAAI;IAAA,qEAAS;IAAA,4DAAK;IAClB;IAAA,0EAA+B;IAAA,wEAAY;IAAA,4DAAK;IAClD;IAAA,4DAAK;IACL;IAAA,sEACE;IAAA;IAAA,sEAAI;IAAA,wDAA4B;IAAA,4DAAK;IACrC;IAAA,sEAAI;IAAA,wDAAsC;IAAA,4DAAK;IAC/C;IAAA,sEAAI;IAAA,wDAA8B;IAAA,4DAAK;IACzC;IAAA,4DAAK;IACP;IAAA,4DAAQ;IACV;IAAA,qEAAe;IACjB;IAAA,qEAAe;;;IANH,2DAA4B;IAA5B,0GAA4B;IAC5B,0DAAsC;IAAtC,mHAAsC;IACtC,0DAA8B;IAA9B,2GAA8B;;;IAxCpD,sEACE;IAAA;IAAA,2EACE;IAAA;IAAA,sFACE;IAAA;IAAA,sEAAK;IAAA,0EAA0B;IAAA,4FAAiC;IAAA,4DAAO;IAAA,4DAAM;IAC7E;IAAA,iEACA;IAAA;IAAA,2EACE;IAAA;IAAA,2EACE;IAAA;IAAA,sEAA+B;IACjC;IAAA,4DAAM;IACR;IAAA,4DAAM;IACN;IAAA,2EACE;IAAA;IAAA,2EACE;IAAA;IAAA,2EACE;IAAA;IAAA,2EAAkE;IAAA,wDAAqB;IAAA,4DAAM;IAC7F;IAAA,2EAAqD;IAAA,+HACrD;IAAA,4DAAM;IACR;IAAA,4DAAM;IACR;IAAA,4DAAM;IACN;IAAA,2EACE;IAAA;IAAA,2EACE;IAAA;IAAA,2EAAkE;IAAA,wDAAuB;IAAA,4DAAM;IAC/F;IAAA,2EAAqD;IAAA,oJAErD;IAAA,4DAAM;IACR;IAAA,4DAAM;IACR;IAAA,4DAAM;IACR;IAAA,4DAAM;IACN;IAAA,2EACE;IAAA;IAAA,2EACE;IAAA;IAAA,yJACE;IAeJ;IAAA,4DAAM;IACR;IAAA,4DAAM;IACR;IAAA,4DAAmB;IACrB;IAAA,4DAAW;IACb;IAAA,4DAAM;;;IApCwE,2DAAqB;IAArB,mGAAqB;IAOrB,2DAAuB;IAAvB,qGAAuB;IAS7E,2DAA2B;IAA3B,6FAA2B;;;IA5CrD,sEACE;IAAA;IAAA,+HACE;IAaF;IAAA,+HACE;IAiDJ;IAAA,4DAAM;;;IAhEC,0DAAyB;IAAzB,0FAAyB;IAczB,0DAAwB;IAAxB,yFAAwB;;AD5G/B,IAAM,MAAM,GAAG,mBAAO,CAAC,uDAA2C,CAAC,CAAC;AAapE,oEAAY,CAAC,wCAAU,CAAC,CAAC;AAEzB,IAAM,MAAM,GAAG,mBAAO,CAAC,mDAAuC,CAAC,CAAC;AAChE,MAAM,CAAC,wCAAU,CAAC,CAAC;AACnB,IAAM,IAAI,GAAG,mBAAO,CAAC,wCAA4B,CAAC,CAAC;AAgCnD;IAiKE,sCAAmB,aAAkC,EACjC,cAAmC,EACnC,GAAsB,EACtB,MAAqB,EACrB,aAA4B,EAC5B,kBAAsC,EACtC,MAAc,EACd,MAAiB;QAPlB,kBAAa,GAAb,aAAa,CAAqB;QACjC,mBAAc,GAAd,cAAc,CAAqB;QACnC,QAAG,GAAH,GAAG,CAAmB;QACtB,WAAM,GAAN,MAAM,CAAe;QACrB,kBAAa,GAAb,aAAa,CAAe;QAC5B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAW;QAlKrC,mBAAc,GAAG,GAAG,CAAC;QACrB,0BAAqB,GAAG,CAAC,CAAC;QAE1B,eAAU,GAAQ,EAAE,CAAC;QACrB,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,wBAAmB,GAAG,KAAK,CAAC;QAC5B,oBAAe,GAAG,CAAC,CAAC;QACI,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QAChD,aAAQ,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAChE,sBAAiB,GAAG,KAAK,CAAC;QAC1B,qBAAgB,GAAG,KAAK,CAAC;QACzB,wBAAmB,GAAiB,iDAAY,CAAC,KAAK,CAAC;QACvD,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,uBAAkB,GAAQ,EAAE,CAAC;QAC7B,mBAAc,GAAQ,EAAE,CAAC;QACzB,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,yBAAoB,GAAQ,EAAE,CAAC;QAC/B,sBAAiB,GAAQ,EAAE,CAAC;QAC5B,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,kBAAa,GAAQ,EAAE,CAAC;QACxB,sBAAiB,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,aAAa,CAAC,CAAC;QACpE,uBAAkB,GAAQ,CAAC,CAAC;QAC5B,eAAU,GAAG,IAAI,uEAAc,CAAe,IAAI,EAAE,EAAE,CAAC,CAAC;QACxD,iBAAY,GAAG,IAAI,uEAAc,CAAa,IAAI,EAAE,EAAE,CAAC,CAAC;QACxD,cAAS,GAAG,IAAI,uEAAc,CAAmB,IAAI,EAAE,EAAE,CAAC,CAAC;QAC3D,mBAAc,GAAQ,EAAE,CAAC;QACzB,mBAAc,GAAG,KAAK,CAAC;QAEvB,kBAAa,GAAQ,EAAE,CAAC;QACxB,8BAAyB,GAAQ,CAAC,CAAC;QAGnC,iCAA4B,GAAa;YACvC,QAAQ;YACR,cAAc;YACd,gBAAgB;YAChB,mBAAmB;YACnB,eAAe;YACf,YAAY;YACZ,eAAe;YACf,aAAa;YACb,kBAAkB;YAClB,iBAAiB;YACjB,QAAQ;SACT,CAAC;QACF,qCAAgC,GAAa;YAC3C,QAAQ;YACR,cAAc;YACd,gBAAgB;YAChB,uBAAuB;YACvB,eAAe;YACf,YAAY;YACZ,mBAAmB;YACnB,aAAa;YACb,kBAAkB;YAClB,iBAAiB;YACjB,QAAQ;SACT,CAAC;QACF,aAAQ,GAAa;YACnB,QAAQ;YACR,cAAc;YACd,gBAAgB;YAChB,mBAAmB;YACnB,eAAe;YACf,YAAY;YACZ,eAAe;YACf,aAAa;YACb,kBAAkB;YAClB,iBAAiB;YACjB,QAAQ;SACT,CAAC;QACF,8BAAyB,GAAa;YACpC,QAAQ;YACR,WAAW;YACX,YAAY;YACZ,SAAS;YACT,aAAa;YACb,SAAS;YACT,UAAU;SACX,CAAC;QACF,cAAS,GAAQ,EAAE,CAAC;QACpB,gBAAW,GAAQ,KAAK,CAAC;QAsBzB,0BAAqB,GAAQ,EAAE,CAAC;QAChC,kBAAa,GAAQ,EAAE,CAAC;QACxB,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,sBAAiB,GAAQ,EAAE,CAAC;QAE5B,mBAAc,GAAQ,CAAC,CAAC;QACxB,gBAAW,GAAG,IAAI,CAAC;QACnB,0BAAqB,GAAiB,iDAAY,CAAC,KAAK,CAAC;QACzD,yBAAoB,GAAiB,iDAAY,CAAC,KAAK,CAAC;QACxD,2BAAsB,GAAiB,iDAAY,CAAC,KAAK,CAAC;QAC1D,gBAAW,GAAG,KAAK,CAAC;QAGpB,eAAU,GAAQ,EAAE,CAAC;QACrB,eAAU,GAAQ,EAAE,CAAC;QAIrB,aAAQ,GAAQ,EAAE,CAAC;QACnB,kBAAa,GAAG,EAAE,CAAC;QACnB,iBAAY,GAAQ,EAAE,CAAC;QACvB,aAAQ,GAAG,KAAK,CAAC;QACjB,6BAAwB,GAAQ,EAAE,CAAC;QAInC,aAAQ,GAAc,CAAC,KAAK,CAAC,CAAC;QAU9B,YAAO,GAAQ,SAAS,CAAC;QACzB,sBAAiB,GAAG,EAAE,CAAC;QACvB,oBAAe,GAAG,KAAK,CAAC;QACxB,oBAAe,GAAG,KAAK,CAAC;QACxB,yBAAoB,GAAQ,EAAE,CAAC;QAE/B,yBAAoB,GAAG,EAAE,CAAC;QAE1B,eAAU,GAAG,KAAK,CAAC;QACnB,mBAAc,GAAG,KAAK,CAAC;QACvB,iBAAY,GAAG,KAAK,CAAC;IAcrB,CAAC;IAbD,2CAAI,GAAJ,UAAK,KAA4B;QAC/B,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAChC,+EAAe,CAAC,IAAI,CAAC,4BAA4B,EAAE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;IAC9F,CAAC;IAYD,+CAAQ,GAAR;QAAA,iBAuNC;QAtNC,IAAG,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,iBAAiB,EAAC;YAC3D,IAAI,CAAC,mBAAmB,GAAG,2GAA2G,CAAC;SACxI;aAAI;YACH,IAAI,CAAC,mBAAmB,GAAG,wHAAwH,CAAC;SACrJ;QAGD,IAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,0BAA0B,EAAE,CAAC;QACzE,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC,gBAAgB,CAAC;QAC1D,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC,IAAI,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,EAAE,yBAAyB,CAAC,CAAC;QACrF,IAAI,CAAC,+DAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAC;YACrE,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACtD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAC1C,OAAO;SACR;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;QACzC,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,+DAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE;YACjG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAClD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;SAC7D;QACD,cAAc,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC/D,IAAI,gBAAgB,CAAC,gBAAgB,KAAK,CAAC,EAAE;YAC3C,IAAM,IAAI,GAAG,CAAC,yHAAyH,CAAC,CAAC;YACzI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACxB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,uBAAuB,EAAE;gBAClD,MAAM,EAAE,aAAa;gBACrB,IAAI,EAAE,IAAI;aACX,CAAC,CAAC;YAEH,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,2BAA2B,EAAE;gBACtD,MAAM,EAAE,wBAAwB;gBAChC,MAAM,EAAE,IAAI;aACb,CAAC,CAAC;SACJ;QACD,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC7C,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,EAAE;YACxD,IAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC/C,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;gBACxE,KAAI,CAAC,mBAAmB,GAAG,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC;gBACvD,IAAM,IAAI,GAAG,EAAE,CAAC;gBAChB,KAAI,CAAC,cAAc,GAAG,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBACjE,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,EAAE,KAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACvF,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACrD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACnD,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;iBACxD;gBACD,KAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBACtE,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,EAAE,KAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC7F,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACrD,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;iBAC5D;gBAED,KAAI,CAAC,oBAAoB,GAAG,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBAC7E,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC,EAAE,KAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACzG,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACjE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACzD,KAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;iBACpE;gBAED,KAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBAC3E,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,EAAE,KAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAChG,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC3D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACtD,KAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;iBAC9D;gBAED,KAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBACzE,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,EAAE,KAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC7F,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACrD,IAAI,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;wBACnC,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;qBAC5D;yBAAM;wBACL,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;qBACpC;iBACF;gBACD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,CAAC;gBACxD,KAAI,CAAC,cAAc,GAAG,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YACvC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YAC7C,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YAC9C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAC7C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC3C,IAAG,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,iBAAiB,EAAE;gBAC5C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;aAC7B;SACF;QACD,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACnD,IAAI,CAAC,uBAAuB,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC;QAC9D,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,GAAG;YACnB,UAAU,EAAE,QAAQ;YACpB,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa;YAC1C,cAAc,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,MAAM;YACtD,iBAAiB,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,OAAO;YAC1D,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,gBAAgB;YAC9C,UAAU,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,MAAM;YAClD,aAAa,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,OAAO;YACtD,WAAW,EAAE,mBAAmB;YAChC,MAAM,EAAE,kBAAkB;SAC3B,CAAC;QACF,IAAI,CAAC,gBAAgB,GAAG;YACtB,UAAU,EAAE,QAAQ;YACpB,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa;YAC1C,cAAc,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,MAAM;YACtD,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,gBAAgB;YAC9C,UAAU,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,MAAM;YAClD,WAAW,EAAE,mBAAmB;YAChC,MAAM,EAAE,kBAAkB;SAC3B,CAAC;QACF,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,iBAAiB,EAAE;YAC7C,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;SAC5C;QAAA,CAAC;QACF,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC;QAC1D,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,uBAAuB,CAAC,CAAC;QACjE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC;QAClD,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,qBAAqB,EAAE,aAAG;YAChF,IAAI,GAAG,CAAC,MAAM,KAAK,aAAa,EAAE;gBAChC,IAAI,GAAG,CAAC,MAAM,EAAE;oBACd,IAAM,IAAI,GAAG,CAAC,yHAAyH,CAAC,CAAC;oBACzI,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;iBACzB;gBACD,IAAI,GAAG,CAAC,MAAM,KAAK,mBAAmB,EAAE;oBACtC,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,MAAM,CAAC;oBACpC,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;oBAC9B,KAAI,CAAC,qBAAqB,EAAE,CAAC;iBAC9B;qBAAM;oBACL,IAAI,YAAY,UAAC;oBACjB,IAAM,WAAW,GAAG,cAAc,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;oBAC9D,IAAG,WAAW,KAAK,GAAG,EAAE;wBACtB,YAAY,GAAG,KAAI,CAAC,YAAY,CAAC;qBAClC;yBAAM,IAAG,WAAW,KAAK,GAAG,EAAC;wBAC5B,YAAY,GAAG,KAAI,CAAC,kBAAkB,CAAC;qBACxC;oBACD,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC3B,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,MAAM,CAAC;wBACpC,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;wBAC9B,KAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;qBAC5E;yBAAM;wBACJ,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,6CAA6C,CAAC,CAAC;qBACrE;iBACF;aACF;QACH,CAAC,CAAC,CAAC;QACH,IAAI,aAAa,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,qBAAqB,EAAE,aAAG;YACnF,IAAI,GAAG,CAAC,MAAM,KAAK,aAAa,EAAE;gBAChC,IAAI,GAAG,CAAC,IAAI,KAAK,eAAe,EAAE;oBAChC,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;oBAC9B,aAAa,GAAG,CAAC,KAAI,CAAC,gBAAgB,CAAC;iBACxC;qBAAM;oBACL,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;oBAC7B,aAAa,GAAG,CAAC,KAAI,CAAC,gBAAgB,CAAC;oBACvC,sCAAsC;oBACtC,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;oBACpD,KAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;iBAClC;gBACD,IAAM,IAAI,GAAG,CAAC,yHAAyH,CAAC,CAAC;gBACzI,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBACxB,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC9B,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,uBAAuB,EAAE;oBAClD,MAAM,EAAE,aAAa;oBACrB,IAAI,EAAE,aAAa;iBACpB,CAAC,CAAC;gBACH,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;aACpD;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,kBAAkB,EAAE;YAC7C,KAAK,EAAE,IAAI;SACZ,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC;QAClE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,uBAAuB,EAAE,aAAG;YACpF,IAAI,GAAG,CAAC,MAAM,KAAK,aAAa,EAAE;gBAChC,KAAI,CAAC,SAAS,EAAE,CAAC;aAClB;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,qBAAqB,EAAE,aAAG;YACrD,IAAI,GAAG,CAAC,MAAM,KAAK,aAAa,EAAE;gBAChC,IAAI,GAAG,CAAC,MAAM,EAAE;oBACd,IAAM,IAAI,GAAG,CAAC,yHAAyH,CAAC,CAAC;oBACzI,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;iBACzB;gBACD,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,MAAM,CAAC;gBACpC,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,uBAAuB,EAAE;oBAClD,MAAM,EAAE,aAAa;oBACrB,IAAI,EAAE,KAAK;oBACX,cAAc,EAAE,KAAK;iBACtB,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,0BAA0B,EAAE,aAAG;YACtF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;YACtD,IAAI,GAAG,CAAC,MAAM,KAAK,aAAa,IAAI,CAAC,GAAG,CAAC,gBAAgB,KAAK,CAAC,IAAI,GAAG,CAAC,gBAAgB,KAAK,CAAC,CAAC,EAAE;gBAC9F,2BAA2B;gBAC3B,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC,SAAS,CAAC;gBACjC,IAAI,CAAC,KAAI,CAAC,WAAW,EAAE;oBACrB,KAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;iBACxC;gBACD,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;aACnD;QACH,CAAC,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,UAAU,KAAK,MAAM,EAAE;YAC9B,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,gCAAgC,CAAC;YAC1E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC;SAC5C;IACH,CAAC;IAED,sDAAe,GAAf;QAAA,iBAMC;QALC,IAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAClD,IAAM,IAAI,GAAG,CAAC,oRAAoR,EAAC,qLAAqL,EAAE,6GAA6G,EAAE,8HAA8H,EAAE,yHAAyH,CAAC,CAAC;QACp0B,UAAU,CAAC;YACf,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACD,CAAC;IAED,mDAAY,GAAZ,UAAa,IAAS;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,+DAAwB,GAAxB;QACE,IAAM,cAAc,GAAG,CAAC,gBAAgB,EAAE,WAAW,EAAE,oBAAoB,CAAC,CAAC;QAC7E,IAAI,CAAC,gBAAgB,GAAG,cAAc,CAAC;QACvC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;IAC5D,CAAC;IAED,4DAAqB,GAArB;QAAA,iBA8FC;QA7FC,IAAM,OAAO,GAAG,EAAE,CAAC;QACnB,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC7C,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;YACrE,IAAI,WAAW,CAAC,MAAM,KAAK,IAAI,IAAI,WAAW,CAAC,IAAI,KAAK,EAAE,EAAE;gBAC1D,KAAK,IAAI,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;oBACrD,IAAI,WAAW,SAAK,CAAC;oBACrB,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;wBAC5C,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;qBACvE;yBAAM;wBACL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAC3D,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,EAAE;gCACjD,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;6BACvE;yBACF;qBACF;oBACD,IAAM,IAAI,GAAQ,EAAE,CAAC;oBACrB,KAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;oBAC7B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;oBACzB,KAAK,IAAI,CAAC,GAAG,WAAW,CAAC,mBAAmB,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;wBACrE,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBACnE;iBACF;gBACD,IAAI,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;gBAC7D,IAAI,+DAAiB,CAAC,eAAe,CAAC,EAAE;oBACtC,eAAe,GAAG,KAAI,CAAC,IAAI,CAAC,eAAe,CAAC;iBAC7C;gBACD,IAAM,IAAI,GAAG;oBACX,UAAU,EAAE,KAAI,CAAC,kBAAkB;oBACnC,eAAe;oBACf,OAAO,EAAE,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC;oBACvC,OAAO,EAAE,KAAI,CAAC,cAAc;oBAC5B,QAAQ,EAAE,KAAI,CAAC,gBAAgB;oBAC/B,cAAc,EAAE,KAAI,CAAC,oBAAoB;oBACzC,WAAW,EAAE,KAAI,CAAC,iBAAiB;oBACnC,UAAU,EAAE,KAAI,CAAC,gBAAgB;oBACjC,gBAAgB,EAAE,KAAI,CAAC,eAAe;oBACtC,eAAe,EAAE,KAAI,CAAC,IAAI,CAAC,eAAe;oBAC1C,aAAa,EAAE,KAAI,CAAC,IAAI,CAAC,aAAa;oBACtC,gBAAgB,EAAE,KAAI,CAAC,IAAI,CAAC,eAAe;oBAC3C,cAAc,EAAE,KAAI,CAAC,IAAI,CAAC,aAAa;oBACvC,SAAS,EAAE,KAAI,CAAC,IAAI,CAAC,SAAS;iBAC/B,CAAC;gBAEF,IAAI,KAAI,CAAC,cAAc,KAAK,GAAG,EAAE;oBAC/B,IAAI,CAAC,oBAAoB,CAAC,GAAG,KAAI,CAAC,oBAAoB,CAAC;iBACxD;qBAAM;oBACL,IAAI,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC;iBACjC;gBACD,IAAI,gBAAgB,GAAQ,KAAK,CAAC;gBAClC,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;oBACjC,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAC3D,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,EAAE;gCACjD,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,CAAC,EAAE;oCAClD,gBAAgB,GAAG,IAAI,CAAC;iCACzB;6BACF;yBACF;qBACF;iBACF;gBACD,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;gBACjC,IAAI,gBAAgB,KAAK,KAAK,EAAE;oBAC9B,KAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;wBACrE,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wBAC5B,IAAI,WAAW,CAAC,MAAM,KAAK,IAAI,EAAE;4BAC/B,IAAI,KAAI,CAAC,cAAc,KAAK,GAAG,EAAE;gCAC/B,IAAI,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,EAAC;oCACzD,KAAI,CAAC,kBAAkB,GAAG,WAAW,CAAC,IAAI,CAAC,mBAAmB,CAAC;oCAC/D,KAAI,CAAC,oBAAoB,GAAG,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC;oCACrD,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;oCAC5B,KAAI,CAAC,cAAc,EAAE,CAAC;iCACvB;qCAAM,IAAI,WAAW,CAAC,IAAI,CAAC,QAAQ,CACjC,oEAAoE,CAAC,EAAE;oCACtE,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;iCACzC;6BACF;iCAAM;gCACL,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gCAC7B,KAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,IAAI,EAAE,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;6BAChF;yBACF;6BAAM,IAAI,WAAW,CAAC,IAAI,CAAC,QAAQ,CACjC,oEAAoE,CAAC,EAAE;4BACxE,IAAG,KAAI,CAAC,cAAc,KAAK,GAAG,EAAE;gCAC9B,KAAI,CAAC,oBAAoB,GAAG,WAAW,CAAC,IAAI,CAAC;gCAC7C,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;6BAC5B;iCAAM;gCACL,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;6BACvC;yBACF;oBACH,CAAC,CAAC,CAAC;iBACJ;qBAAM;iBACN;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2DAAoB,GAApB,UAAqB,OAAgB;QAArC,iBAkCC;QAjCC,IAAI,aAAa,CAAC;QAClB,IAAM,eAAe,GAAQ,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QACvD,IAAM,aAAa,GAAQ,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;QACnD,IAAM,gBAAgB,GAAQ,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QACxD,IAAM,cAAc,GAAQ,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;QACpD,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,iBAAiB,EAAC;YAC5C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;YAChD,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;SACjE;aAAM;YACL,aAAa,GAAG,CAAC,CAAC;SACnB;QAAA,CAAC;QACF,IAAM,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QACzD,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAClC,IAAM,IAAI,GAAQ;YAChB,OAAO;YACP,eAAe;YACf,aAAa;YACb,gBAAgB;YAChB,cAAc;YACd,cAAc,EAAE,sBAAsB;YACtC,eAAe,EAAE,aAAa;SAC/B,CAAC;QACF,IAAI,CAAC,kBAAkB,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;YACnF,IAAI,WAAW,CAAC,MAAM,KAAK,IAAI,EAAE;gBAC/B,IAAI,CAAC,OAAO,IAAI,KAAI,CAAC,iBAAiB,EAAE;oBACtC,UAAU,CAAC;wBACT,KAAI,CAAC,QAAQ,EAAE,CAAC;oBAClB,CAAC,EAAE,GAAG,CAAC,CAAC;iBACX;aACA;iBAAM,IAAI,WAAW,CAAC,MAAM,KAAK,QAAQ,EAAE;aAE3C;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sDAAe,GAAf;QACE,IAAI,GAAQ,CAAC;QACb,IAAI,YAAY,GAAG,KAAK,CAAC;QACzB,IAAI,SAAc,CAAC;QACnB,IAAG,IAAI,CAAC,iBAAiB,IAAI,EAAE,EAAC;YAC9B,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC;SACpC;aAAI;YACH,SAAS,GAAG,KAAK,CAAC;SACnB;QACD,GAAG,GAAG;YACJ,MAAM,EAAE,cAAc;YACtB,SAAS;SACV,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,qBAAqB,CAAC,CAAC;QACxC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,iBAAiB,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,aAAa,CAAC,CAAC;QACzE,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QACzB,IAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAClD,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;YACjC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,uBAAuB,EAAE;gBAClD,MAAM,EAAE,aAAa;gBACrB,IAAI,EAAE,IAAI;aACX,CAAC,CAAC;YACH,YAAY,GAAG,IAAI,CAAC;SACrB;QACD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,2BAA2B,EAAE;YACtD,MAAM,EAAE,wBAAwB;YAChC,MAAM,EAAE,YAAY;SACrB,CAAC,CAAC;IACL,CAAC;IAED,wDAAiB,GAAjB,UAAkB,IAAS,EAAE,KAAU;QACrC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;QAC/C,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE;YAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;SAC7B;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;SAC5B;QACD,IAAI,IAAI,KAAK,QAAQ,EAAE;YACrB,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;SAClD;aAAM,IAAI,IAAI,KAAK,cAAc,EAAE;YAClC,IAAI,CAAC,sBAAsB,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC;SAC5D;aAAM,IAAI,IAAI,KAAK,gBAAgB,EAAE;YACpC,IAAI,CAAC,wBAAwB,GAAG,CAAC,IAAI,CAAC,wBAAwB,CAAC;SAChE;aAAM,IAAI,IAAI,KAAK,mBAAmB,EAAE;YACvC,IAAI,CAAC,0BAA0B,GAAG,CAAC,IAAI,CAAC,0BAA0B,CAAC;SACpE;aAAM,IAAI,IAAI,KAAK,eAAe,EAAE;YACnC,IAAI,CAAC,sBAAsB,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC;SAC5D;aAAM,IAAI,IAAI,KAAK,YAAY,EAAE;YAChC,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;SACtD;aAAM,IAAI,IAAI,KAAK,eAAe,EAAE;YACnC,IAAI,CAAC,uBAAuB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC;SAC9D;aAAM,IAAI,IAAI,KAAK,aAAa,EAAE;YACjC,IAAI,CAAC,sBAAsB,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC;SAC5D;aAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;YAC5B,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;SAClD;IACH,CAAC;IAED,iDAAU,GAAV,UAAW,IAAS;QAClB,IAAI,IAAI,KAAK,QAAQ,EAAE;YACrB,OAAO,QAAQ,CAAC;SACjB;aAAM,IAAI,IAAI,KAAK,cAAc,EAAE;YAClC,OAAO,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;SACrC;aAAM,IAAI,IAAI,KAAK,gBAAgB,EAAE;YACpC,OAAO,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;SAC/C;aAAM,IAAI,IAAI,KAAK,mBAAmB,EAAE;YACvC,OAAO,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;SAChD;aAAM,IAAI,IAAI,KAAK,eAAe,EAAE;YACnC,OAAO,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC;SACxC;aAAM,IAAI,IAAI,KAAK,YAAY,EAAE;YAChC,OAAO,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;SAC/C;aAAM,IAAI,IAAI,KAAK,eAAe,EAAE;YACnC,OAAO,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;SAChD;aAAM,IAAI,IAAI,KAAK,aAAa,EAAE;YACjC,OAAO,mBAAmB,CAAC;SAC5B;aAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;YAC5B,OAAO,kBAAkB,CAAC;SAC3B;IACH,CAAC;IAGD,2DAAoB,GAApB,UAAqB,IAAU;QAC7B,IAAI,IAAI,CAAC;QACT,IAAI,CAAC,IAAI,CAAC,YAAY,EAAC;YACrB,IAAI,GAAI,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACpC;aAAM;YACL,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;SAC5C;QACD,IAAI,CAAC,iBAAiB,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAElD,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,KAAK,EAAE,EAAE;YACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,OAAO;SACR;QAED,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC;QAExC,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,UAAC,CAAM,EAAE,CAAM;YACxC,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC;YACvC,QAAQ,IAAI,CAAC,MAAM,EAAE;gBACnB,KAAK,cAAc;oBACjB,OAAO,oBAAoB,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;gBACrE,KAAK,gBAAgB;oBACnB,OAAO,oBAAoB,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;gBACzE,KAAK,mBAAmB;oBACtB,OAAO,oBAAoB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;gBAC/E,KAAK,eAAe;oBAClB,OAAO,oBAAoB,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;gBACvE,KAAK,YAAY;oBACf,OAAO,oBAAoB,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;gBACjE,KAAK,eAAe;oBAClB,OAAO,oBAAoB,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;gBACvE,KAAK,QAAQ;oBACX,OAAO,oBAAoB,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;gBACzD;oBACE,OAAO,CAAC,CAAC;aACZ;QACH,CAAC,CAAC,CAAC;QACH,IAAI,UAAU,CAAC;QACf,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,UAAU,GAAG,QAAQ,CAAC;SACvB;aAAM;YACL,UAAU,GAAG,QAAQ,CAAC;YACtB,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;SAC/B;QACD,IAAI,CAAC,iBAAiB,GAAG,IAAI,0EAAkB,CAAM,UAAU,CAAC,CAAC;QACjE,qDAAqD;IACvD,CAAC;IAED,gDAAS,GAAT;QAAA,iBAqKC;QApKC,IAAI,CAAC,qBAAqB,GAAG,iDAAY,CAAC,KAAK,CAAC;QAChD,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;QAEvC,IAAM,UAAU,GAAG,EAAE,CAAC;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC5C,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;SAC7C;QAED,IAAM,aAAa,GAAQ,EAAE,CAAC;QAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC5C,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;SACjD;QAED,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,EAAE;YACnD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gDAAgD,CAAC,CAAC;YACtE,OAAO;SACR;aAAM;YAEL,IAAM,eAAa,GAAQ,EAAE,CAAC;YAE9B,UAAU,CAAC,OAAO,CAAC,UAAC,OAAY;gBAC9B,IAAI,CAAC,eAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;oBACpC,eAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC7B;YACH,CAAC,CAAC,CAAC;YAEH,IAAM,qBAAqB,GAAQ,EAAE,CAAC;YAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrD,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;aACpG;YAED,IAAM,MAAM,GAAG,EAAE,CAAC;YAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,qBAAqB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrD,IAAM,GAAG,GAAG,qBAAqB,CAAC,CAAC,CAAC,CAAC;gBACrC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACjD;YAED,IAAM,OAAO,GAAG,EAAE,CAAC;YAEnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC1C,IAAM,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC3B,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACvD;YAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,IAAM,KAAK,GAAQ,eAAa,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;oBACrB,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;wBACvB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gDAAgD,CAAC,CAAC;wBACtE,OAAO;qBACR;iBACF;aACF;YACD,IAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;YAC9D,IAAI,WAAW,EAAE;gBACf,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gDAAgD,CAAC,CAAC;gBACtE,OAAO;aACR;SACF;QACD,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,IAAM,YAAY,GAAQ,EAAE,CAAC;QAC7B,IAAM,SAAS,GAAQ,EAAE,CAAC;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,IAAM,MAAI,GAAQ;gBAChB,aAAa,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;gBACzC,cAAc,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;aAC5C,CAAC;YACF,SAAS,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC;SACtB;QACD,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrD,IAAI,OAAO,GAAQ,KAAK,CAAC;gBACzB,IAAI,UAAU,GAAG,EAAE,CAAC;gBACpB,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC,UAAC,CAAM,IAAK,QAAC,CAAC,aAAa,KAAK,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;uBAC/H,CAAC,CAAC,cAAc,KAAK,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,EADtC,CACsC,CAAC,CAAC;gBAClF,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;oBACzB,OAAO,GAAG,IAAI,CAAC;iBAChB;gBACD,IAAI,OAAO,KAAK,IAAI,EAAE;oBACpB,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC;iBAC3C;qBAAM;oBACL,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC;oBAC1C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpD;aACF;SACF;aAAM;YACL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrD,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,YAAY,KAAK,CAAC,EAAE;oBAC/C,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC;oBAC1C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpD;qBAAM;oBACL,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpD;aACF;SACF;QACD,IAAI,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QAC7D,IAAI,+DAAiB,CAAC,eAAe,CAAC,EAAE;YACtC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;SAC7C;QACD,IAAM,IAAI,GAAG;YACX,UAAU,EAAE,IAAI,CAAC,gBAAgB;YACjC,eAAe;YACf,OAAO,EAAE,IAAI,CAAC,cAAc;YAC5B,QAAQ,EAAE,IAAI,CAAC,gBAAgB;YAC/B,cAAc,EAAE,IAAI,CAAC,oBAAoB;YACzC,WAAW,EAAE,IAAI,CAAC,iBAAiB;YACnC,gBAAgB,EAAE,IAAI,CAAC,eAAe;YACtC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;YAC1C,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;YACtC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;YAC3C,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;SACxC,CAAC;QACF,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;YAClC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;gBAC7D,IAAI,WAAW,CAAC,MAAM,KAAK,IAAI,EAAE;oBAC/B,IAAM,iBAAiB,GAAQ,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;oBAC5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACjD,OAAO,iBAAiB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;qBACrC;oBACD,KAAI,CAAC,gBAAgB,GAAG,iBAAiB,CAAC;oBAC1C,IAAM,YAAY,GAAQ,EAAE,CAAC;oBAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;wBAC1D,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;wBAC1H,YAAY,CAAC,IAAI,CAAC;4BAChB,YAAY,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;4BACpF,iBAAiB,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;4BACtF,cAAc,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;4BAClF,MAAM,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,KAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;4BACnF,aAAa,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;4BACrE,UAAU,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;4BAC9D,aAAa,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;4BAClE,YAAY,EAAE,QAAQ;4BACtB,WAAW,EAAE,YAAY;4BACzB,MAAM,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC;4BACtD,WAAW,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC;yBACrD,CAAC,CAAC;qBACJ;oBACD,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;oBACxB,KAAI,CAAC,aAAa,GAAG,YAAY,CAAC;oBAClC,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,aAAa,CAAC;oBAC5C,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC;oBACpD,KAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,IAAM,IAAI,GAAQ,EAAE,CAAC;oBACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAC5C,IAAI,OAAO,GAAQ,KAAK,CAAC;wBACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BACnD,IAAI,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,KAAK,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,IAAI,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,KAAK,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE;gCACnM,OAAO,GAAG,IAAI,CAAC;6BAChB;yBACF;wBACD,IAAI,OAAO,KAAK,KAAK,EAAE;4BACrB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;yBAC5B;qBACF;oBACD,KAAI,CAAC,UAAU,GAAG,IAAI,uEAAc,CAAe,IAAI,EAAE,IAAI,CAAC,CAAC;iBAChE;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gDAAgD,CAAC,CAAC;SACvE;IACH,CAAC;IAED,0DAAmB,GAAnB,UAAoB,MAAW,EAAE,OAAY;QAC3C,IAAM,SAAS,GAAG,EAAE,CAAC;QACrB,IAAM,UAAU,GAAG,EAAE,CAAC;QACtB,IAAI,WAAW,GAAG,KAAK,CAAC;QACxB,KAAK,IAAM,CAAC,IAAI,MAAM,EAAE;YACtB,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3B;QACD,KAAK,IAAM,QAAQ,IAAI,OAAO,EAAE;YAC9B,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;SACpC;QACD,IAAI,SAAS,CAAC,MAAM,KAAK,UAAU,CAAC,MAAM,EAAE;YAC1C,WAAW,GAAG,IAAI,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,OAAO,WAAW,CAAC;SACpB;aAAM;YACL,WAAW,GAAG,KAAK,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;YACpC,OAAO,WAAW,CAAC;SACpB;IACH,CAAC;IAED,kDAAW,GAAX;QACE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,wBAAwB,EAAE;YACnD,MAAM,EAAE,oBAAoB;YAC5B,MAAM,EAAE,KAAK;SACd,CAAC,CAAC;QACH,IAAG,CAAC,+DAAiB,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAC;YAC9C,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;SACtC;QACD,IAAG,CAAC,+DAAiB,CAAC,IAAI,CAAC,qBAAqB,CAAC,EAAC;YAChD,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;SACxC;QACD,IAAG,CAAC,+DAAiB,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAC;YAC/C,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;SACvC;QACD,IAAG,CAAC,+DAAiB,CAAC,IAAI,CAAC,sBAAsB,CAAC,EAAC;YACjD,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;SACzC;IACX,CAAC;IAED,6CAAM,GAAN,UAAO,IAAS;QACd,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,SAAS,EAAE;YAClD,IAAM,EAAE,GAAG,mCAAM,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YACtD,IAAM,IAAI,GAAG,mCAAM,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACnD,0BAA0B;YAC1B,OAAO,EAAE,CAAC;SACX;aAAM;YACL,OAAO,GAAG,CAAC;SACZ;IACH,CAAC;IAED,4CAAK,GAAL,UAAM,IAAU;QACd,OAAO,mCAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;IAC7C,CAAC;IAED,oDAAa,GAAb,UAAc,GAAgB;QAC5B,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,CAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,UAAM,CAAC;SAClE;QACD,+FAA+F;IACjG,CAAC;IAED,wDAAiB,GAAjB;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,IAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC;QACjD,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gDAAS,GAAT,UAAU,GAAQ;QAChB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IAED,+CAAQ,GAAR;QAAA,iBAgHC;QA/GC,IAAI,CAAC,sBAAsB,GAAG,iDAAY,CAAC,KAAK,CAAC;QACjD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;QACzC,IAAM,UAAU,GAAG,EAAE,CAAC;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC5C,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;SAC7C;QAED,IAAM,aAAa,GAAQ,EAAE,CAAC;QAE9B,UAAU,CAAC,OAAO,CAAC,UAAC,OAAY;YAC9B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;gBACpC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;QACH,IAAM,WAAW,GAAQ,EAAE,CAAC;QAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrD,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;SAC1F;QACD,IAAM,YAAY,GAAQ,EAAE,CAAC;QAE7B,WAAW,CAAC,OAAO,CAAC,UAAC,OAAY;YAC/B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;gBACnC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC5B;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,aAAa,CAAC,MAAM,KAAK,YAAY,CAAC,MAAM,EAAE;YAChD,IAAM,qBAAqB,GAAQ,EAAE,CAAC;YACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrD,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;aACpG;YACD,IAAM,MAAM,GAAG,EAAE,CAAC;YAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,qBAAqB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrD,IAAM,GAAG,GAAG,qBAAqB,CAAC,CAAC,CAAC,CAAC;gBACrC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACjD;YACD,IAAM,OAAO,GAAG,EAAE,CAAC;YAEnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC1C,IAAM,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC3B,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACvD;YACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,IAAM,KAAK,GAAQ,aAAa,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;oBACrB,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;wBACvB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,qDAAqD,CAAC,CAAC;wBAC3E,OAAO;qBACR;iBACF;aACF;YACD,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC1C,IAAM,aAAa,GAAQ,EAAE,CAAC;YAC9B,IAAM,MAAM,GAAQ,EAAE,CAAC;YACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC7C,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;aAClD;YACD,IAAM,SAAS,GAAQ,EAAE,CAAC;YAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACxC,IAAM,MAAI,GAAQ;oBAChB,eAAe,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;oBAC5C,gBAAgB,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;iBAC/C,CAAC;gBACF,SAAS,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC;aACtB;YAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrD,IAAI,OAAO,GAAQ,KAAK,CAAC;gBACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACzC,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,4BAA4B,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE;wBAC3F,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE;4BACjF,OAAO,GAAG,IAAI,CAAC;yBAChB;qBACF;iBACF;gBACD,IAAI,OAAO,IAAI,IAAI,EAAE;oBACnB,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC;oBAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;iBACvC;aACF;YACD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACtC,MAAM,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC;iBAC7D;aACF;YAED,IAAI,QAAQ,GAAQ,EAAE,CAAC;YACrB,QAAQ,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAClC,IAAI,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;YAC7D,IAAI,+DAAiB,CAAC,eAAe,CAAC,EAAE;gBACtC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;aAC7C;YACD,IAAM,IAAI,GAAG;gBACX,UAAU,EAAE,MAAM;gBAClB,iBAAiB,EAAE,QAAQ;gBAC3B,eAAe;gBACf,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;gBAC1C,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;gBACtC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;gBAC3C,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;aACxC,CAAC;YACF,UAAU,CAAC;gBACT,KAAI,CAAC,cAAc,EAAE,CAAC;YACxB,CAAC,EAAE,GAAG,CAAC,CAAC;YACR,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;SACnC;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,qDAAqD,CAAC,CAAC;SAC5E;IACH,CAAC;IAED,wDAAiB,GAAjB,UAAkB,GAAQ;QACxB,IAAM,OAAO,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrC,OAAO,OAAO,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;IACtE,CAAC;IAED,+CAAQ,GAAR,UAAS,GAAQ;QACf,IAAM,OAAO,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,uDAAgB,GAAhB,UAAiB,gBAAqB,EAAE,OAAgB;QAAxD,iBAsLC;QArLC,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;QACzC,IAAM,UAAU,GAAG,EAAE,CAAC;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC5C,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;SAC7C;QAED,IAAM,aAAa,GAAQ,EAAE,CAAC;QAE9B,UAAU,CAAC,OAAO,CAAC,UAAC,OAAY;YAC9B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;gBACpC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;QAEH,IAAM,WAAW,GAAQ,EAAE,CAAC;QAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrD,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;SAC1F;QAED,IAAM,YAAY,GAAQ,EAAE,CAAC;QAE7B,WAAW,CAAC,OAAO,CAAC,UAAC,OAAY;YAC/B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;gBACnC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC5B;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,aAAa,CAAC,MAAM,KAAK,YAAY,CAAC,MAAM,EAAE;YAChD,IAAM,qBAAqB,GAAQ,EAAE,CAAC;YACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrD,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;aACpG;YACD,IAAM,MAAM,GAAG,EAAE,CAAC;YAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,qBAAqB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrD,IAAM,GAAG,GAAG,qBAAqB,CAAC,CAAC,CAAC,CAAC;gBACrC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACjD;YAED,IAAM,OAAO,GAAG,EAAE,CAAC;YAEnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC1C,IAAM,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC3B,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACvD;YAED,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,iBAAiB,EAAC;gBAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC7C,IAAM,KAAK,GAAQ,aAAa,CAAC,CAAC,CAAC,CAAC;oBACpC,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;wBACrB,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;4BACvB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,qDAAqD,CAAC,CAAC;4BAC3E,OAAO;yBACR;qBACF;iBACF;aAEF;YAED,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YAE1C,IAAM,aAAa,GAAQ,EAAE,CAAC;YAC9B,IAAM,MAAM,GAAG,EAAE,CAAC;YAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC7C,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;aAClD;YAED,IAAM,SAAS,GAAQ,EAAE,CAAC;YAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,IAAM,IAAI,GAAQ;oBAChB,aAAa,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;oBACzC,cAAc,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;iBAC5C,CAAC;gBACF,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACtB;YACD,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;YACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrD,IAAI,OAAO,GAAQ,KAAK,CAAC;gBACzB,IAAI,UAAU,GAAG,EAAE,CAAC;gBACpB,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC,UAAC,CAAM,IAAK,QAAC,CAAC,aAAa,KAAK,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;uBAC/H,CAAC,CAAC,cAAc,KAAK,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,EADtC,CACsC,CAAC,CAAC;gBAClF,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;oBACzB,OAAO,GAAG,IAAI,CAAC;iBAChB;gBACD,IAAI,OAAO,IAAI,IAAI,EAAE;oBACnB,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC;oBAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;iBACvC;qBAAM;oBACL,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC;oBAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;iBACvC;aACF;YACD,IAAI,QAAQ,SAAK,CAAC;YAChB,QAAQ,GAAG,EAAE,CAAC;YAChB,IAAI,QAAQ,GAAQ,EAAE,CAAC;YACvB,QAAQ,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAC9B,IAAM,cAAc,GAAQ;gBAC1B,iBAAiB,EAAE,QAAQ;gBAC3B,cAAc,EAAE,QAAQ;gBACxB,UAAU,EAAE,MAAM;aACnB,CAAC;YAEF,IAAI,MAAM,GAAQ,EAAE,CAAC;YACrB,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxD,MAAM,GAAG,IAAI,CAAC;YACd,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YACvC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YACzC,IAAI,UAAU,GAAG,CAAC,CAAC;YACnB,IAAI,UAAU,GAAG,CAAC,CAAC;YACnB,IAAI,SAAS,GAAG,CAAC,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,IAAI,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAE,CAAC;YAC/E,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,OAAO,EAAE;gBAChC,UAAU,GAAG,CAAC,CAAC;gBACf,UAAU,GAAG,CAAC,CAAC;aAChB;YACD,IAAG,CAAC,IAAI,CAAC,iBAAiB,EAAC;gBACzB,SAAS,GAAG,CAAC,CAAC;aACf;YACD,IAAM,OAAO,GAAQ;gBACnB,QAAQ,EAAE,CAAC;gBACX,SAAS,EAAE,SAAS;gBACpB,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;gBAChD,kBAAkB,EAAE,cAAc;gBAClC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;gBACzB,cAAc,EAAE,UAAU;gBAC1B,WAAW,EAAG,UAAU;gBACxB,aAAa,EAAE,IAAI,CAAC,cAAc;gBAClC,qBAAqB,EAAE,IAAI,CAAC,eAAe;aAC5C,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC1C,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YAC3C,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;gBAC3E,IAAI,WAAW,CAAC,MAAM,KAAK,IAAI,EAAE;oBAC/B,0EAA0E;oBAC1E,IAAI,KAAI,CAAC,iBAAiB,EAAE;wBAC1B,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;4BAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC3D,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,CAAC,EAAE;oCACnD,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;oCAC5C,IAAM,MAAI,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oCACrE,IAAM,OAAO,GAAQ;wCACnB,OAAO,EAAE,MAAI,CAAC,aAAa;wCAC3B,SAAS,EAAE,MAAI,CAAC,eAAe;wCAC/B,WAAW,EAAE,MAAI,CAAC,cAAc;wCAChC,aAAa,EAAE,MAAI,CAAC,gBAAgB;wCACpC,OAAO,EAAE,MAAI,CAAC,OAAO;wCACrB,eAAe,EAAE,MAAI,CAAC,cAAc;wCACpC,eAAe,EAAE,MAAI,CAAC,eAAe;qCACtC,CAAC;oCACF,IAAM,qBAAqB,GAAQ,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;oCAC3D,YAAY,CAAC,OAAO,CAAC,yBAAyB,EAAE,qBAAqB,CAAC,CAAC;oCACvE,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;oCACvD,YAAY,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;iCAC5C;6BACF;yBACF;6BAAM;4BACL,IAAM,OAAO,GAAQ;gCACnB,OAAO,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO;gCACpC,SAAS,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;gCACxC,WAAW,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW;gCAC5C,aAAa,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa;gCAChD,OAAO,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO;gCACpC,eAAe,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU;gCAC/C,eAAe,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe;6BACrD,CAAC;4BACF,IAAM,qBAAqB,GAAQ,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;4BAC3D,YAAY,CAAC,OAAO,CAAC,yBAAyB,EAAE,qBAAqB,CAAC,CAAC;4BACvE,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;4BACvD,YAAY,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;yBAC5C;wBACD,IAAI,CAAC,CAAC,KAAI,CAAC,WAAW,IAAI,CAAC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,KAAI,CAAC,WAAW,IAAI,OAAO,CAAC,EAAE;4BACnF,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;4BAChE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;yBAC3C;qBACF;iBACF;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,qDAAqD,CAAC,CAAC;SAC5E;IACH,CAAC;IAED,qDAAc,GAAd;QAAA,iBAsDC;QArDC,IAAM,IAAI,GAAG;YACX,OAAO,EAAE,IAAI,CAAC,MAAM;YACpB,UAAU,EAAE,IAAI,CAAC,gBAAgB;YACjC,YAAY,EAAE,IAAI,CAAC,gBAAgB;SACpC,CAAC;QACF,sCAAsC;QACtC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,cAAc,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;YAChF,IAAI,WAAW,CAAC,MAAM,KAAK,IAAI,EAAE;gBAC/B,IAAM,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;gBAChE,KAAI,CAAC,gBAAgB,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;gBAClD,IAAM,SAAS,GAAG,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;gBACnE,KAAI,CAAC,kBAAkB,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;gBACtD,IAAM,MAAI,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;wCAC9C,CAAC;oBACR,IAAM,GAAG,GAAG,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC,CAAC;oBAClC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACjD,IAAI,KAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;wBAChC,GAAG,CAAC,IAAI,GAAG,MAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;wBAC5B,IAAI,MAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,MAAM,EAAE;4BAC/B,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC;yBACvB;6BAAM;4BACL,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC;yBACvB;wBACD,IAAM,QAAQ,GAAG,EAAE,CAAC;wBACpB,QAAQ,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,KAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;wBAC9D,GAAG,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;wBACvB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBAC3B;yBAAM;wBACL,IAAM,KAAK,GAAG,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,CAAM,IAAK,QAAC,CAAC,IAAI,KAAK,MAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAA3B,CAA2B,CAAC,CAAC;wBACjF,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;4BAChB,GAAG,CAAC,IAAI,GAAG,MAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;4BAC5B,IAAI,MAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,MAAM,EAAE;gCAC/B,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC;6BACvB;iCAAM;gCACL,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC;6BACvB;4BACD,IAAM,QAAQ,GAAG,EAAE,CAAC;4BACpB,QAAQ,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,KAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;4BAC9D,GAAG,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;4BACvB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;yBAC3B;6BAAM;4BACL,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,KAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;yBAClF;qBACF;;gBA9BH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAI,CAAC,MAAM,EAAE,CAAC,EAAE;4BAA3B,CAAC;iBA+BT;gBACD,IAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACxD,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,EAAE,KAAI,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;gBAC7D,KAAI,CAAC,kBAAkB,CAAC,KAAI,CAAC,UAAU,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;aAC3D;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yDAAkB,GAAlB,UAAmB,UAAc,EAAE,QAAY;QAC7C,IAAM,OAAO,GAAQ;YACnB,KAAK,EAAE;gBACL,IAAI,EAAE,YAAY;gBAClB,MAAM,EAAE,GAAG;aACZ;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,EAAE;aACT;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,EAAE;aACT;YACD,MAAM,EAAE;gBACN,KAAK,EAAE,QAAQ;gBACf,aAAa,EAAE,QAAQ;gBACvB,CAAC,EAAE,CAAC;gBACJ,OAAO,EAAE,CAAC;gBACV,aAAa,EAAE,CAAC;gBAChB,gBAAgB,EAAE,CAAC;gBACnB,SAAS,EAAE;oBACT,QAAQ,EAAE,MAAM;iBACjB;aACF;YACD,KAAK,EAAE;gBACL,UAAU,EAAE,QAAQ;gBACpB,KAAK,EAAE;oBACL,UAAU,EAAE,gBAAgB;iBAC7B;aACF;YACD,KAAK,EAAE;gBACL,KAAK,EAAE;oBACL,IAAI,EAAE,oBAAoB;iBAC3B;gBACD,KAAK,EAAE;oBACL,UAAU,EAAE,gBAAgB;iBAC7B;aACF;YACD,OAAO,EAAE;gBACP,MAAM,EAAE,IAAI;gBACZ,WAAW,EAAE,EAAE;aAChB;YACD,OAAO,EAAE;gBACP,OAAO,EAAE,KAAK;aACf;YACD,WAAW,EAAE;gBACX,UAAU,EAAE;oBACV,WAAW,EAAE,GAAG;iBACjB;aACF;YACD,MAAM,EAAE,UAAU;SACnB,CAAC;QACF,iDAAgB,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;IAC9C,CAAC;IAED,6DAAsB,GAAtB,UAAuB,IAAS;QAAhC,iBAcC;QAbC,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;YACrE,IAAI,WAAW,CAAC,MAAM,KAAK,IAAI,EAAE;gBAC/B,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACtB,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,CAAC,cAAc,CAAC,kBAAkB,CAAC,EAAE;oBAC7E,KAAI,CAAC,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,CAAC,kBAAkB,CAAC,CAAC,cAAc,CAAC,CAAC;oBAC1F,KAAI,CAAC,eAAe,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,CAAC,kBAAkB,CAAC,CAAC,WAAW,CAAC,CAAC;iBAChG;gBACD,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;oBAChE,KAAI,CAAC,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,CAAC;oBAC7E,KAAI,CAAC,eAAe,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC;iBACnF;aACF;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iDAAU,GAAV,UAAW,WAA6B;QACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjD,CAAC;IAED,kDAAW,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,0DAAmB,GAAnB,UAAoB,KAAa;QAC/B,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC5B,IAAM,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC;QACrC,IAAI,KAAK,KAAK,EAAE,EAAE;YAChB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;QACD,IAAI,IAAI,CAAC;QACT,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAS,CAAM;YACzC,IAAI,CAAC,CAAC,MAAM,IAAI,IAAI,EAAE;gBACpB,OAAO,CACL,CAAC,CAAC,YAAY;qBACX,QAAQ,EAAE;qBACV,WAAW,EAAE;qBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC,CAAC,cAAc;yBACb,QAAQ,EAAE;yBACV,WAAW,EAAE;yBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC,CAAC,aAAa;yBACZ,QAAQ,EAAE;yBACV,WAAW,EAAE;yBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC,CAAC,UAAU;yBACT,QAAQ,EAAE;yBACV,WAAW,EAAE;yBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC,CAAC,aAAa;yBACZ,QAAQ,EAAE;yBACV,WAAW,EAAE;yBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC,CAAC,MAAM;yBACL,QAAQ,EAAE;yBACV,WAAW,EAAE;yBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC,CAAC,WAAW;yBACV,QAAQ,EAAE;yBACV,WAAW,EAAE;yBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC,GAAG,CACL,CAAC;aACH;QACH,CAAC,CAAC,CAAC;QACL,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC;YACtC,IAAI,CAAC,iBAAiB,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,CAAC;SAC5D;aAAM;YACL,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;YACpD,IAAI,CAAC,iBAAiB,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,aAAa,CAAC,CAAC;SAC1E;QACD,iCAAiC;IACnC,CAAC;IAED,wDAAiB,GAAjB,UAAkB,KAAa;QAC7B,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,IAAM,cAAc,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC;YACzC,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,GAAG,CAAC;SACzC;aAAM;YACL,OAAO,GAAG,CAAC;SACZ;IAEH,CAAC;IAED,uDAAgB,GAAhB,UAAiB,KAAU;QACzB,IAAI,iBAAiB,CAAC;QACtB,IAAM,OAAO,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;QACnC,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,EAAE;YAC5E,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;YAChD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACjD,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;aAC7F;SACF;QACD,IAAM,IAAI,GAAG,EAAE,CAAC;QAChB,IAAI,QAAQ,GAAQ,mBAAmB,CAAC;QACxC,IAAG,KAAK,KAAK,kBAAkB,EAAE;YAC/B,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,wBAAwB,CAAC;YACnD,IAAI,CAAC,cAAc,CAAC,GAAG,kBAAkB,CAAC;YAC1C,QAAQ,GAAG,qCAAqC,GAAG,IAAI,CAAC,UAAU,CAAC;SACpE;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC;YAC7C,IAAI,CAAC,cAAc,CAAC,GAAG,cAAc,CAAC;YACtC,QAAQ,GAAG,qCAAqC,GAAG,IAAI,CAAC,UAAU,CAAC;SACpE;QACD,IAAI,CAAC,cAAc,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,QAAa;YAC5E,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE;gBAChC,IAAI,EAAE,mEAAmE;aAC1E,CAAC,CAAC;YACH,IAAM,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YACzD,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;YACxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,GAAG,OAAO,CAAC;YACnC,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sDAAe,GAAf,UAAgB,KAAe;QAA/B,iBAiCC;QAhCC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,WAAC,IAAI,eAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,EAA1B,CAA0B,CAAC,CAAC;QAC3D,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QACnC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC/C,QAAQ,CAAC,MAAM,CAAC,gBAAgB,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAC7D,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACnD,QAAQ,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACvD,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACrD,QAAQ,CAAC,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC7D,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACxC,QAAQ,CAAC,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAE,CAAC;QAC/D,QAAQ,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC1D,QAAQ,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC/D,QAAQ,CAAC,MAAM,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC3D,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACjE,IAAI,QAAQ,CAAC,MAAM,KAAK,IAAI,EAAE;gBAC5B,KAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;gBAC3C,KAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC;gBAChD,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,KAAI,CAAC,cAAc,EAAE,CAAC;aACvB;iBAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,QAAQ,EAAE;gBACvC,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,KAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC;gBACnC,sCAAsC;aACvC;QACH,CAAC,EAAE,UAAC,KAAU;YACZ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,0DAA0D,CAAC,CAAC;QAChF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mDAAY,GAAZ;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,oDAAa,GAAb;QACE,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YAClC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,qBAAqB,EAAE;gBAChD,MAAM,EAAE,aAAa;gBACrB,MAAM,EAAE,aAAa;gBACrB,MAAM,EAAE,IAAI;aACb,CAAC,CAAC;YACH,yCAAyC;SAC1C;IACH,CAAC;IAED,4DAAqB,GAArB,UAAsB,IAAS,EAAE,MAAW;QAC1C,IAAM,YAAY,GAAQ,EAAE,CAAC;QAC7B,IAAI,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YAClC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC1D,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBAC5H,YAAY,CAAC,IAAI,CAAC;oBAChB,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;oBACpF,iBAAiB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;oBACtF,cAAc,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;oBAClF,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;oBAC9E,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;oBAC1E,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;oBAC9D,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;oBAClE,YAAY,EAAE,QAAQ;oBACtB,WAAW,EAAE,YAAY;oBACzB,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC;oBACtD,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC;iBACrD,CAAC,CAAC;aACJ;YACD,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;YAClC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC;YAC5C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;YACpD,IAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SACnD;QACD,IAAM,IAAI,GAAQ,EAAE,CAAC;QACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5B;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAc,CAAe,IAAI,EAAE,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,wBAAwB;IAC1B,CAAC;IAED,kEAA2B,GAA3B,UAA4B,KAAe;QAA3C,iBAqBC;QApBC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,WAAC,IAAI,eAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,EAA1B,CAA0B,CAAC,CAAC;QAC3D,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACrE,IAAI,QAAQ,CAAC,MAAM,KAAK,IAAI,EAAE;gBAC5B,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACvC,IAAI,CAAC,OAAO,CAAC,UAAC,CAAM;oBAClB,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,+BAA+B,CAAC,CAAC,CAAC;gBACrE,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,qBAAqB,EAAE,CAAC;aAC9B;iBAAM;gBACL,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAC7B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACpC;QACH,CAAC,EAAE,UAAC,KAAU;YACZ,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,0DAA0D,CAAC,CAAC;QAChF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0DAAmB,GAAnB;QACE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,2DAAoB,GAApB;QACE,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,qBAAqB,EAAE;gBAChD,MAAM,EAAE,aAAa;gBACrB,MAAM,EAAE,aAAa;gBACrB,MAAM,EAAE,IAAI;aACb,CAAC,CAAC;YACH,yCAAyC;SAC1C;IACH,CAAC;IAED,kDAAW,GAAX,UAAY,KAAU;QACpB,cAAc,CAAC,OAAO,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;QACjD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,qDAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;QAC9C,IAAI,aAAa,GAAG,KAAK,CAAC;QAC1B,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,IAAG,CAAC,+DAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAC;YACvE,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;SAC/B;aAAM,IAAG,CAAC,+DAAiB,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAE,CAAC,EAAC;YACzF,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC;SACrC;QACD,IAAI,CAAC,IAAI,CAAC,cAAc,KAAK,GAAG,IAAI,IAAI,CAAC,cAAc,KAAK,GAAG,CAAC,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAC;YACzF,aAAa,GAAG,IAAI,CAAC;SACtB;QACD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,wBAAwB,EAAE;YACnD,MAAM,EAAE,oBAAoB;YAC5B,MAAM,EAAE,IAAI;YACZ,OAAO,EAAE,aAAa;SACvB,CAAC,CAAC;IACL,CAAC;IAED,gDAAS,GAAT,UAAU,QAAa;QACrB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC/B,CAAC;4GAnkDU,4BAA4B;gHAA5B,4BAA4B;sEA4G5B,wEAAY;;;;;YChLzB,yHACE;YA0GF;YAAA,wHACE;YAiEF;YAAA,gEAAK;;YA7KA,wFAA0B;YA2G1B,0DAAyB;YAAzB,uFAAyB;;uCD3G9B;CAyoDC;AArkDwC;6FAA5B,4BAA4B;cALxC,uDAAS;eAAC;gBACT,QAAQ,EAAE,2BAA2B;gBACrC,WAAW,EAAE,wCAAwC;gBACrD,SAAS,EAAE,CAAC,wCAAwC,CAAC;aACtD;6tBASyB,YAAY;kBAAnC,oDAAM;mBAAC,cAAc;YACZ,QAAQ;kBAAjB,oDAAM;YAmGkB,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;AA29CzB,SAAS,oBAAoB,CAAC,CAAkB,EAAE,CAAkB,EAAE,KAAc;IAClF,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC;;;;;;;;;;;;;AE7oDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACM;AACQ;AACP;AAC6B;AAClC;AAC+E;AAC9B;AACiB;AACS;AACzE;AACG;AACc;AACQ;AACd;AACd;AAC0B;;;AAElE,IAAM,KAAK,GAAW;IACpB;QACE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0FAAmB;QACxC,WAAW,EAAE,CAAC,6DAAmB,CAAC;QAClC,IAAI,EAAE,EAAC,KAAK,EAAE,MAAM,EAAC;KACtB;CACF,CAAC;AAEF;IAAA;KAkBC;mGADY,gBAAgB;8JAAhB,gBAAgB,kBAblB;gBACP,4DAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,KAAK,CAAC;gBAC5B,wDAAY;gBACZ,2DAAW;gBACX,8DAAe;gBACf,4EAAkB;gBAClB,oFAA2B;gBAC3B,sEAAc;gBACd,wDAAa;gBACb,sEAAgB;aACjB;2BAzCH;CA4CC;AAD4B;mIAAhB,gBAAgB,mBAhBZ,0FAAmB;QAChC,uIAA8B,EAAE,yGAAoB,EAAE,0HAAyB;QAC/E,mIAA4B,aAE5B,4DAAY,gEAEZ,wDAAY;QACZ,2DAAW;QACX,8DAAe;QACf,4EAAkB;QAClB,oFAA2B;QAC3B,sEAAc;QACd,wDAAa;QACb,sEAAgB;6FAGP,gBAAgB;cAjB5B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,0FAAmB;oBAChC,uIAA8B,EAAE,yGAAoB,EAAE,0HAAyB;oBAC/E,mIAA4B,CAAC;gBAC/B,OAAO,EAAE;oBACP,4DAAY;oBACZ,4DAAY,CAAC,QAAQ,CAAC,KAAK,CAAC;oBAC5B,wDAAY;oBACZ,2DAAW;oBACX,8DAAe;oBACf,4EAAkB;oBAClB,oFAA2B;oBAC3B,sEAAc;oBACd,wDAAa;oBACb,sEAAgB;iBACjB;aACF;;;;;;;;;;;;;;AC1CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AAajC;AACoB;AACc;AACJ;AACM;AACO;AACa;AACtC;AACP;AAGiB;AACiB;AAC3B;AACe;AACjB;AACqC;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;ICHhE,sEACE;IAAA;IAAA,4EAEF;IAF8D,2WAAgC;IAA5F,4DAEF;IAAA;IAAA,4DAAM;;;IAFwD,0DAAgC;IAAhC,8FAAgC;;;;IAG9F,sEACE;IAAA;IAAA,4EAEF;IAFiE,uWAA4B;IAA3F,4DAEF;IAAA;IAAA,4DAAM;;;IAF2D,0DAA4B;IAA5B,0FAA4B;;;IAsB/F,sEAAmC;IAAA,2EACvB;IAAA,+EAAoB;IAAA,oEAAG;IAAA,uDAA+B;IAAA,4DAAI;IAAC,uDAC3B;IAAA,4DAAO;IAAA,4DAAM;;;IADtB,0DAA+B;IAA/B,4GAA+B;IAAK,0DAC3B;IAD2B,qJAC3B;;;IAC5C,sEAAmC;IAAA,2EACrB;IAAA,+EAAoB;IAAA,oEAAG;IAAA,uDAAwC;IAAA,4DAAI;IAAC,uDAC/C;IAAA,4DAAO;IAAA,4DAAM;;;IADX,0DAAwC;IAAxC,qHAAwC;IAAK,0DAC/C;IAD+C,4IAC/C;;;IAmB7B,yEACE;IAAA;IAAA,2EAAiC;IAAA,kEAAO;IAAA,4DAAO;IACjD;IAAA,4DAAK;;;;IACL,yEAEE;IAAA;IAAA,2EAC2U;IAAA,uDAC7T;IAAA,4DAAO;IACvB;IAAA,4DAAK;;;;IAFD,0DAAwU;IAAxU,gfAAwU;IAAC,0DAC7T;IAD6T,8EAC7T;;;IAKhB,yEACE;IAAA;IAAA,2EAA2D;IAAA,uDAAS;IAAA,4DAAO;IAC7E;IAAA,4DAAK;;;IADwD,0DAAS;IAAT,8EAAS;;;IAM3C,2EAEU;IAAA,4DAAC;IAAA,4DAAO;;;;IADzC,gfAAwU;;;IAL5U,yEAEE;IAAA;IAAA,2EAC2U;IAAA,uDACzT;IAAA,4DAAO;IAAA,qIAEU;IACrC;IAAA,4DAAK;;;;IAJD,0DAAwU;IAAxU,gfAAwU;IAAC,0DACzT;IADyT,kFACzT;IAEhB,0DAAgC;IAAhC,oGAAgC;;;IAGtC,oEACuE;;;;;IACvE,yEAGA;IADE,wUAAS,iCAAqB,IAAC;IACjC;IAAA,4DAAK;;;;IAFH,gfAAwU;;;;IAzGtV,sEACE;IAAA;IAAA,8EACE;IAAA;IAAA,sFACE;IAAA;IAAA,yEAA4B;IAAA,0FAA+B;IAAA,4DAAM;IACjE;IAAA,gEACA;IAAA;IAAA,2EAA+B;IAAA,oGAAwC;IAAA,4DAAO;IAC9E;IAAA,qEACmD;IAAA,iEACnD;IAAA;IAAA,0EACE;IAAA;IAAA,0EACE;IAAA;IAAA,sFACE;IADmC,qXAAuC;IAC1E;IAAA,wFAA2D;IAAA,+DAAG;IAAA,4DAAmB;IACjF;IAAA,wFAA2D;IAAA,kEAAM;IAAA,4DAAmB;IACtF;IAAA,4DAAkB;IAClB;IAAA,iEACF;IAAA;IAAA,4DAAM;IACR;IAAA,4DAAM;IAEN;IAAA,2EAA+B;IAAA,2EAAe;IAAA,4DAAO;IAAA,iEACrD;IAAA;IAAA,0EACE;IAAA;IAAA,0EACE;IAAA;IAAA,uFACE;IADoC,4WAA8B;IAClE;IACA;IAAA,wFAA2D;IAAA,6EAAiB;IAAA,4DAAmB;IAC/F;IAAA,wFAA2D;IAAA,6EAAiB;IAAA,4DAAmB;IACjG;IAAA,4DAAkB;IAClB;IAAA,iEACA;IAAA;IAAA,6HACE;IAGF;IAAA,6HACE;IAGF;IAAA,iEACA;IAAA;IAAA,iEACF;IAAA;IAAA,4DAAM;IACR;IAAA,4DAAM;IACN;IAAA,2EACE;IAAA;IAAA,2EACE;IAAA;IAAA,4EAAsC;IAAA,wDAA6B;IAAA,4DAAO;IAC1E;IAAA,8EAC+F;IAA/B,wUAA8B;IAAC,qEAAG;IAAA,oEAAQ;IAAA,4DAAI;IAC9G;IAAA,4DAAS;IACX;IAAA,4DAAM;IACR;IAAA,4DAAM;IACR;IAAA,4DAAmB;IACrB;IAAA,4DAAW;IACX;IAAA,iEACA;IAAA;IAAA,gFAEE;IAAA;IAAA,uFACE;IAAA;IAAA,uEACE;IAAA;IAAA,6HAAmC;IAGnC;IAAA,6HAAmC;IAGnC;IAEF;IAAA,4DAAM;IACR;IAAA,4DAAmB;IACrB;IAAA,4DAAW;IACX;IAAA,gFAEE;IAAA;IACA;IAAA,uFAEE;IAAA;IAAA,kEACA;IAAA;IAAA,4EACE;IAAA;IACA;IAAA,4EACE;IAAA;IAAA,8EAEE;IADyB,8WAAsD;IAC/E;IACA;IAAA,8EACE;IAAA;IAAA,8HACE;IAEF;IAAA,8HAEE;IAIJ;IAAA,qEAAe;IACf;IACA;IAAA,8EACE;IAAA;IAAA,8HACE;IAEF;IAAA,8HAEE;IAMJ;IAAA,qEAAe;IACf;IAAA,8HACkE;IAClE;IAAA,8HAGA;IACF;IAAA,4DAAQ;IACR;IAAA,2EACE;IAAA;IAAA,uEAAI;IAAA,wEAAqC;IAAC;IAAA,6EAAoB;IAAA,6EAAgB;IAAA,4DAAO;IAAA,4DAAK;IAC5F;IAAA,4DAAK;IACP;IAAA,4DAAM;IACN;IAAA,4EACE;IAAA;IAAA,uEAA4B;IAC5B;IAAA,2EACE;IAAA;IAAA,uEAAI;IAAA,wEAAsC;IAAC;IAAA,6EAAqB;IAAA,6EAAgB;IAAA,4DAAO;IAAA,4DAAK;IAC9F;IAAA,4DAAK;IACP;IAAA,4DAAM;IACR;IAAA,4DAAM;IACN;IAAA,kEACF;IAAA;IAAA,4DAAmB;IACrB;IAAA,4DAAW;IACX;IAAA,kEACF;IAAA;IAAA,4DAAM;;;IAtH8D,2DAAqC;IAArC,qGAAqC;IAI1D,0DAAuC;IAAvC,qGAAuC;IAC9C,0DAAiB;IAAjB,0EAAiB;IACjB,0DAAiB;IAAjB,0EAAiB;IAST,2DAA8B;IAA9B,4FAA8B;IAEtC,0DAAiB;IAAjB,0EAAiB;IACjB,0DAAiB;IAAjB,0EAAiB;IAG1C,0DAA2B;IAA3B,8FAA2B;IAI3B,0DAA2B;IAA3B,8FAA2B;IAUM,2DAA6B;IAA7B,iGAA6B;IASvC,2DAAgC;IAAhC,gGAAgC;IAIzD,0DAA6B;IAA7B,8FAA6B;IAG7B,0DAA6B;IAA7B,8FAA6B;IAQ9B,0DAAgC;IAAhC,gGAAgC;IAMjC,0DAAgC;IAAhC,gGAAgC;IAGwC,0DAAyB;IAAzB,yFAAyB;IA4B7E,2DAAyD;IAAzD,6GAAyD;IAEhE,0DAAwD;IAAxD,8GAAwD;;;;IA8CtE,sEACE;IAAA;IAAA,sEACE;IAAA;IAAA,2EAAiD;IAAA,6FACjD;IAAA,4DAAO;IACT;IAAA,4DAAM;IACN;IAAA,gEACA;IAAA;IAAA,2EAA+B;IAAA,qGAAyC;IAAA,4DAAO;IAAA,iEAC/E;IAAA;IAAA,0EACE;IAAA;IAAA,2EACE;IAAA;IAAA,uFACE;IADe,mZAA8B;IAC7C;IAAA,wFAA6C;IAAA,6EAAiB;IAAA,4DAAmB;IACjF;IAEF;IAAA,4DAAkB;IAClB;IAAA,iEACF;IAAA;IAAA,4DAAM;IACR;IAAA,4DAAM;IACR;IAAA,4DAAM;;;IARiB,2DAA8B;IAA9B,6FAA8B;IACjB,0DAAgB;IAAhB,yEAAgB;;;IAsB5C,wEACE;IAAA;IAAA,oEAAG;IAAA,2EAA0B;IAAA,wFAA6B;IAAA,4DAAO;IAAA,4DAAI;IACvE;IAAA,qEAAe;;;IACf,wEACE;IAAA;IAAA,oEAAG;IAAA,2EAA0B;IAAA,yGAA8C;IAAA,4DAAO;IAAA,4DAAI;IACxF;IAAA,qEAAe;;;IAgBjB,wEACE;IAAA;IAAA,2EAA0B;IAAA,mFAAwB;IAAA,4DAAO;IAC3D;IAAA,qEAAe;;;IAef,wEACE;IAAA;IAAA,2EAA0B;IAAA,yFAA8B;IAAA,4DAAO;IACjE;IAAA,qEAAe;;;IACf,wEACE;IAAA;IAAA,2EAA0B;IAAA,uDAAsB;IAAA,4DAAO;IACzD;IAAA,qEAAe;;;IADa,0DAAsB;IAAtB,2FAAsB;;;;IAvDtD,yEACE;IAAA;IAAA,0EACE;IAAA;IAAA,0EACE;IAAA;IAAA,4EAEA;IAFuB,8YAAqB,2UACb,GAAG,GAAC,GAAG,KADM;IAA5C,4DAEA;IAAA;IAAA,4EAAoD;IAAA,iGAClD;IAAA,sEAGF;IAAA;IAAA,4DAAQ;IACR;IAAA,6EAGA;IAFuC,sYAA+B;IADtE,4DAGA;IAAA;IAAA,oMACE;IAEF;IAAA,oMACE;IAEJ;IAAA,4DAAM;IACR;IAAA,4DAAM;IACN;IAAA,2EACE;IAAA;IAAA,2EACE;IAAA;IAAA,6EAEA;IAFuB,8YAAoB,4UACZ,GAAG,GAAC,GAAG,KADK;IAA3C,4DAEA;IAAA;IAAA,6EAA4B;IAAA,iGAC1B;IAAA,sEAGF;IAAA;IAAA,4DAAQ;IACR;IAAA,6EAGF;IAFwC,wXAAuB;IAD7D,4DAGF;IAAA;IAAA,4DAAM;IACN;IAAA,oMACE;IAEJ;IAAA,4DAAM;IACN;IAAA,2EACE;IAAA;IAAA,2EACE;IAAA;IAAA,6EAEA;IAFuB,iZAAuB,8UACb,GAAG,GAAC,GAAG,KADM;IAA9C,4DAEA;IAAA;IAAA,6EAA4B;IAAA,sGAC1B;IAAA,sEAGF;IAAA;IAAA,4DAAQ;IACR;IAAA,6EAGF;IAF8C,4XAA2B;IADvE,4DAGF;IAAA;IAAA,4DAAM;IACN;IAAA,oMACE;IAEF;IAAA,oMACE;IAEJ;IAAA,4DAAM;IACR;IAAA,4DAAM;;;IAvDuB,0DAAqB;IAArB,oFAAqB;IAKxC,0DAAqC;IAArC,sGAAqC;IAIvC,0DAAuB;IAAvB,sFAAuB;IACX,0DAAgB;IAAhB,kFAAgB;IAGhB,0DAAqB;IAArB,uFAAqB;IAOZ,0DAAoB;IAApB,mFAAoB;IAKvC,0DAAqC;IAArC,sGAAqC;IAIvC,0DAAuB;IAAvB,sFAAuB;IAEb,0DAAiB;IAAjB,mFAAiB;IAMN,0DAAuB;IAAvB,sFAAuB;IAK1C,0DAAqC;IAArC,sGAAqC;IAG+B,0DAA2B;IAA3B,0FAA2B;IAGvF,0DAAqB;IAArB,uFAAqB;IAGrB,0DAA0B;IAA1B,4FAA0B;;;IAK5C,wEAA0C;IAAA,+GAAoD;IAAA,4DAAI;;;;IA5DpG,wEACE;IAAA;IAAA,6KACE;IA0DF;IAAA,uKAA0C;IAC1C;IAAA,gEACA;IAAA;IAAA,gEACA;IAAA;IAAA,2EACE;IAAA;IAAA,2EACE;IAAA;IAWF;IAAA,4DAAM;IACN;IAAA,2EACE;IAAA;IAAA,8EAE+B;IAA7B,6WAAsB,IAAI,KAAE;IAAC,qEAAG;IAAA,oEAAQ;IAAA,4DAAI;IAC9C;IAAA,4DAAS;IACX;IAAA,4DAAM;IACR;IAAA,4DAAM;IACR;IAAA,qEAAe;;;IAnFI,0DAA2B;IAA3B,6FAA2B;IA2DzC,0DAAiB;IAAjB,mFAAiB;;;;IA2BlB,wEACE;IAAA;IAAA,0EAA8C;IAAA,yLAE9C;IAAA,4DAAM;IACN;IAAA,0EAAuG;IAA/B,mYAA8B;IAAC,wJAGvG;IAAA,4DAAM;IACR;IAAA,qEAAe;;;IACf,wEACE;IAAA;IAAA,0EAA8D;IAAA,uDAAuB;IAAA,4DAAM;IAC7F;IAAA,qEAAe;;;IADiD,0DAAuB;IAAvB,4FAAuB;;;;IAEvF,wEACE;IAAA;IAAA,0EAAyD;IAAA,uDACpC;IAAA,4DAAM;IAC3B;IAAA,0EACE;IAAA,sIACA;IAAA,sEAAK;IAAA,uDAA6B;IAAA,4DAAM;IACxC;IAAA,uEAAK;IAAA,wDAA8B;IAAA,4DAAM;IACzC;IAAA,uEAAK;IAAA,wDAA6B;IAAA,4DAAM;IAC1C;IAAA,4DAAM;IACN;IAAA,2EAAyD;IAAA,wDAAiB;IAAA,4DAAM;IAChF;IAAA,2EAA8C;IAAA,+LAE9C;IAAA,4DAAM;IACN;IAAA,8EAC6B;IADV,iYAAwB;IACd,oFAC7B;IAAA,4DAAS;IACT;IAAA,8EACiC;IAA/B,6XAAuB,KAAK,KAAE;IAAC,sFACjC;IAAA,4DAAS;IACX;IAAA,qEAAe;;;IAlB4C,0DACpC;IADoC,0JACpC;IAGd,0DAA6B;IAA7B,2GAA6B;IAC7B,0DAA8B;IAA9B,4GAA8B;IAC9B,0DAA6B;IAA7B,2GAA6B;IAEqB,0DAAiB;IAAjB,sFAAiB;;;;IAY5E,0EACE;IADqB,sVAAS,YAAkB,IAAC;IACjD;IAAA,6EAA0F;IAAA,2GAE1F;IAAA,4DAAS;IACT;IAAA,gFAEF;IADI,qZAA+C;IADjD,4DAEF;IAAA;IAAA,4DAAM;;;IAzCV,wEACE;IAAA;IAAA,0EACE;IAAA;IAAA,4LACE;IAQF;IAAA,4LACE;IAEF;IAAA,6LACE;IAmBF;IACA;IAAA,6KACE;IAMJ;IAAA,4DAAM;IACR;IAAA,qEAAe;;;IAzCG,0DAAiB;IAAjB,mFAAiB;IASjB,0DAAkB;IAAlB,oFAAkB;IAGlB,0DAAgB;IAAhB,kFAAgB;IAqBzB,0DAAiB;IAAjB,mFAAiB;;;IAnJhC,wEACE;IAAA;IAAA,+EACE;IAAA;IAAA,sFAEE;IAAA;IAAA,sEACE;IAAA;IAAA,2EAAiD;IAAA,sGACjD;IAAA,4DAAO;IACP;IAAA,iEACF;IAAA;IAAA,4DAAM;IACN;IAAA,6JACE;IAiBF;IAAA,+KACE;IAoFF;IAAA,+KACE;IA2CJ;IAAA,4DAAmB;IACrB;IAAA,4DAAW;IACb;IAAA,qEAAe;;;IArJJ,2DAAwB;IAAxB,0FAAwB;IAkBf,0DAAgC;IAAhC,kGAAgC;IAqFhC,0DAA+C;IAA/C,yHAA+C;;;;IAuE3D,sEACE;IAAA;IAAA,uFAKA;IAJmC,+ZAAiD;IAIpF;IAAA,4DAAmB;IACrB;IAAA,4DAAM;;;IANc,0DAAkC;IAAlC,mGAAkC;;;IASlD,0EACE;IAAA;IAAA,wEAAwB;IAAA,2EAAgB;IAAA,4DAAI;IAC9C;IAAA,4DAAM;;;IAbZ,wEACE;IAAA;IAAA,0JACE;IAOF;IAAA,yEACE;IAAA;IAAA,yEACE;IAAA;IAAA,2JACE;IAEJ;IAAA,4DAAM;IACR;IAAA,4DAAM;IACR;IAAA,qEAAe;;;IAfR,0DAA4B;IAA5B,+FAA4B;IAUxB,0DAA4B;IAA5B,8FAA4B;;;;;;;IAY/B,kFAKE;IAHA,6bAA0D;IAG1D;IAAA,4FACE;IAAA;IAAA,2EACE;IAAA;IAAA,2EACE;IAAA;IAAA,yEAAwB;IAAA,wDAA6C;IAAA,4DAAI;IACzE;IAAA,4EAA0B;IAAA,wDAAiB;IAAA,4DAAM;IACjD;IAAA,4EAA0B;IAAA,wDAAuB;IAAA,4DAAM;IACzD;IAAA,4DAAM;IACR;IAAA,4DAAM;IACR;IAAA,4DAAkB;IACpB;IAAA,4DAAa;;;;IAdwC,8EAAqB;IAKvD,0DAAuB;IAAvB,gFAAuB;IAGV,0DAA6C;IAA7C,iIAA6C;IAC3C,0DAAiB;IAAjB,2FAAiB;IACjB,0DAAuB;IAAvB,iGAAuB;;;;IAfjE,wEACE;IAAA;IAAA,yEACE;IAAA;IAAA,0EACE;IAAA;IAAA,8EAEE;IADA,yWAAyB;IACzB;IAAA,2KAKE;IAUJ;IAAA,4DAAU;IACZ;IAAA,4DAAM;IACR;IAAA,4DAAM;IACR;IAAA,qEAAe;;;IApBA,0DAAqB;IAArB,sFAAqB;IAEhB,0DAAwC;IAAxC,oFAAwC;;;;;IA3NpE,sEACE;IAAA;IAAA,+EACE;IAAA;IAAA,sEACE;IAAA;IAAA,uEACE;IAAA;IAAA,oEACE;IAAA,+HACF;IAAA,4DAAI;IACN;IAAA,4DAAO;IACP;IAAA,4EACE;IAAA,+GACF;IAAA,4DAAO;IACP;IAAA,2EACF;IADgD,2VAAiC;IAA/E,4DACF;IAAA;IAAA,4DAAM;IACR;IAAA,4DAAW;IACX;IAAA,+JACE;IA+JF;IAAA,2EACE;IAAA;IAAA,+EACE;IAAA;IAAA,uFACE;IAAA;IACA;IAAA,uEAAK;IAAA,4EAAiD;IAAA,wDACpB;IAAA,4DAAO;IACvC;IAAA,2EACE;IAAA;IAAA,mGAEE;IAFoD,gYAAuB;IAE3E;IAAA,yFACE;IAAA;IAAA,gFAA+B;IAAA,wEAAW;IAAA,4DAAW;IACrD,uGACF;IAAA,4DAAoB;IACpB;IAAA,yFAEE;IAAA;IAAA,gFAA+B;IAAA,qEAAQ;IAAA,4DAAW;IAClD,qGACF;IAAA,4DAAoB;IACtB;IAAA,4DAA0B;IAC5B;IAAA,4DAAM;IACR;IAAA,4DAAM;IACN;IAAA,iEACA;IAAA;IAAA,+JACE;IAgBF;IACA;IAAA,+JACE;IAuBJ;IAAA,4DAAmB;IACrB;IAAA,4DAAW;IACb;IAAA,4DAAM;IACR;IAAA,4DAAM;;;IAnOU,2DAAwB;IAAxB,0FAAwB;IAoKsB,2DACpB;IADoB,sJACpB;IAEwB,0DAAuB;IAAvB,sFAAuB;IAExD,0DAAc;IAAd,uEAAc;IAId,0DAAe;IAAf,wEAAe;IAS1B,2DAAiB;IAAjB,mFAAiB;IAkBjB,0DAAkB;IAAlB,oFAAkB;;;IAvN1C,wEACE;IAAA;IAAA,sIACE;IAiPJ;IAAA,qEAAe;;;IAlPR,0DAAuB;IAAvB,wFAAuB;;;IAkQhB,0EACE;IAAA;IAAA,wEAAwB;IAAA,2EAAgB;IAAA,4DAAI;IAC9C;IAAA,4DAAM;;;;IAhBlB,2EACE;IAAA;IAAA,8EACE;IAAA;IAAA,sFACE;IAAA;IAAA,sEAAK;IAAA,2EAAiD;IAAA,4FAAiC;IAAA,4DAAO;IAAA,4DAAM;IACpG;IAAA,iEACA;IAAA;IAAA,yEAEE;IAAA;IAAA,uEACE;IAAA;IAAA,yFAE2E;IAD/C,kYAA8C;IAClB,4DAAmB;IAC7E;IAAA,4DAAM;IACN;IAAA,0EACE;IAAA;IAAA,0EACE;IAAA;IAAA,6IACE;IAEJ;IAAA,4DAAM;IACR;IAAA,4DAAM;IACR;IAAA,qEAAe;IACjB;IAAA,4DAAmB;IACrB;IAAA,4DAAW;IACb;IAAA,4DAAM;;;IAdsB,2DAAuC;IAAvC,yGAAuC;IAMlD,0DAAuC;IAAvC,0GAAuC;;;IAsC5C,6EACE;IAAA;IAAA,0EACE;IAAA;IAAA,0EAA8B;IAAA,gFAAqB;IAAA,4DAAK;IACxD;IAAA,qEAAI;IAAA,oEAAS;IAAA,4DAAK;IAClB;IAAA,2EAA+B;IAAA,2EAAe;IAAA,4DAAK;IACrD;IAAA,4DAAK;IACL;IAAA,sEACE;IAAA;IAAA,sEAAI;IAAA,wDAA2B;IAAA,4DAAK;IACpC;IAAA,sEAAI;IAAA,wDAAsC;IAAA,4DAAK;IAC/C;IAAA,sEAAI;IAAA,wDAA8B;IAAA,4DAAK;IACzC;IAAA,4DAAK;IACP;IAAA,4DAAQ;;;IAJA,2DAA2B;IAA3B,0GAA2B;IAC3B,0DAAsC;IAAtC,qHAAsC;IACtC,0DAA8B;IAA9B,6GAA8B;;;IAWpC,qEACE;IAAA;IAAA,0EAA0B;IAAA,uDAAwB;IAAA,4DAAK;IACvD;IAAA,0EAA0B;IAAA,uDAA6B;IAAA,4DAAK;IAC5D;IAAA,0EAA0B;IAAA,uDAAqB;IAAA,4DAAK;IACpD;IAAA,2EAA0B;IAAA,wDAAkB;IAAA,4DAAK;IACnD;IAAA,4DAAK;;;IAJuB,0DAAwB;IAAxB,uGAAwB;IACxB,0DAA6B;IAA7B,4GAA6B;IAC7B,0DAAqB;IAArB,oGAAqB;IACrB,0DAAkB;IAAlB,wFAAkB;;;IAE9C,qEACE;IAAA;IAAA,qEAAI;IAAA,2EAAgB;IAAA,4DAAK;IACzB;IAAA,qEAAI;IAAA,uDAAyC;IAAA,4DAAK;IAClD;IAAA,qEAAI;IAAA,uDAAoC;IAAA,4DAAK;IAC7C;IAAA,sEAAI;IAAA,wDAAgB;IAAA,4DAAK;IAC3B;IAAA,4DAAK;;;IAHC,0DAAyC;IAAzC,wHAAyC;IACzC,0DAAoC;IAApC,mHAAoC;IACpC,0DAAgB;IAAhB,sFAAgB;;;IAjBxB,6EACE;IAAA;IAAA,0EACE;IAAA;IAAA,0EAA8B;IAAA,gFAAqB;IAAA,4DAAK;IACxD;IAAA,qEAAI;IAAA,oEAAS;IAAA,4DAAK;IAClB;IAAA,sEAAI;IAAA,2EAAe;IAAA,4DAAK;IACxB;IAAA,2EAA+B;IAAA,kFAAsB;IAAA,4DAAK;IAC5D;IAAA,4DAAK;IACL;IAAA,oJACE;IAKF;IAAA,oJACE;IAKJ;IAAA,4DAAQ;;;IAZF,2DAAoB;IAApB,uFAAoB;IAMpB,0DAAkB;IAAlB,qFAAkB;;;IAtDpC,sEACE;IAAA;IAAA,2EACE;IAAA;IAAA,sFACE;IAAA;IAAA,sEAAK;IAAA,4EAA0B;IAAA,+FAAoC;IAAA,4DAAO;IAAA,4DAAM;IAChF;IAAA,iEACA;IAAA;IAAA,0EACE;IAAA;IAAA,4EACE;IAAA;IAAA,uEAAuC;IACzC;IAAA,4DAAM;IACR;IAAA,4DAAM;IACN;IAAA,4EACE;IAAA;IAAA,4EACE;IAAA;IAAA,0EACE;IAAA;IAAA,4EAAkE;IAAA,wDAAwB;IAAA,4DAAM;IAChG;IAAA,4EAAqD;IAAA,2GAA+C;IAAA,4DAAM;IAC5G;IAAA,4DAAM;IACR;IAAA,4DAAM;IACN;IAAA,4EACE;IAAA;IAAA,0EACE;IAAA;IAAA,4EAAkE;IAAA,wDAA0B;IAAA,4DAAM;IAClG;IAAA,4EAAqD;IAAA,+HACrD;IAAA,4DAAM;IACR;IAAA,4DAAM;IACR;IAAA,4DAAM;IACR;IAAA,4DAAM;IACN;IAAA,4EACE;IAAA;IAAA,4EACE;IAAA;IAAA,yEACE;IAAA;IAAA,mJACE;IAYF;IAAA,mJACE;IAmBJ;IAAA,qEAAe;IACjB;IAAA,4DAAM;IACR;IAAA,4DAAM;IACR;IAAA,4DAAmB;IACrB;IAAA,4DAAW;IACb;IAAA,4DAAM;;;IArDwE,2DAAwB;IAAxB,uGAAwB;IAMxB,2DAA0B;IAA1B,yGAA0B;IASnD,2DAAe;IAAf,kFAAe;IAaf,0DAAkC;IAAlC,8GAAkC;;;IAlEzF,wEACE;IAAA;IAAA,uIACE;IAuBF;IAAA,qIACE;IAkEJ;IAAA,qEAAe;;;IA3FR,0DAAuB;IAAvB,wFAAuB;IAwBvB,0DAAwB;IAAxB,yFAAwB;;;IAuE3B,wEACE;IAAA;IAAA,2EAAsC;IAAA,uDAAyD;IAAA,4DAAM;IACrG;IAAA,2EACE;IAAA,kHACA;IAAA,qEACE;IAAA;IAAA,qEAAI;IAAA,wDAA6B;IAAA,4DAAK;IACtC;IAAA,sEAAI;IAAA,wDAA8B;IAAA,4DAAK;IACvC;IAAA,sEAAI;IAAA,wDAA6B;IAAA,4DAAK;IACxC;IAAA,4DAAK;IACP;IAAA,4DAAM;IACR;IAAA,qEAAe;;;IATyB,0DAAyD;IAAzD,wIAAyD;IAIvF,0DAA6B;IAA7B,4GAA6B;IAC7B,0DAA8B;IAA9B,6GAA8B;IAC9B,0DAA6B;IAA7B,4GAA6B;;;;IARzC;IAAA,0FACE;IAAA;IAAA,sJACE;IAUJ;IAAA,4DAAqB;IACrB;IAAA,yEAA2B;IAC3B;IAAA,0FACE;IAAA;IAAA,+EAA+F;IAAvD,mVAA8B;IAAyB,kEAAM;IAAA,4DAAS;IAC9G;IAAA,+EACgB;IADgD,6UAAwB;IACxE,0EAChB;IAAA,4DAAS;IACX;IAAA,4DAAqB;IACvB;;;IAnBkB,0DAAmB;IAAnB,oFAAmB;;AD5brC,IAAM,MAAM,GAAG,mBAAO,CAAC,uDAA2C,CAAC,CAAC;AAUpE,oEAAY,CAAC,wCAAU,CAAC,CAAC;AACzB,IAAM,KAAK,GAAG,mBAAO,CAAC,sCAA0B,CAAC,CAAC;AAClD,IAAM,MAAM,GAAG,mBAAO,CAAC,mDAAuC,CAAC,CAAC;AAChE,MAAM,CAAC,wCAAU,CAAC,CAAC;AACnB,IAAM,IAAI,GAAG,mBAAO,CAAC,wCAA4B,CAAC,CAAC;AAanD,SAAS,oBAAoB,CAAC,CAAkB,EAAE,CAAkB,EAAE,KAAc;IAClF,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC;AAED,SAAS,kBAAkB,CAAC,CAAkB,EAAE,CAAkB,EAAE,KAAc;IAChF,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC;AAED;IAyME,mCACU,WAA8B,EAC/B,MAAqB,EACpB,kBAAqC,EACrC,aAA4B,EAC7B,aAAkC,EACjC,MAAiB,EACjB,cAA8B,EAC9B,kBAAsC;QARhD,iBAgEC;QA/DS,gBAAW,GAAX,WAAW,CAAmB;QAC/B,WAAM,GAAN,MAAM,CAAe;QACpB,uBAAkB,GAAlB,kBAAkB,CAAmB;QACrC,kBAAa,GAAb,aAAa,CAAe;QAC7B,kBAAa,GAAb,aAAa,CAAqB;QACjC,WAAM,GAAN,MAAM,CAAW;QACjB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,uBAAkB,GAAlB,kBAAkB,CAAoB;QA3MhD,wBAAmB,GAAG,IAAI,CAAC;QAC3B,+BAA0B,GAAQ,CAAC,CAAC;QACpC,oBAAe,GAAQ,CAAC,CAAC;QAMzB,8BAAyB,GAAQ,EAAE,CAAC;QACpC,yBAAoB,GAAiB,iDAAY,CAAC,KAAK,CAAC;QAIhC,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QAChD,aAAQ,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAChE,qBAAgB,GAAG,GAAG,CAAC;QACvB,kBAAa,GAAQ,EAAE,CAAC;QACxB,yBAAoB,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,aAAa,CAAC,CAAC;QACvE,iBAAY,GAAG,IAAI,uEAAc,CAAY,IAAI,EAAE,EAAE,CAAC,CAAC;QACvD,aAAQ,GAAG,EAAE,CAAC;QACd,kCAA6B,GAAa;YACxC,QAAQ;YACR,UAAU;YACV,QAAQ;YACR,WAAW;YACX,SAAS;YACT,eAAe;SAChB,CAAC;QACF,8BAAyB,GAAa;YACpC,QAAQ;YACR,UAAU;YACV,QAAQ;YACR,WAAW;YACX,SAAS;YACT,eAAe;SAChB,CAAC;QA4BF,aAAQ,GAAQ,EAAE,CAAC;QAEnB,cAAS,GAAQ,EAAE,CAAC;QACpB,mBAAc,GAAG,IAAI,uEAAc,CAAY,IAAI,EAAE,EAAE,CAAC,CAAC;QAGzD,gBAAW,GAAG,GAAG,CAAC;QAClB,cAAS,GAAG,IAAI,CAAC;QAGjB,cAAS,GAAQ,IAAI,CAAC;QACtB,YAAO,GAAQ,EAAE,CAAC;QAElB,eAAU,GAAQ,EAAE,CAAC;QAErB,qBAAgB,GAAa,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACtE,gBAAW,GAAG,KAAK,CAAC;QACpB,YAAO,GAAQ,CAAC,CAAC;QAEjB,WAAM,GAAQ,CAAC,CAAC;QAChB,aAAQ,GAAG,IAAI,CAAC;QAChB,eAAU,GAAG,IAAI,CAAC;QAClB,cAAS,GAAG,IAAI,CAAC;QACjB,cAAS,GAAQ,CAAC,CAAC;QACnB,oBAAe,GAAsB,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC5F,aAAQ,GAAG,IAAI,0DAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;QAGpD,uBAAkB,GAAQ,KAAK,CAAC;QAChC,cAAS,GAAG,KAAK,CAAC;QAIlB,uBAAkB,GAAQ,EAAE,CAAC;QAUE,yBAAoB,GAAG,IAAI,CAAC;QAC3D,iBAAY,GAAG,IAAI,CAAC;QACpB,aAAQ,GAAc,CAAC,KAAK,CAAC,CAAC;QAQ9B,gBAAW,GAAQ,aAAa,CAAC;QACjC,aAAQ,GAAG,KAAK,CAAC;QACjB,kBAAa,GAAG,EAAE,CAAC;QAEnB,eAAU,GAAG,KAAK,CAAC;QACnB,mBAAc,GAAG,KAAK,CAAC;QAKvB,yBAAoB,GAAG,KAAK,CAAC;QAG7B,0BAAqB,GAAQ,EAAE,CAAC;QAChC,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,8BAAyB,GAAa;YACpC,OAAO;YACP,kBAAkB;SACnB,CAAC;QACF,cAAS,GAAQ,EAAE,CAAC;QACpB,eAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,SAAS,CAAC,CAAC;QACzD,yBAAoB,GAAG,KAAK,CAAC;QAC7B,oBAAe,GAAG,KAAK,CAAC;QACxB,8BAAyB,GAAQ,EAAE,CAAC;QAEpC,8BAAyB,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,yBAAyB,CAAC,CAAC;QACzD,wBAAmB,GAAG,IAAI,0DAAY,EAAE,CAAC;QACxE,kCAA6B,GAAa;YACxC,UAAU;YACV,QAAQ;YACR,kBAAkB;YAClB,kBAAkB;SACnB,CAAC;QACF,wBAAmB,GAAG,EAAE,CAAC;QACzB,0BAAqB,GAAG,EAAE,CAAC;QAC3B,oBAAe,GAAG,IAAI,CAAC;QACvB,+BAA0B,GAAG,CAAC,CAAC;QAC/B,0BAAqB,GAAQ,EAAE,CAAC;QAChC,iBAAY,GAAQ,EAAE,CAAC;QACvB,eAAU,GAAQ,EAAE,CAAC;QACrB,eAAU,GAAQ,EAAE,CAAC;QASrB,gBAAW,GAAQ,EAAE,CAAC;QAMtB,eAAU,GAAG,EAAE,CAAC;QAChB,gBAAW,GAAG,KAAK,CAAC;QACpB,kBAAa,GAAG,EAAE,CAAC;QAEnB,mBAAc,GAAG,KAAK,CAAC;QACvB,cAAS,GAAG,KAAK,CAAC;QAClB,uBAAkB,GAAiB,iDAAY,CAAC,KAAK,CAAC;QACtD,kBAAa,GAAG,KAAK,CAAC;QACtB,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,oBAAe,GAAiB,iDAAY,CAAC,KAAK,CAAC;QACnD,sBAAiB,GAAG,EAAE,CAAC;QACvB,oBAAe,GAAG,KAAK,CAAC;QAIxB,wBAAmB,GAAQ,EAAE,CAAC;QAC9B,eAAU,GAAG,KAAK,CAAC;QACnB,YAAO,GAAG,IAAI,CAAC;QACf,iBAAY,GAAG,IAAI,CAAC;QACpB,eAAU,GAAG,IAAI,CAAC;QAClB,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,KAAK,CAAC;QACrB,sBAAiB,GAAG,KAAK,CAAC;QAYxB,IAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,0BAA0B,EAAE,CAAC;QACzE,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC,gBAAgB,CAAC;QAC1D,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC,IAAI,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACtC,IAAG,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;YAC1B,IAAG,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,iBAAiB,EAAE;gBAC5C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;aAC7B;SACF;QAED,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,8BAA8B,EAAE,aAAG;YAC1F,IAAI,GAAG,CAAC,MAAM,KAAK,aAAa,IAAI,GAAG,CAAC,gBAAgB,KAAK,CAAC,EAAE;gBAC9D,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAI,CAAC,eAAe,CAAC,CAAC;gBAC3C,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAI,CAAC,cAAc,CAAC,CAAC;gBAC1C,IAAI,CAAC,KAAI,CAAC,eAAe,IAAI,KAAI,CAAC,cAAc,EAAE;oBAChD,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;oBACnC,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC7B,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,KAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC;oBACpD,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,mBAAmB,CAAC;oBAC1C,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACnB,KAAI,CAAC,WAAW,EAAE,CAAC;iBACpB;qBAAK,IAAI,CAAC,KAAI,CAAC,eAAe,IAAI,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,iBAAiB,EAAE;oBAC5F,OAAO,CAAC,GAAG,CAAC,+EAA+E,CAAC,CAAC;oBAC7F,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;oBACtB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,gBAAgB,EAAE,KAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE,KAAI,CAAC,IAAI,EAAC,CAAC,CAAC;oBACnF,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACtC;qBAAM,IAAI,CAAC,KAAI,CAAC,eAAe,EAAE;oBAChC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;oBACrC,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;iBACvB;qBAAM;oBACL,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBACpB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,gBAAgB,EAAE,KAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE,KAAI,CAAC,IAAI,EAAC,CAAC,CAAC;oBACnF,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACtC;aACF;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,iBAAiB,EAAE,aAAG;YAC3E,IAAI,GAAG,CAAC,MAAM,KAAK,oBAAoB,IAAI,GAAG,CAAC,SAAS,KAAK,oBAAoB,EAAE;gBACjF,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;aACnC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,6BAA6B,EAAE,aAAG;YACpF,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;YAC5D,IAAI,GAAG,CAAC,MAAM,KAAK,aAAa,EAAE;gBAChC,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAC7B,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;gBAC5B,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;gBACtC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,aAAa,EAAE,qBAAqB,CAAC,CAAC;aACxD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAQ,GAAR;QAAA,iBA6FC;QA3FC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC;QACzD,IAAI,YAAY,CAAC,OAAO,CAAC,qBAAqB,CAAC,KAAK,KAAK,EAAE;YACzD,IAAI,CAAC,yBAAyB,GAAG,GAAG,CAAC;SACtC;aAAM;YACL,IAAI,CAAC,yBAAyB,GAAG,GAAG,CAAC;SACtC;QACD,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACnD,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YAC3B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,uBAAuB,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC;YAC9D,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC;YAC1D,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,uBAAuB,CAAC,CAAC;YACjE,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACzC,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;YAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YACd,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,iBAAiB,EAAC;gBAC5C,IAAI,CAAC,aAAa,GAAG;oBACnB,MAAM,EAAE,cAAc;oBACtB,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa;oBACtC,MAAM,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,MAAM;oBAC9C,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS;oBACnC,aAAa,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,SAAS;iBACzD,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,aAAa,GAAG;oBACnB,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa;oBACtC,MAAM,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,MAAM;oBAC9C,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS;oBACnC,aAAa,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,SAAS;iBACzD,CAAC;aACH;YACD,IAAI,CAAC,aAAa,GAAG;gBACnB,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa;gBACtC,MAAM,EAAE,gBAAgB;gBACxB,gBAAgB,EAAE,gCAAgC;gBAClD,gBAAgB,EAAE,mBAAmB;aACtC,CAAC;SACH;QAED,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,6BAA6B,CAAC;QACpE,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACrD,MAAM;QACN,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,aAAa,CAAC,0BAA0B,EAAE,CAAC,IAAI,CAAC;QACjF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACvC,IAAI,IAAI,CAAC,oBAAoB,KAAK,SAAS,EAAE;YAC3C,IAAI,IAAI,CAAC,oBAAoB,CAAC,cAAc,KAAK,IAAI,EAAE;gBACrD,IAAI,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;oBAC5D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC;oBACtD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;oBACpD,qDAAqD;oBACrD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC;iBAC3D;aACF;YACD,IAAI,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,KAAK,IAAI,EAAE;gBACvD,IAAI,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE;oBAE3D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;oBACnD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC;oBACvD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC;iBACjE;aACF;YACD,IAAI,IAAI,CAAC,oBAAoB,CAAC,YAAY,KAAK,IAAI,EAAE;gBACnD,IAAI,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;oBAC5D,mDAAmD;oBAEnD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC;oBACrD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;oBACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC;iBACzD;aACF;YACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC;YACtE,IAAI,CAAC,+DAAiB,CAAC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,EAAE;gBAClE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,EAAE,4BAA4B,CAAC,CAAC;gBACtF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC;gBACnE,IAAI,IAAI,CAAC,gBAAgB,KAAK,GAAG,EAAE;oBACjC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;iBAClC;gBACD,UAAU,CAAC;oBACT,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAC3B,CAAC,EAAC,EAAE,CAAC,CAAC;aACP;YACD,IAAI,IAAI,CAAC,eAAe,IAAI,+DAAiB,CAAC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,EAAC;gBACxF,IAAI,CAAC,SAAS,GAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;gBACvB,UAAU,CAAC;oBACX,KAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,CAAC,EAAC,EAAE,CAAC,CAAC;aACP;SACF;IACH,CAAC;IAED,mDAAe,GAAf;QAAA,iBAOC;QANC,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACrD,IAAI,CAAC,yBAAyB,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACrE,IAAM,IAAI,GAAG,CAAC,gMAAgM,EAAE,8JAA8J,EAAE,8GAA8G,EAAE,wQAAwQ,EAAE,kHAAkH,EAAC,qQAAqQ,CAAC,CAAC;QACpmC,UAAU,CAAC;YACf,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACD,CAAC;IAED,+CAAW,GAAX;QACE,IAAG,CAAC,+DAAiB,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAC;YAC/C,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;SACvC;QACD,IAAG,CAAC,+DAAiB,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAC;YAC7C,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;SACrC;QACD,IAAG,CAAC,+DAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,EAAC;YAC1C,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;SAClC;IACT,CAAC;IAGD,gDAAY,GAAZ,UAAa,IAAS;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,4CAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,6CAAS,GAAT;QACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,iDAAa,GAAb;QACE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC7B,CAAC;IAED,yDAAqB,GAArB;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,sDAAkB,GAAlB;QAAA,iBAkEC;QAjEC,IAAI,IAAI,CAAC,yBAAyB,IAAI,SAAS,EAAE;YAC/C,IAAI,CAAC,yBAAyB,GAAG,4BAA4B,CAAC;YAC9D,OAAO;SACR;aAAM,IAAI,IAAI,CAAC,gBAAgB,IAAI,SAAS,EAAE;YAC7C,IAAI,CAAC,yBAAyB,GAAG,4BAA4B,CAAC;YAC9D,OAAO;SACR;aAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB,IAAI,EAAE,IAAI,IAAI,CAAC,kBAAkB,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,EAAE,IAAI,IAAI,CAAC,cAAc,IAAI,SAAS,CAAC,EAAE;YACrJ,IAAI,CAAC,yBAAyB,GAAG,oCAAoC,CAAC;YACtE,OAAO;SACR;aAAM;YACL,IAAI,CAAC,yBAAyB,GAAG,EAAE,CAAC;SACrC;QACD,qmBAAqmB;QACrmB,IAAI,aAAkB,CAAC;QACvB,IAAI,aAAkB,CAAC;QACvB,IAAI,IAAI,CAAC,gBAAgB,KAAK,GAAG,EAAE;YACjC,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC;YACxC,aAAa,GAAG,EAAE,CAAC;SACpB;aAAM,IAAI,IAAI,CAAC,gBAAgB,IAAI,GAAG,EAAE;YACvC,aAAa,GAAG,EAAE,CAAC;YACnB,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC;SACrC;QACD,IAAM,iBAAiB,GAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAC9E,IAAM,IAAI,GAAG;YACX,eAAe,EAAE,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC;YAClD,aAAa;YACb,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM;YACzB,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;YAC3B,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU;YACpC,iBAAiB;YACjB,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;YAChC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC9B,eAAe,EAAE,IAAI,CAAC,yBAAyB,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ;YACvE,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;YAC1C,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;YACtC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;YAC3C,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;SACxC,CAAC;QACF,IAAI,CAAC,iBAAiB,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC;QAClD,IAAI,CAAC,iBAAiB,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC;QAClD,IAAI,aAAa,IAAI,EAAE,EAAE;YACvB,IAAI,CAAC,WAAW,CAAC,kCAAkC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,kBAAQ;gBAC1E,IAAI,QAAQ,CAAC,MAAM,IAAI,IAAI,EAAE;oBAC3B,KAAI,CAAC,mBAAmB,GAAG,aAAa,CAAC;oBACzC,KAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;oBACjC,KAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;oBACzD,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;oBAC9D,KAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC;oBAC/C,KAAI,CAAC,qBAAqB,GAAG,WAAW,CAAC,kBAAkB,CAAC,CAAC;oBAC7D,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;iBACvB;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,kCAAkC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,QAAa;gBAChF,IAAI,QAAQ,CAAC,MAAM,KAAK,IAAI,EAAE;oBAC5B,KAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;oBACjC,KAAI,CAAC,eAAe,GAAG,aAAa,CAAC;oBACrC,KAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;oBAC5D,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;oBAC9D,KAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC;oBAC/C,KAAI,CAAC,qBAAqB,GAAG,WAAW,CAAC,iBAAiB,CAAC,CAAC;oBAC5D,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,8CAAU,GAAV,UAAW,WAAoB;QAA/B,iBA6KC;QA5KC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,iBAAiB,CAAC;QACvE,IAAM,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC;QACxD,IAAM,GAAG,GAAQ,EAAE,CAAC;QAEpB,IAAM,KAAK,GAAG,EAAE,CAAC;QACjB,KAAK,IAAM,GAAG,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC;SACxC;QACD,IAAM,SAAS,GAAG,EAAE,CAAC;QACrB,KAAK,IAAM,GAAG,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC5C,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,CAAC;SACjD;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,KAAK,IAAM,CAAC,IAAI,KAAK,EAAE;YACrB,GAAG,CAAC,IAAI,CAAC;gBACP,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;gBACf,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;aACxB,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzD,UAAU,CAAC,cAAM,YAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,EAA1C,CAA0C,CAAC,CAAC;QAC7D,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAM,OAAO,GAAQ;YACnB,KAAK,EAAE;gBACL,IAAI,EAAE,YAAY;gBAClB,MAAM,EAAE,GAAG;aACZ;YACD,KAAK,EAAE,IAAI;YACX,MAAM,EAAE;gBACN,MAAM,EAAE,UAAU;gBAClB,KAAK,EAAE,MAAM;gBACb,aAAa,EAAE,KAAK;gBACpB,CAAC,EAAE,GAAG;gBACN,CAAC,EAAE,EAAE;gBACL,QAAQ,EAAE,IAAI;gBACd,WAAW,EAAE,CAAC;gBACd,eAAe,EAAE,0DAAyB,CAAC,MAAM,CAAC,eAAe,IAAI,SAAS;aAC/E;YACD,SAAS,EAAE;gBACT,YAAY,EAAE;oBACZ,KAAK,EAAE;wBACL,IAAI,EAAE,IAAI;qBACX;iBACF;aACF;YACD,KAAK,EAAE;gBACL,UAAU,EAAE,KAAK;gBACjB,KAAK,EAAE;oBACL,IAAI,EAAE,SAAS;iBAChB;gBACD,KAAK,EAAE;oBACL,UAAU,EAAE,gBAAgB;iBAC7B;aACF;YACD,KAAK,EAAE;gBACL,KAAK,EAAE;oBACL,IAAI,EAAE,IAAI,CAAC,KAAK;iBACjB;gBACD,MAAM,EAAE;oBACN,MAAM,EAAE,UAAU;iBACnB;gBACD,KAAK,EAAE;oBACL,UAAU,EAAE,gBAAgB;iBAC7B;aACF;YACD,WAAW,EAAE;gBAEX,IAAI,EAAE;oBACJ,WAAW,EAAE,GAAG;iBACjB;gBACD,MAAM,EAAE;oBACN,SAAS,EAAE,OAAO;iBACnB;aACF;YACD,OAAO,EAAE;gBACP,OAAO,EAAE,KAAK;aACf;YACD,MAAM,EAAE,CAAC;oBACP,IAAI,EAAE,IAAI,CAAC,KAAK;oBAChB,cAAc,EAAE,KAAK;oBACrB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,OAAO;oBACd,QAAQ,EAAE,GAAG;oBACb,KAAK,EAAE,CAAC;4BACN,SAAS,EAAE,SAAS;4BACpB,KAAK,EAAE,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC;yBAC/C,EAAE;4BACD,SAAS,EAAE,WAAW;4BACtB,KAAK,EAAE,OAAO;4BACd,KAAK,EAAE,SAAS,CAAC,MAAM;yBACxB,CAAC;iBACH,CAAC;SACH,CAAC;QACF,IAAM,QAAQ,GAAQ;YACpB,KAAK,EAAE;gBACL,IAAI,EAAE,YAAY;gBAClB,MAAM,EAAE,GAAG;aACZ;YACD,KAAK,EAAE,IAAI;YACX,MAAM,EAAE;gBACN,MAAM,EAAE,UAAU;gBAClB,KAAK,EAAE,MAAM;gBACb,aAAa,EAAE,KAAK;gBACpB,CAAC,EAAE,GAAG;gBACN,CAAC,EAAE,EAAE;gBACL,QAAQ,EAAE,IAAI;gBACd,WAAW,EAAE,CAAC;gBACd,eAAe,EAAE,0DAAyB,CAAC,MAAM,CAAC,eAAe,IAAI,SAAS;aAC/E;YACD,SAAS,EAAE;gBACT,YAAY,EAAE;oBACZ,KAAK,EAAE;wBACL,IAAI,EAAE,IAAI;qBACX;iBACF;aACF;YACD,KAAK,EAAE;gBACL,UAAU,EAAE,KAAK;gBACjB,KAAK,EAAE;oBACL,IAAI,EAAE,SAAS;iBAChB;gBACD,KAAK,EAAE;oBACL,UAAU,EAAE,gBAAgB;iBAC7B;aACF;YACD,KAAK,EAAE;gBACL,KAAK,EAAE;oBACL,IAAI,EAAE,IAAI,CAAC,KAAK;iBACjB;gBACD,MAAM,EAAE;oBACN,MAAM,EAAE,UAAU;iBACnB;gBACD,KAAK,EAAE;oBACL,UAAU,EAAE,gBAAgB;iBAC7B;aACF;YACD,WAAW,EAAE;gBAEX,IAAI,EAAE;oBACJ,WAAW,EAAE,GAAG;iBACjB;gBACD,MAAM,EAAE;oBACN,SAAS,EAAE,OAAO;iBACnB;aACF;YACD,OAAO,EAAE;gBACP,OAAO,EAAE,KAAK;aACf;YACD,MAAM,EAAE,CAAC;oBACP,IAAI,EAAE,IAAI,CAAC,KAAK;oBAChB,cAAc,EAAE,KAAK;oBACrB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,OAAO;oBACd,QAAQ,EAAE,GAAG;oBACb,KAAK,EAAE,CAAC;4BACN,SAAS,EAAE,SAAS;4BACpB,KAAK,EAAE,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC;yBACnD,EAAE;4BACD,SAAS,EAAE,WAAW;4BACtB,KAAK,EAAE,OAAO;4BACd,KAAK,EAAE,SAAS,CAAC,MAAM;yBACxB,CAAC;iBACH,CAAC;SACH,CAAC;QACF,IAAI,IAAI,CAAC,gBAAgB,KAAK,GAAG,EAAE;YACjC,iDAAgB,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;SAC1C;aAAM,IAAI,IAAI,CAAC,gBAAgB,KAAK,GAAG,EAAE;YACxC,iDAAgB,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;SAC3C;IACH,CAAC;IAED,uDAAmB,GAAnB;QACE,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;IACpC,CAAC;IAED,gEAA4B,GAA5B,UAA6B,IAAU;QACrC,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACpC,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,SAAS,CAAC,CAAC;QAE9D,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,KAAK,EAAE,EAAE;YACzC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,OAAO;SACR;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,UAAC,CAAM,EAAE,CAAM;YACxC,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC;YACvC,QAAQ,IAAI,CAAC,MAAM,EAAE;gBACnB,KAAK,OAAO;oBACV,OAAO,kBAAkB,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBACrD,KAAK,kBAAkB;oBACrB,OAAO,kBAAkB,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;gBACvD;oBACE,OAAO,CAAC,CAAC;aACZ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,6DAAyB,GAAzB,UAA0B,IAAU;QAClC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7B,IAAI,IAAI,CAAE;QACV,IAAI,CAAC,IAAI,CAAC,YAAY,EAAC;YACrB,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACnC;aAAM;YACL,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;SAC/C;QACD,IAAI,CAAC,oBAAoB,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAGrD,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,KAAK,EAAE,EAAE;YACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,OAAO;SACR;QACD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC;QACxC,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,UAAC,CAAM,EAAE,CAAM;YACxC,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC;YACvC,QAAQ,IAAI,CAAC,MAAM,EAAE;gBACnB,KAAK,UAAU;oBACb,OAAO,oBAAoB,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;gBAC7D,KAAK,QAAQ;oBACX,OAAO,oBAAoB,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;gBACzD,KAAK,WAAW;oBACd,OAAO,oBAAoB,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;gBAC/D,KAAK,SAAS;oBACZ,OAAO,oBAAoB,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;gBAC3D,KAAK,eAAe;oBAClB,OAAO,oBAAoB,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;gBACvE,KAAK,QAAQ;oBACX,OAAO,oBAAoB,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;gBACzD;oBACE,OAAO,CAAC,CAAC;aACZ;QACH,CAAC,CAAC,CAAC;QACH,IAAI,UAAU,CAAC;QACf,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,UAAU,GAAG,QAAQ,CAAC;SACvB;aAAM;YACL,UAAU,GAAG,QAAQ,CAAC;YACtB,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;SAC/B;QACD,IAAI,CAAC,oBAAoB,GAAG,IAAI,0EAAkB,CAAM,UAAU,CAAC,CAAC;QACpE,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IACvD,CAAC;IAED,0DAAsB,GAAtB;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC;QACxD,IAAM,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC;QACtD,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,0DAAsB,GAAtB,UAAuB,GAAe;QACpC,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,CAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,UAAM,CAAC;SACvE;QACD,OAAO,CAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,eAAQ,GAAG,CAAC,UAAU,GAAG,CAAC,CAAE,CAAC;IACpG,CAAC;IAED,qDAAiB,GAAjB;QAAA,iBAkCC;QAjCC,IAAI,iBAAwB,CAAC;QAC7B,iBAAiB,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxD,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;QAC5B,IAAM,OAAO,GAAG;YACd,IAAI,EAAE;gBACJ,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;gBAC9B,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;gBAC1B,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;gBACjC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM;gBACzB,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU;gBAC9B,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;gBACjC,iBAAiB;gBACjB,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;gBAChC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;gBAC9B,gBAAgB,EAAE,IAAI,CAAC,aAAa;gBACpC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;gBAC1C,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;gBAC1C,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;gBACtC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;gBAC3C,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;aACxC;SACF,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,YAAiB;YACjE,IAAI,YAAY,CAAC,MAAM,KAAK,IAAI,EAAE;gBAChC,IAAG,YAAY,CAAC,IAAI,KAAK,EAAE,EAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iEAAiE,CAAC,CAAC;iBACtF;qBAAK;oBACJ,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;iBACxC;aACF;iBAAM;gBACL,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;aACnE;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oDAAgB,GAAhB,UAAiB,KAAU;QACzB,OAAO,KAAK,CAAC;IACf,CAAC;IAED,sDAAkB,GAAlB;QACE,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,6BAA6B,GAAG,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QAC1E,IAAI,CAAC,IAAI,GAAG,gDAAgD,GAAG,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QACzF,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,mDAAe,GAAf,UAAgB,KAAe;QAA/B,iBAuCC;QAtCC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,WAAC,IAAI,eAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,EAA1B,CAA0B,CAAC,CAAC;QAC3D,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QACnC,IAAM,IAAI,GAAG;YACX,KAAK,EAAE,QAAQ;YACf,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC;QACF,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACvC,QAAQ,CAAC,MAAM,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1C,QAAQ,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/C,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7C,QAAQ,CAAC,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QACxD,QAAQ,CAAC,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC9D,QAAQ,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC1D,QAAQ,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC/D,QAAQ,CAAC,MAAM,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC3D,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,QAAa;YACjE,IAAI,QAAQ,CAAC,MAAM,KAAK,IAAI,EAAE;gBAC5B,KAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;gBAC5C,KAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC;gBACtD,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC;gBAC/C,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC;gBAC9C,KAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC;gBACnD,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;gBAC3C,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aACzB;iBAAM;gBACL,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,KAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,IAAI,CAAC;gBACzC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,sCAAsC;aACvC;QACH,CAAC,EAAE,UAAC,KAAU;YACZ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,0DAA0D,CAAC,CAAC;QAChF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gDAAY,GAAZ,UAAa,GAAQ;QACnB,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;IAClE,CAAC;IAED,oDAAgB,GAAhB,UAAiB,GAAQ;QACvB,OAAO,GAAG,CAAC,QAAQ,CAAC;IACtB,CAAC;IAGD,kDAAc,GAAd,UAAe,WAAgB;QAC7B,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAChB,IAAI,QAAQ,GAAQ,EAAE,CAAC;QACvB,QAAQ,GAAG,EAAE,CAAC;QACd,IAAM,GAAG,GAAQ,EAAE,CAAC;QAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,WAAW,GAAG,CAAC,CAAC;YACpB,IAAI,gBAAgB,GAAG,CAAC,CAAC;YACzB,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE;gBACvC,WAAW,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;aACpC;YACD,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,oBAAoB,CAAC,EAAE;gBAC9C,gBAAgB,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC;aAChD;YACD,GAAG,CAAC,IAAI,CAAC;gBACP,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC;gBAClC,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC;gBAC/B,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;gBACnB,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC;gBAC/B,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;gBACpC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;gBAC7B,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC;gBACxC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBACrB,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;gBACnC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gBAC1B,gBAAgB,EAAE,WAAW;gBAC7B,gBAAgB;gBAChB,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gBAC3B,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;gBAC7B,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;gBACrC,eAAe,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC;gBACzC,kBAAkB,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC;gBAC/C,IAAI,EAAE,4BAA4B;gBAClC,aAAa,EAAE,8BAA8B;gBAC7C,WAAW,EAAE,4BAA4B;gBACzC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gBAC3B,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACvB,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gBAC3B,kBAAkB,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC;gBACjD,wBAAwB,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,0BAA0B,CAAC;gBAC3D,gBAAgB,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC;gBAC3C,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC;aACvC,CAAC,CAAC;SACJ;QAEH,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,yBAAyB,GAAG,GAAG,CAAC;YACrC,IAAI,IAAI,GAAQ,EAAE,CAAC;YACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9D,IAAI,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,EAAE;oBACvD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC9C;aACF;YACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;YAC5C,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,MAAM,CAAC;YAC9C,IAAI,CAAC,0BAA0B,GAAG,GAAG,CAAC,MAAM,CAAC;YAC7C,IAAI,CAAC,yBAAyB,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;YACxF,IAAI,CAAC,yBAAyB,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC;YACrE,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;YACxC,IAAI,CAAC,YAAY,GAAG,IAAI,uEAAc,CAAY,IAAI,EAAE,IAAI,CAAC,CAAC;YAC9D,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACpB;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,IAAI,IAAI,GAAQ,EAAE,CAAC;YACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAClD,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,EAAE;oBAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;iBAClC;aACF;YACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAChC,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,MAAM,CAAC;YAC9C,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC;YAClC,IAAI,CAAC,oBAAoB,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACvE,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACrD,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;YACxC,IAAI,CAAC,YAAY,GAAG,IAAI,uEAAc,CAAY,IAAI,EAAE,IAAI,CAAC,CAAC;YAC9D,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACpB;QAED,IAAI,IAAI,CAAC,gBAAgB,KAAK,GAAG,EAAE;YACjC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;SAChD;IACH,CAAC;IAED,gDAAY,GAAZ,UAAa,KAAc;QACzB,IAAI,KAAK,EAAE;YACT,IAAI,IAAI,CAAC,gBAAgB,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;gBAC7K,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;gBACxD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,OAAO;aACR;SACF;QAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,0BAA0B,GAAG,CAAC,CAAC;QACpC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,oBAAoB,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACvE,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACrD,IAAI,IAAI,CAAC,gBAAgB,KAAK,GAAG,IAAI,CAAC,+DAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;YAC9E,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;aAAM,IAAI,IAAI,CAAC,gBAAgB,KAAK,GAAG,IAAI,CAAC,+DAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;YACrF,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;aAAM,IAAI,IAAI,CAAC,gBAAgB,KAAK,GAAG,IAAI,CAAC,+DAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;YACrF,IAAI,OAAO,UAAC;YACZ,IAAM,KAAK,GAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,UAAC,CAAM,IAAI,QAAC,CAAC,UAAU,KAAK,CAAC,EAAlB,CAAkB,CAAC,CAAC;YAC1E,IAAG,KAAK,KAAK,CAAC,CAAC,EAAC;gBACd,IAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,UAAU,KAAK,CAAC,EAAC;oBAC3E,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC;oBAC5D,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;oBACrC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;iBAChE;aACF;SACF;IAEH,CAAC;IAGD,6CAAS,GAAT,UAAU,KAAU;QAClB,IAAM,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC;QAC1B,IAAI,cAAuB,CAAC;QAC5B,IAAI,OAAO,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,cAAc,KAAK,CAAC,EAAE;YACxD,cAAc,GAAG,KAAK,CAAC;SACxB;aAAM,IACL,OAAO,KAAK,KAAK;YACjB,OAAO,KAAK,GAAG;YACf,OAAO,KAAK,OAAO;YACnB,OAAO,KAAK,WAAW;YACvB,OAAO,KAAK,WAAW;YACvB,OAAO,KAAK,YAAY;YACxB,OAAO,KAAK,QAAQ,EACpB;YACA,cAAc,GAAG,IAAI,CAAC;SACvB;aAAM;YACL,cAAc,GAAG,CAAC,OAAO,IAAI,GAAG,IAAI,OAAO,IAAI,GAAG,CAAC,IAAI,OAAO,KAAK,GAAG,CAAC;SACxE;QACD,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC,MAAM,IAAI,EAAE,EAAE;YACvG,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;QACD,IAAI,CAAC,cAAc,EAAE;YACnB,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;IACH,CAAC;IAED,8CAAU,GAAV;QACE,IAAI,CAAC,2BAA2B,GAAG,MAAM,CAAC;IAC5C,CAAC;IAED,8CAAU,GAAV,UAAW,MAAW;QACpB,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAC;IAC7C,CAAC;IAED,iDAAa,GAAb;QACE,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC;QAChC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,IAAI,CAAC,WAAW,KAAK,GAAG,EAAE;YAC5B,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;SACnC;aAAM,IAAI,IAAI,CAAC,WAAW,KAAK,GAAG,EAAE;YACnC,KAAK,GAAG,EAAE,CAAC;SACZ;aAAM,IAAI,IAAI,CAAC,WAAW,KAAK,GAAG,EAAE;YACnC,KAAK,GAAG,EAAE,CAAC;SACZ;QACD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAM,IAAI,GAAG,EAAE,CAAC;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC9B,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;gBACjC,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;gBAClD,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;aAC7B;iBAAM;gBACL,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;gBACzC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;aAC7B;YACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACpB;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,kDAAc,GAAd,UAAe,WAAgB,EAAE,YAAiB;QAChD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;QACzC,IAAI,YAAY,KAAK,CAAC,EAAE;YACtB,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,UAAC,CAAM,IAAK,QAAC,CAAC,QAAQ,KAAK,WAAW,EAA1B,CAA0B,CAAC,CAAC;YAC7E,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;gBAChB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,CAAC;gBAC1E,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;aACzC;SACF;aAAM,IAAI,YAAY,KAAK,CAAC,EAAE;YAC7B,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,UAAC,CAAM,IAAK,QAAC,CAAC,QAAQ,KAAK,WAAW,EAA1B,CAA0B,CAAC,CAAC;YAC7E,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;gBAChB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC;gBACjE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;aACzC;SACF;QACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC;QACjC,IAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAC,CAAM,IAAK,QAAC,CAAC,YAAY,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;QACjF,IAAI,CAAC,0BAA0B,GAAG,aAAa,CAAC,MAAM,CAAC;IACzD,CAAC;IAED,oDAAgB,GAAhB,UAAiB,QAAa;QAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;QACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClD,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,QAAQ,EAAE;gBAClD,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;oBAC/C,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;iBAC3C;qBAAM;oBACL,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;iBAC3C;aACF;SACF;QAED,IAAI,IAAI,CAAC,eAAe,IAAI,SAAS,EAAE;YACrC,IAAM,KAAG,GAAG,IAAI,CAAC,eAAe,CAAC;YAEjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC;YAErC,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAS,CAAM;gBACjD,OAAO,CACL,CAAC,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,KAAG,CAAC,KAAK,CAAC,CAAC;oBAC5C,CAAC,CAAC,QAAQ,CAAC;yBACR,QAAQ,EAAE;yBACV,WAAW,EAAE;yBACb,OAAO,CAAC,KAAG,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC,CAAC,SAAS,CAAC;yBACT,QAAQ,EAAE;yBACV,WAAW,EAAE;yBACb,OAAO,CAAC,KAAG,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC,CAAC,eAAe,CAAC;yBACf,QAAQ,EAAE;yBACV,WAAW,EAAE;yBACb,OAAO,CAAC,KAAG,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC,CAAC,WAAW,CAAC;yBACX,QAAQ,EAAE;yBACV,WAAW,EAAE;yBACb,OAAO,CAAC,KAAG,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC,CAAC,SAAS,CAAC;yBACT,QAAQ,EAAE;yBACV,WAAW,EAAE;yBACb,OAAO,CAAC,KAAG,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC,CAAC,eAAe,CAAC;yBACf,QAAQ,EAAE;yBACV,WAAW,EAAE;yBACb,OAAO,CAAC,KAAG,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC,KAAG,CACL,CAAC;YACJ,CAAC,CAAC,CAAC;YACH,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;gBAC7C,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC9C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC;gBACnC,IAAI,CAAC,oBAAoB,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,CAAC;gBAC9D,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;aACtD;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC;gBAC/C,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;gBAC5D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;gBACxC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC;gBACnC,IAAI,CAAC,oBAAoB,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,aAAa,CAAC,CAAC;gBAC5E,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;aACtD;SACF;aAAM,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YAC9B,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAC,CAAM,IAAK,QAAC,CAAC,YAAY,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;YACzE,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnB,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC9C,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;iBACvB;qBAAM;oBACL,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;iBAC5B;aACF;iBAAM;gBACL,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,MAAM,CAAC;aAC/C;YACD,IAAI,CAAC,oBAAoB,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACvE,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SACtD;aAAM,IAAI,IAAI,CAAC,aAAa,EAAE;YAC7B,IAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAC,CAAM,IAAK,QAAC,CAAC,YAAY,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;YAC5E,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnB,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC9C,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;iBACvB;qBAAM;oBACL,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;iBAC5B;aACF;iBAAM;gBACL,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,MAAM,CAAC;aAC/C;YACD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;YACpD,IAAI,CAAC,oBAAoB,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAC/E,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SACtD;IACH,CAAC;IAED,gDAAY,GAAZ,UAAa,gBAAqB;QAAlC,iBAwGC;QAvGC,sBAAsB;QACtB,IAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QAChD,IAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5C,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QAC7C,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;QACzC,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;QAC3C,IAAM,SAAS,GAAG,EAAE,CAAC;QACrB,IAAI,IAAI,CAAC,gBAAgB,KAAK,GAAG,IAAG,IAAI,CAAC,0BAA0B,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;YAChG,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,uCAAuC,CAAC,CAAC;YAC7D,OAAO;SACR;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,SAAS,CAAC,IAAI,CAAC;gBACb,eAAe,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gBACvC,cAAc,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACpC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;gBACxB,aAAa,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;gBAC1C,cAAc,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACpC,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;gBACzC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;gBAClC,eAAe,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC;gBAC9C,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gBAChC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;gBAClC,gBAAgB,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;gBAC7C,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC/B,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gBAChC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBAC5B,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gBAChC,oBAAoB,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC;gBACtD,gBAAgB,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC;gBAChD,wBAAwB,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,0BAA0B,CAAC;gBAChE,cAAc,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;gBAC3C,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBAC1B,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;gBACxC,kBAAkB,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC;aACrD,CAAC,CAAC;SACJ;QACD,IAAI,IAAS,CAAC;QACd,IAAI,MAAW,CAAC;QAChB,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;QACxC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClD,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEvD,IAAM,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEnD,MAAM,GAAG;YACP,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW;YAClC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW;YAClC,iBAAiB,EAAE,IAAI,CAAC,IAAI,CAAC,iBAAiB;YAC9C,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;YAC9B,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;YAC9B,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;YAC1C,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI;YACpB,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,cAAc;YACxC,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,OAAO,EAAE,IAAI,CAAC,SAAS;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,UAAU,EAAE,IAAI,CAAC,OAAO;YACxB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;YAC1C,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;YACtC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;YAC1C,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;YACtC,cAAc,EAAE,IAAI,CAAC,SAAS;YAC9B,YAAY,EAAE,IAAI,CAAC,SAAS;YAC5B,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;YAC1C,gBAAgB,EAAE,IAAI,CAAC,aAAa;YACpC,OAAO,EAAE,gBAAgB;YACzB,SAAS,EAAE,CAAC;YACZ,QAAQ,EAAE,CAAC;YACX,YAAY,EAAE,IAAI,CAAC,OAAO;YAC1B,YAAY,EAAE,IAAI,CAAC,MAAM;YACzB,WAAW,EAAE,IAAI,CAAC,SAAS;YAC3B,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB;SAChD,CAAC;QACF,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvD,IAAM,QAAQ,GAAQ,EAAE,CAAC;QACzB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjC,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC/D,YAAY,CAAC,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;QAChD,8BAA8B;QAC9B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;YAC7D,IAAI,WAAW,CAAC,MAAM,IAAI,IAAI,EAAE;gBAC9B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,yCAAyC,CAAC,CAAC;gBACnE,IAAI,CAAC,KAAI,CAAC,WAAW,EAAE;oBACrB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,kBAAkB,CAAC,CAAC;oBACrE,IAAG,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,iBAAiB,EAAC;wBAC3D,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;wBACnC,IAAM,IAAI,GAAG,CAAC,4JAA4J,EAAE,oJAAoJ,CAAC,CAAC;wBAClU,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;wBACxB,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;wBAC5B,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACpC,KAAI,CAAC,mBAAmB,EAAE,CAAC;qBAC5B;iBACF;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8CAAU,GAAV,UAAW,KAAU;QACnB,IAAI,KAAK,IAAI,GAAG,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,EAAE;gBAC5F,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;YACD,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,EAAE;gBAClG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aACzB;YAED,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,EAAE;gBAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACrB;SACF;aAAM,IAAI,KAAK,IAAI,GAAG,EAAE;YACvB,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,EAAE;gBACjG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;YACD,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,EAAE;gBACvG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;YACD,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,EAAE;gBAC7C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;aACrB;SACF;IACH,CAAC;IAED,+CAAW,GAAX,UAAY,KAAU;QACpB,IAAI,KAAK,IAAI,GAAG,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,EAAE;gBAC5F,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;YACD,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,EAAE;gBAChG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACvB;YACD,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB;SACF;aAAM,IAAI,KAAK,IAAI,GAAG,EAAE;YACvB,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,EAAE;gBACjG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;YACD,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,EAAE;gBACrG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB;YACD,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC5C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;aACrB;SACF;IACH,CAAC;IAED,8CAAU,GAAV,UAAW,KAAU;QACnB,IAAI,KAAK,IAAI,GAAG,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,EAAE;gBAClG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aACzB;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,EAAE;gBAChG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACvB;YACD,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,EAAE;gBACjD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB;SACF;aAAM,IAAI,KAAK,IAAI,GAAG,EAAE;YACvB,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,KAAK,CAAC,EAAE;gBACvG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,KAAK,CAAC,EAAE;gBACrG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB;YACD,IAAI,IAAI,CAAC,SAAS,IAAI,KAAK,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,EAAE;gBAClD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;gBACxB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;aACjC;SACF;IACH,CAAC;IAED,qDAAiB,GAAjB;QACE,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,oBAAoB,GAAG,IAAI,0EAAkB,CAAC,EAAE,CAAC,CAAC;QACvD,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,0BAA0B,GAAG,CAAC,CAAC;QACpC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,IAAI,CAAC,gBAAgB,KAAK,GAAG,EAAE;YACjC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;SACjC;aAAM,IAAI,IAAI,CAAC,gBAAgB,KAAK,GAAG,EAAE;YACxC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;aAAM,IAAI,IAAI,CAAC,gBAAgB,KAAK,GAAG,EAAE;YACxC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;YAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;IACH,CAAC;IAED,qDAAiB,GAAjB,UAAkB,IAAS,EAAE,KAAU;QACrC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;QAC/C,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE;YAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;SAC7B;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;SAC5B;QACD,IAAI,IAAI,IAAI,QAAQ,EAAE;YACpB,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;SAClD;aAAM,IAAI,IAAI,IAAI,UAAU,EAAE;YAC7B,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;SACpD;aAAM,IAAI,IAAI,IAAI,QAAQ,EAAE;YAC3B,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;SAClD;aAAM,IAAI,IAAI,IAAI,WAAW,EAAE;YAC9B,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;SACtD;aAAM,IAAI,IAAI,IAAI,SAAS,EAAE;YAC5B,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;SAClD;aAAM,IAAI,IAAI,IAAI,eAAe,EAAE;YAClC,IAAI,CAAC,sBAAsB,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC;SAC5D;IACH,CAAC;IAED,8CAAU,GAAV,UAAW,IAAS;QAClB,IAAI,IAAI,IAAI,QAAQ,EAAE;YACpB,OAAO,cAAc,CAAC;SACvB;aAAM,IAAI,IAAI,IAAI,UAAU,EAAE;YAC7B,OAAO,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;SACrC;aAAM,IAAI,IAAI,IAAI,QAAQ,EAAE;YAC3B,OAAO,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;SAC/C;aAAM,IAAI,IAAI,IAAI,WAAW,EAAE;YAC9B,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;SACjC;aAAM,IAAI,IAAI,IAAI,SAAS,EAAE;YAC5B,OAAO,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;SAChD;aAAM,IAAI,IAAI,IAAI,eAAe,EAAE;YAClC,OAAO,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;SAClD;IACH,CAAC;IAED,qDAAiB,GAAjB;QAAA,iBAgCC;QA/BC,IAAM,iBAAiB,GAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAC9E,IAAM,OAAO,GAAG;YACd,IAAI,EAAE;gBACJ,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;gBAC9B,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;gBAC1B,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;gBACjC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM;gBACzB,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU;gBAC9B,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;gBACjC,iBAAiB;gBACjB,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;gBAChC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;gBAC9B,gBAAgB,EAAE,IAAI,CAAC,aAAa;gBACpC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;gBAC1C,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;gBAC1C,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;gBACtC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;gBAC3C,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;aACxC;SACF,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;YACxE,IAAI,WAAW,CAAC,MAAM,IAAI,IAAI,EAAE;gBAC9B,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,KAAI,CAAC,SAAS,GAAG,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC;gBAClD,KAAI,CAAC,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC;gBACjD,KAAI,CAAC,aAAa,GAAG,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC;gBACtD,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACjD,KAAI,CAAC,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC;gBAC9C,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,OAAO,CAAC;aAC/B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,2CAAO,GAAP,UAAQ,IAAS;QACf,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;YAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YACnC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YACnC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;YAChD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;SAChC;IACH,CAAC;IAED,iDAAiD;IAEjD,+CAAW,GAAX;QACE,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,EAAE;YACxD,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;IACH,CAAC;IAED,2CAAO,GAAP;QAAA,iBAuJC;QArJC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QAC7C,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;QAC1C,IAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QAC9C,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;QAC3C,IAAI,IAAS,CAAC;QACd,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE;YAClC,IAAI,GAAG;gBACL,IAAI,EAAE;oBACJ,gBAAgB,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG;oBAChD,eAAe,EAAE,IAAI,CAAC,aAAa;oBACnC,gBAAgB,EAAE,WAAW;oBAC7B,cAAc,EAAE,UAAU;oBAC1B,UAAU;oBACV,SAAS;oBACT,eAAe,EAAE,IAAI,CAAC,cAAc;oBACpC,OAAO,EAAE,IAAI,CAAC,MAAM;oBACpB,QAAQ,EAAE,IAAI,CAAC,SAAS;oBACxB,cAAc,EAAE,IAAI,CAAC,OAAO;oBAC5B,WAAW,EAAE,IAAI,CAAC,SAAS;oBAC3B,UAAU,EAAE,IAAI,CAAC,QAAQ;iBAC1B;aACF,CAAC;YACF,IAAI,CAAC,+DAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,EAAE;gBACjF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;gBAC/B,IAAI,CAAC,kBAAkB,GAAG,4GAA4G,CAAC;gBACvI,OAAO;aACR;iBAAM;gBACL,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;aACjC;SACF;aAAM,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,EAAE;YACtC,IAAI,GAAG;gBACL,IAAI,EAAE;oBACJ,gBAAgB,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG;oBAChD,eAAe,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;oBACtE,gBAAgB,EAAE,WAAW;oBAC7B,cAAc,EAAE,UAAU;oBAC1B,UAAU;oBACV,SAAS;oBACT,eAAe,EAAE,IAAI,CAAC,cAAc;oBACpC,OAAO,EAAE,IAAI,CAAC,MAAM;oBACpB,QAAQ,EAAE,IAAI,CAAC,SAAS;oBACxB,cAAc,EAAE,IAAI,CAAC,OAAO;oBAC5B,WAAW,EAAE,IAAI,CAAC,SAAS;oBAC3B,UAAU,EAAE,IAAI,CAAC,QAAQ;iBAC1B;aACF,CAAC;SACH;aAAM,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,EAAE;YACxC,IAAI,GAAG;gBACL,IAAI,EAAE;oBACJ,eAAe,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;oBACtE,eAAe,EAAE,IAAI,CAAC,aAAa;oBACnC,gBAAgB,EAAE,WAAW;oBAC7B,cAAc,EAAE,UAAU;oBAC1B,UAAU;oBACV,SAAS;oBACT,eAAe,EAAE,IAAI,CAAC,cAAc;oBACpC,OAAO,EAAE,IAAI,CAAC,MAAM;oBACpB,QAAQ,EAAE,IAAI,CAAC,SAAS;oBACxB,cAAc,EAAE,IAAI,CAAC,OAAO;oBAC5B,WAAW,EAAE,IAAI,CAAC,SAAS;oBAC3B,UAAU,EAAE,IAAI,CAAC,QAAQ;iBAE1B;aACF,CAAC;YACF,IAAI,CAAC,+DAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,EAAE;gBACjF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;gBAC/B,OAAO;aACR;iBAAM;gBACL,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;aACjC;SACF;QAED,IAAI,SAAc,CAAC;QAEnB,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,EAAE;YACrB,IAAI,IAAI,CAAC,SAAS,GAAG,EAAE,IAAI,IAAI,CAAC,SAAS,GAAG,EAAE,EAAE;gBAC9C,SAAS,GAAG,SAAS,CAAC;aACvB;iBAAM;gBACL,SAAS,GAAG,OAAO,CAAC;aACrB;SACF;QAED,IACE,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,aAAa,IAAI,SAAS,IAAI,OAAO,CAAC;YAC1G,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,aAAa,CAAC;YACjF,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,IAAI,SAAS,IAAI,OAAO,CAAC,EACnG;YACA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;gBAC1D,IAAI,WAAW,CAAC,MAAM,IAAI,IAAI,EAAE;oBAC9B,KAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;oBAChC,IAAI,KAAI,CAAC,OAAO,IAAI,KAAI,CAAC,SAAS,IAAI,IAAI,IAAI,OAAO,EAAE;wBACrD,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;wBACtF,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,0BAA0B,CAAC,CAAC;qBACrD;yBAAM,IAAI,KAAI,CAAC,OAAO,IAAI,KAAI,CAAC,MAAM,IAAI,IAAI,IAAI,OAAO,EAAE;wBACzD,KAAI,CAAC,aAAa,GAAG,WAAW,CAAC,IAAI,CAAC;wBACtC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,gCAAgC,CAAC,CAAC;qBAC3D;yBAAM,IAAI,KAAI,CAAC,SAAS,IAAI,KAAI,CAAC,MAAM,EAAE;wBACxC,IAAM,WAAW,GAAG,WAAW,CAAC,IAAI,GAAG,GAAG,CAAC;wBAC3C,IAAI,WAAW,GAAG,EAAE,IAAI,WAAW,GAAG,EAAE,EAAE;4BACxC,KAAI,CAAC,SAAS,GAAG,WAAW,CAAC,IAAI,GAAG,GAAG,CAAC;4BACxC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,+BAA+B,CAAC,CAAC;4BACvD,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;yBAC3B;6BAAM;4BACL,KAAI,CAAC,SAAS,GAAG,WAAW,CAAC,IAAI,GAAG,GAAG,CAAC;4BACxC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,2BAA2B,CAAC,CAAC;4BACrD,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;yBAC5B;qBACF;iBACF;qBAAM;oBACL,IAAI,WAAW,CAAC,IAAI,EAAE;wBACpB,IAAI,WAAW,CAAC,IAAI,IAAI,EAAE,EAAE;4BAC1B,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;4BAC/B,KAAI,CAAC,kBAAkB,GAAG,6GAA6G,CAAC;4BACxI,2CAA2C;yBAC5C;6BAAM;4BACL,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,qCAAqC,CAAC,CAAC;yBAC9D;qBACF;yBAAM;wBACL,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,qCAAqC,CAAC,CAAC;qBAC9D;iBACF;YACH,CAAC,CAAC,CAAC;YACH,IACE,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,aAAa,CAAC;gBAClF,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,aAAa,CAAC;gBACjF,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,EAC3E;gBACA,IAAI,IAAS,CAAC;gBACd,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,EAAE;oBACrB,IAAI,IAAI,CAAC,SAAS,GAAG,EAAE,IAAI,IAAI,CAAC,SAAS,GAAG,EAAE,EAAE;wBAC9C,IAAI,GAAG,SAAS,CAAC;wBACjB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;qBAC3B;yBAAM;wBACL,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;wBAC3B,qCAAqC;wBACrC,IAAI,GAAG,OAAO,CAAC;qBAChB;iBACF;qBAAM;oBACL,qCAAqC;iBACtC;aACF;SACF;aAAM,IAAI,SAAS,IAAI,SAAS,EAAE;YACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;aAAM;YACL,gBAAgB;YAChB,sCAAsC;SACvC;IACH,CAAC;IAED,8CAAU,GAAV;QAAA,iBAQC;QAPC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAC3C,UAAU,CAAC;YACT,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,oBAAoB,EAAE;gBAC/C,MAAM,EAAE,oBAAoB;gBAC5B,IAAI,EAAE,KAAI,CAAC,aAAa;aACzB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6DAAyB,GAAzB,UAA0B,KAAa;QACrC,IAAM,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC;QACrC,IAAI,IAAI,CAAC;QACT,IAAI,KAAK,KAAK,EAAE,EAAE;YAChB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,EAAC,eAAe,CAAC,CAAC;QACjE,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAS,CAAM;YAC3C,OAAO,CACL,CAAC,CAAC,QAAQ;iBACP,QAAQ,EAAE;iBACV,WAAW,EAAE;iBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACtB,CAAC,CAAC,MAAM;qBACL,QAAQ,EAAE;qBACV,WAAW,EAAE;qBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACtB,CAAC,CAAC,SAAS;qBACR,QAAQ,EAAE;qBACV,WAAW,EAAE;qBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACtB,CAAC,CAAC,aAAa;qBACZ,QAAQ,EAAE;qBACV,WAAW,EAAE;qBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACtB,CAAC,GAAG,CACL,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9B,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,UAAC,CAAM,IAAK,QAAC,CAAC,YAAY,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;YAC3D,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,MAAM,CAAC;YAC9C,IAAI,CAAC,oBAAoB,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,CAAC;YAC9D,0EAA0E;SAC3E;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;YACxC,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAC,CAAM,IAAK,QAAC,CAAC,YAAY,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;YACzE,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,MAAM,CAAC;YAC9C,IAAI,CAAC,oBAAoB,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,aAAa,CAAC,CAAC;YAC5E,0EAA0E;SAC3E;IACH,CAAC;IAED,8CAAU,GAAV,UAAW,WAA6B;QACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjD,CAAC;IAED,+CAAW,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,iCAAiC;IACjC,sDAAsD;IACtD,qEAAqE;IAErE,gBAAgB;IAChB,oEAAoE;IACpE,QAAQ;IACR,8DAA8D;IAC9D,sCAAsC;IACtC,aAAa;IACb,iEAAiE;IAEjE,gBAAgB;IAChB,4DAA4D;IAC5D,QAAQ;IACR,sDAAsD;IACtD,kCAAkC;IAClC,MAAM;IACN,IAAI;IAEJ,gDAAY,GAAZ;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,iDAAa,GAAb;QACE,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YAClC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACxC;IACH,CAAC;IAED,oEAAgC,GAAhC,UAAiC,IAAU;QACzC,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QACxC,IAAI,CAAC,oBAAoB,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,aAAa,CAAC,CAAC;QAC5E,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,KAAK,EAAE,EAAE;YACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,OAAO;SACR;QACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,UAAC,CAAM,EAAE,CAAM;YAC5C,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC;YACvC,QAAQ,IAAI,CAAC,MAAM,EAAE;gBACnB,KAAK,UAAU;oBACb,OAAO,oBAAoB,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;gBAC7D,KAAK,QAAQ;oBACX,OAAO,oBAAoB,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;gBACzD,eAAe;gBACf,wDAAwD;gBACxD,KAAK,WAAW;oBACd,OAAO,oBAAoB,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;gBAC/D,KAAK,SAAS;oBACZ,OAAO,oBAAoB,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;gBAC3D,KAAK,eAAe;oBAClB,OAAO,oBAAoB,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;gBACvE,KAAK,QAAQ;oBACX,OAAO,oBAAoB,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;gBACzD;oBACE,OAAO,CAAC,CAAC;aACZ;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IACvD,CAAC;IAED,yDAAqB,GAArB,UAAsB,IAAU;QAC9B,IAAI,IAAI,CAAC;QACT,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAC;YAC1B,IAAI,GAAI,IAAI,CAAC,yBAAyB,CAAC,KAAK,EAAE,CAAC;SAChD;aAAM;YACL,IAAI,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;SACpD;QACD,IAAI,CAAC,yBAAyB,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,yBAAyB,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACrE,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,KAAK,EAAE,EAAE;YACzC,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;YACtC,OAAO;SACR;QACD,IAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,UAAC,CAAM,EAAE,CAAM;YAC/C,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC;YACvC,QAAQ,IAAI,CAAC,MAAM,EAAE;gBACnB,KAAK,UAAU;oBACb,OAAO,oBAAoB,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;gBAC7D,KAAK,QAAQ;oBACX,OAAO,oBAAoB,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;gBACzD,eAAe;gBACf,wDAAwD;gBACxD,KAAK,kBAAkB;oBACrB,OAAO,oBAAoB,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;gBAC7E,KAAK,kBAAkB;oBACrB,OAAO,oBAAoB,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;gBAC7E;oBACE,OAAO,CAAC,CAAC;aACZ;QACH,CAAC,CAAC,CAAC;QACH,IAAI,UAAU,CAAC;QACf,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,UAAU,GAAG,eAAe,CAAC;SAC9B;aAAM;YACL,UAAU,GAAG,eAAe,CAAC;YAC7B,IAAI,CAAC,aAAa,GAAG,eAAe,CAAC;SACtC;QACD,IAAI,CAAC,yBAAyB,GAAG,IAAI,0EAAkB,CAAM,UAAU,CAAC,CAAC;QACzE,6DAA6D;IAC/D,CAAC;IAED,uDAAmB,GAAnB;QAAA,iBAoBC;QAnBC,IAAM,IAAI,GAAG;YACX,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;YAC1B,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM;YACzB,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU;YAC9B,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;YACjC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;YAChC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC9B,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;YAC1C,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC,iBAAiB;YACjD,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;YAC1C,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;YACtC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;YAC3C,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;SACxC,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,8BAA8B,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;YAC/E,IAAI,WAAW,CAAC,MAAM,IAAI,IAAI,EAAE;gBAC9B,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aACvC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gDAAY,GAAZ;QACE,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IACzC,CAAC;IAED,+CAAW,GAAX,UAAY,OAAsB;QAChC,IAAI,OAAO,CAAC,oBAAoB,EAAE;YAChC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC;YACjD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC;YACtD,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;gBACzB,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5B,IAAI,CAAC,oBAAoB,EAAE,CAAC;aAC7B;SACF;IACH,CAAC;IAED,gEAA4B,GAA5B,UAA6B,KAAa;QACxC,IAAM,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAChC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,yBAAyB,CAAC;QAC5D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACxC,IAAI,KAAK,KAAK,EAAE,EAAE;YAChB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;SAChC;aAAM;YACL,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;SAC/B;QACD,IAAI,IAAI,CAAC;QACP,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,UAAS,CAAM;YACtD,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,CAAC,gBAAgB,IAAI,IAAI,EAAE;gBAC9B,OAAO,CACL,CAAC,CAAC,QAAQ;qBACP,QAAQ,EAAE;qBACV,WAAW,EAAE;qBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC,CAAC,MAAM;yBACL,QAAQ,EAAE;yBACV,WAAW,EAAE;yBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC,CAAC,gBAAgB;yBACf,QAAQ,EAAE;yBACV,WAAW,EAAE;yBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC,CAAC,gBAAgB;yBACf,QAAQ,EAAE;yBACV,WAAW,EAAE;yBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC,GAAG,CACL,CAAC;aACH;QACH,CAAC,CAAC,CAAC;QACL,IAAI,IAAI,CAAC,qBAAqB,CAAC,MAAM,GAAG,CAAC,EAAE;YACzC,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,MAAM,CAAC;YAC9C,IAAI,CAAC,yBAAyB,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,CAAC;SACpE;aAAM;YACL,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,yBAAyB,CAAC;YAChE,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC;YACxE,IAAI,CAAC,yBAAyB,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,yBAAyB,CAAC,CAAC;SAC9F;IACH,CAAC;IAED,wDAAoB,GAApB;QAAA,iBAmDC;QAlDC,IAAM,IAAI,GAAG;YACX,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;YAC1B,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM;YACzB,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU;YAC9B,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;YACjC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;YAChC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC9B,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;YAC1C,oBAAoB,EAAE,IAAI,CAAC,sBAAsB,EAAE;YACnD,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;YAC1C,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;YACtC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;YAC3C,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;SACxC,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;YAC7E,IAAI,WAAW,CAAC,MAAM,IAAI,IAAI,EAAE;gBAC5B,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,wBAAwB,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;oBACvE,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,KAAI,CAAC,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,wBAAwB,CAAC,CAAC,KAAK,CAAC,CAAC,iBAAiB,CAAC,CAAC;oBACvF,KAAI,CAAC,eAAe,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,wBAAwB,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC;oBACzF,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;iBACrF;qBAAM;oBACL,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBACtB;gBACD,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,wBAAwB,CAAC,CAAC,cAAc,CAAC,kBAAkB,CAAC,EAAE;oBACpF,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,KAAI,CAAC,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,wBAAwB,CAAC,CAAC,kBAAkB,CAAC,CAAC,iBAAiB,CAAC,CAAC;oBACpG,KAAI,CAAC,eAAe,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,wBAAwB,CAAC,CAAC,kBAAkB,CAAC,CAAC,WAAW,CAAC,CAAC;oBACtG,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;iBACtG;qBAAK;oBACJ,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;iBAC3B;gBACD,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,wBAAwB,CAAC,CAAC,cAAc,CAAC,kBAAkB,CAAC,EAAE;oBACpF,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,KAAI,CAAC,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,wBAAwB,CAAC,CAAC,kBAAkB,CAAC,CAAC,iBAAiB,CAAC,CAAC;oBAC1G,KAAI,CAAC,kBAAkB,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,wBAAwB,CAAC,CAAC,kBAAkB,CAAC,CAAC,WAAW,CAAC,CAAC;oBACzG,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;iBACpG;qBAAM;oBACL,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;iBACzB;gBACD,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,wBAAwB,CAAC,CAAC,cAAc,CAAC,0BAA0B,CAAC,EAAE;oBAC5F,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,KAAI,CAAC,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,wBAAwB,CAAC,CAAC,0BAA0B,CAAC,CAAC,iBAAiB,CAAC,CAAC;oBAClH,KAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,wBAAwB,CAAC,CAAC,0BAA0B,CAAC,CAAC,WAAW,CAAC,CAAC;oBAChH,KAAI,CAAC,mBAAmB,GAAG,KAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC;iBACnH;qBAAM;oBACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBACxB;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wDAAoB,GAApB;QAAA,iBAgEC;QA/DC,IAAM,IAAI,GAAG;YACX,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;YAC1B,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM;YACzB,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU;YAC9B,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;YACjC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;YAChC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC9B,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;YAC1C,oBAAoB,EAAE,IAAI,CAAC,sBAAsB,EAAE;YACnD,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;YAC1C,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;YACtC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;YAC3C,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;SACxC,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,gCAAgC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;YACjF,IAAI,WAAW,CAAC,MAAM,IAAI,IAAI,EAAE;gBAC9B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBAC9B,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,IAAM,mBAAmB,GAAG,KAAI,CAAC,IAAI,CAAC,eAAe,CAAC;gBACtD,IAAM,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;gBAChE,KAAI,CAAC,mBAAmB,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;gBACrD,IAAM,SAAS,GAAG,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;gBACnE,KAAI,CAAC,qBAAqB,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;gBACzD,IAAM,MAAI,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;wCAC9C,CAAC;oBACR,IAAM,GAAG,GAAG,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC,CAAC;oBAClC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACjD,IAAI,KAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;wBAChC,GAAG,CAAC,IAAI,GAAG,MAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;wBAC5B,IAAI,MAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,MAAM,EAAE;4BAC/B,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC;yBACvB;6BAAM;4BACL,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC;yBACvB;wBACD,IAAM,QAAQ,GAAG,EAAE,CAAC;wBACpB,QAAQ,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,mBAAmB,CAAC,CAAC,CAAC;wBACzD,GAAG,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;wBACvB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBAC3B;yBAAM;wBACL,IAAM,KAAK,GAAG,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,CAAM,IAAK,QAAC,CAAC,IAAI,KAAK,MAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAA3B,CAA2B,CAAC,CAAC;wBACjF,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;4BAChB,GAAG,CAAC,IAAI,GAAG,MAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;4BAC5B,IAAI,MAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,MAAM,EAAE;gCAC/B,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC;6BACvB;iCAAM;gCACL,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC;6BACvB;4BACD,IAAM,QAAQ,GAAG,EAAE,CAAC;4BACpB,QAAQ,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,mBAAmB,CAAC,CAAC,CAAC;4BACzD,GAAG,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;4BACvB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;yBAC3B;6BAAM;4BACL,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,mBAAmB,CAAC,CAAC,CAAC;yBAC7E;qBACF;;gBA9BH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAI,CAAC,MAAM,EAAE,CAAC,EAAE;4BAA3B,CAAC;iBA+BT;gBACD,IAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACxD,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,EAAE,KAAI,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;gBAC7D,UAAU,CAAC,cAAM,YAAI,CAAC,kBAAkB,CAAC,KAAI,CAAC,UAAU,EAAE,KAAI,CAAC,UAAU,CAAC,EAAzD,CAAyD,CAAC,CAAC;aAC7E;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wDAAoB,GAApB;QAAA,iBAyBC;QAxBC,IAAM,eAAe,GAAQ,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QACvD,IAAM,aAAa,GAAQ,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;QACnD,IAAM,gBAAgB,GAAQ,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QACxD,IAAM,cAAc,GAAQ,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;QACpD,IAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QACjD,IAAM,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QACzD,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAClC,IAAM,IAAI,GAAQ;YAChB,OAAO;YACP,eAAe;YACf,aAAa;YACb,gBAAgB;YAChB,cAAc;YACd,cAAc,EAAE,sBAAsB;YACtC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;SAE5D,CAAC;QACF,IAAI,CAAC,kBAAkB,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,WAAgB;YACnF,IAAI,WAAW,CAAC,MAAM,IAAI,IAAI,EAAE;gBAC9B,KAAI,CAAC,oBAAoB,EAAE,CAAC;aAC7B;iBAAM,IAAI,WAAW,CAAC,MAAM,IAAI,QAAQ,EAAE;aAE1C;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0DAAsB,GAAtB;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC;QACpD,IAAM,aAAa,GAAG,EAAE,CAAC;QACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,aAAa,CAAC,IAAI,CAAC;gBACjB,eAAe,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gBACvC,eAAe,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC;gBAC9C,cAAc,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACpC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;gBACxB,cAAc,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACpC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC/B,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;gBACxC,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC;gBAC3C,kBAAkB,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC;gBAClD,aAAa,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;gBAC1C,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBAC1B,gBAAgB,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;gBAC7C,iBAAiB,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;gBACjE,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;gBACzC,kBAAkB,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC;gBACpD,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gBAChC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBAC5B,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gBAChC,oBAAoB,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC;gBACtD,wBAAwB,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,0BAA0B,CAAC;gBAChE,gBAAgB,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC;aACjD,CAAC,CAAC;SACJ;QACD,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;QAC5C,OAAO,aAAa,CAAC;IACvB,CAAC;IAED,sDAAkB,GAAlB,UAAmB,UAAc,EAAE,QAAY;QAC7C,IAAM,OAAO,GAAQ;YACnB,KAAK,EAAE;gBACL,IAAI,EAAE,YAAY;gBAClB,MAAM,EAAE,GAAG;aACZ;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,EAAE;aACT;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,EAAE;aACT;YACD,MAAM,EAAE;gBACN,KAAK,EAAE,QAAQ;gBACf,aAAa,EAAE,QAAQ;gBACvB,CAAC,EAAE,CAAC;gBACJ,OAAO,EAAE,CAAC;gBACV,aAAa,EAAE,CAAC;gBAChB,gBAAgB,EAAE,CAAC;gBACnB,SAAS,EAAE;oBACT,QAAQ,EAAE,MAAM;iBACjB;aACF;YACD,KAAK,EAAE;gBACL,UAAU,EAAE,QAAQ;gBACpB,KAAK,EAAE;oBACL,UAAU,EAAE,gBAAgB;iBAC7B;aACF;YACD,KAAK,EAAE;gBACL,KAAK,EAAE;oBACL,IAAI,EAAE,oBAAoB;iBAC3B;gBACD,KAAK,EAAE;oBACL,UAAU,EAAE,gBAAgB;iBAC7B;aACF;YACD,OAAO,EAAE;gBACP,MAAM,EAAE,IAAI;gBACZ,WAAW,EAAE,EAAE;aAChB;YACD,OAAO,EAAE;gBACP,OAAO,EAAE,KAAK;aACf;YACD,WAAW,EAAE;gBACX,UAAU,EAAE;oBACV,WAAW,EAAE,GAAG;iBACjB;aACF;YACD,MAAM,EAAE,UAAU;SACnB,CAAC;QACF,iDAAgB,CAAC,wBAAwB,EAAE,OAAO,CAAC,CAAC;IACtD,CAAC;IAED,qDAAiB,GAAjB,UAAkB,KAAa;QAC7B,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,IAAM,cAAc,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC;YACzC,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,GAAG,CAAC;SACzC;aAAM;YACL,OAAO,GAAG,CAAC;SACZ;IACH,CAAC;IAED,4CAAQ,GAAR,UAAS,GAAQ;QACf,IAAM,OAAO,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,qDAAiB,GAAjB,UAAkB,GAAQ;QACxB,IAAM,OAAO,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrC,OAAO,OAAO,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;IACtE,CAAC;IAED,kDAAc,GAAd;QAAA,iBA+BC;QA9BC,IAAI,CAAC,oBAAoB,GAAG,IAAI,0EAAkB,CAAC,EAAE,CAAC,CAAC;QACvD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC;YACnD,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;aAAM;YACL,yCAAyC;YACzC,IAAM,cAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAC,CAAM,IAAK,QAAC,CAAC,YAAY,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;YAChF,IAAI,cAAY,CAAC,MAAM,GAAG,CAAC,EAAE;wCAClB,CAAC;oBACR,IAAM,KAAK,GAAG,OAAK,aAAa,CAAC,SAAS,CAAC,UAAC,CAAM,IAAK,QAAC,CAAC,QAAQ,KAAK,cAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,EAA1C,CAA0C,CAAC,CAAC;oBACnG,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;wBAChB,OAAK,aAAa,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;qBAC/C;;;gBAJH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAY,CAAC,MAAM,EAAE,CAAC,EAAE;4BAAnC,CAAC;iBAKT;aACF;YACD,IAAM,IAAI,GAAQ,EAAE,CAAC;YACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAClD,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,EAAE;oBAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;iBAClC;aACF;YACD,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,MAAM,CAAC;YAC9C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;YACjD,IAAI,CAAC,oBAAoB,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACvE,UAAU,CAAC,cAAM,YAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,EAApD,CAAoD,CAAC,CAAC;YACvE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;YAChE,2CAA2C;YAC3C,IAAI,CAAC,YAAY,GAAG,IAAI,uEAAc,CAAY,IAAI,EAAE,IAAI,CAAC,CAAC;YAC9D,sBAAsB;SACvB;IACH,CAAC;IAED,+CAAW,GAAX,UAAY,UAAe,EAAE,MAAkB;QAC7C,UAAU,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC;IAED,8CAAU,GAAV,UAAW,UAAe,EAAE,MAAkB;QAC5C,UAAU,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;IAED,+CAAW,GAAX,UAAY,GAAQ;QAClB,IAAI,IAAI,CAAC,gBAAgB,KAAK,GAAG,IAAI,IAAI,CAAC,0BAA0B,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;YACjG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC5C;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;SACzC;IAEH,CAAC;IAED,qDAAiB,GAAjB,UAAkB,QAA0B;QAC1C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrD,CAAC;IAED,sDAAkB,GAAlB;QACE,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;IAChC,CAAC;IAED,iDAAa,GAAb;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;QACtD,IAAM,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC;QACtD,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gDAAY,GAAZ;QACE,IAAI,IAAI,CAAC,aAAa,EAAE,KAAK,KAAK,EAAC;YACjC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC1B;IACH,CAAC;IAGD,oDAAgB,GAAhB,UAAiB,KAAU;QACzB,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClD,IAAI,KAAK,KAAK,IAAI,EAAE;gBAClB,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;aAC3C;iBAAM;gBACL,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;aAC3C;SACF;QACD,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAC,CAAM,IAAK,QAAC,CAAC,YAAY,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;QACzE,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACnB,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,MAAM,CAAC;SAC/C;aAAM;YACL,IAAI,CAAC,0BAA0B,GAAG,CAAC,CAAC;SACrC;QACD,IAAI,CAAC,oBAAoB,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACvE,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACrD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,iDAAa,GAAb,UAAc,KAAc;QAA5B,iBAUC;QATC,IAAG,CAAC,KAAK,EAAC;YACR,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,aAAG;gBACxC,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,CAAC;SAC/B;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAC1B,IAAI,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,CAAC;SAC/B;IACH,CAAC;IAED,sDAAkB,GAAlB,UAAmB,SAAc;QAC/B,IAAM,IAAI,GAAG,EAAE,CAAC;QAChB,IAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IACxC,CAAC;IAED,+CAAW,GAAX,UAAY,SAAc,EAAE,QAAa;QACvC,IAAM,SAAS,GAAQ,EAAE,CAAC;QAC1B,IAAM,WAAW,GAAQ,EAAE,CAAC;QAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpD,qDAAqD;gBACrD,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3C;SACF;QACD,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;QACD,IAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAS,CAAM;YAC5C,OAAO,SAAS,CAAC,KAAK,CAAC,UAAS,CAAM;gBACpC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,QAAQ,GAAG,MAAM,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC;QAC5C,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,oBAAoB,GAAG,IAAI,0EAAkB,CAAM,QAAQ,CAAC,CAAC;QAClE,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IACvD,CAAC;IAEH,iDAAiD;IAC/C,gDAAY,GAAZ,UAAa,GAAQ;QAArB,iBAgBC;QAfC,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QACzB,IAAM,IAAI,GAAQ,EAAE,CAAC;QACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClD,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,EAAE;gBAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;aAClC;SACF;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAChC,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9C,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC;QAClC,IAAI,CAAC,oBAAoB,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACvE,UAAU,CAAC,cAAM,YAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,EAApD,CAAoD,CAAC,CAAC;QACvE,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;QACxC,IAAI,CAAC,YAAY,GAAG,IAAI,uEAAc,CAAY,IAAI,EAAE,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;sGArsEU,yBAAyB;6GAAzB,yBAAyB;sEA4EzB,wEAAY;sEAkBZ,8DAAO;sEA+CP,wEAAY;;;;;;;;;YC3MzB,wHACE;YA6HF;YAAA,uIACE;YAmPF;YAAA,uIACE;YA6FF;YAAA,kNACE;YAqBF;;YAteK,oFAAsB;YA8Hb,0DAAwB;YAAxB,sFAAwB;YAoPxB,0DAAuB;YAAvB,qFAAuB;;oCDlXrC;CAowEC;AAtsEqC;6FAAzB,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;uvBAeyB,YAAY;kBAAnC,oDAAM;mBAAC,cAAc;YACZ,QAAQ;kBAAjB,oDAAM;YA6DkB,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;YAkBH,IAAI;kBAAvB,uDAAS;mBAAC,8DAAO;YAaa,oBAAoB;kBAAlD,mDAAK;mBAAC,sBAAsB;YAkCJ,oBAAoB;kBAA5C,uDAAS;mBAAC,wEAAY;YAEQ,mBAAmB;kBAAjD,oDAAM;mBAAC,qBAAqB;YAgCD,aAAa;kBAAxC,uDAAS;mBAAC,eAAe","file":"create-test-create-test-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, retry } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class ControlStoreService {\n\n  public $record_list: BehaviorSubject<any> = new BehaviorSubject(null);\n  public $selected_list: BehaviorSubject<any> = new BehaviorSubject(null);\n\n  constructor(private httpClient: HttpClient) {}\n\n  LoadSavedTest(data: any) {\n    return this.httpClient\n      .post('GetAllSavedData', {\n        data\n      })\n      .pipe(\n        map((body: any) => {\n          if (body) {\n            if (body) {\n              return body;\n            } else {\n              return {};\n            }\n          } else {\n            return {};\n          }\n        }),\n        catchError(() => of([]))\n      );\n  }\n\n  GetWeeks(data: any) {\n    return this.httpClient.post('Get_weeks', data).pipe(\n      map((body: any) => {\n        if (body) {\n          if (body) {\n            return body;\n          } else {\n            return {};\n          }\n        } else {\n          return {};\n        }\n      }),\n      catchError(() => of([]))\n    );\n  }\n\n  SaveStageTwo(data: any, stringified_data: any) {\n    return this.httpClient\n      .post('Update_storedata', {\n        data,\n        stringified_data\n      })\n      .pipe(\n        map((body: any) => {\n          if (body) {\n            if (body) {\n              return body;\n            } else {\n              return {};\n            }\n          } else {\n            return {};\n          }\n        }),\n        catchError(() => of([]))\n      );\n  }\n\n  GetSelectedStores(id: any) {\n    console.log(this.$selected_list, 'calling the selectedList');\n    if(this.$selected_list.value !== null){\n      return this.getSavedselected();\n    } else {\n      console.log('calling the selectedList else');\n      return this.httpClient.get('api/get_currenttest/' + id).pipe(\n        map((body: any) => {\n          if (body) {\n            this.setSavedselected(body);\n            return body;\n          } else {\n            return {};\n          }\n        }),\n        catchError(() => of([]))\n      );\n    }\n  }\n\n  GetControlSummary(data: any) {\n    return this.httpClient\n      .post('api/controlstore_summary', {\n        data\n      })\n      .pipe(\n        retry(2),\n        map((body: any) => {\n          if (body) {\n            if (body) {\n              return body;\n            } else {\n              return {};\n            }\n          } else {\n            return {};\n          }\n        }),\n        catchError(() => of([]))\n      );\n  }\n\n  GetStores_list(data: any) {\n    return this.httpClient\n      .post('api/getSelectedStores', {\n        data\n      })\n      .pipe(\n        map((body: any) => {\n          if (body) {\n            if (body) {\n              return body;\n            } else {\n              return {};\n            }\n          } else {\n            return {};\n          }\n        }),\n        catchError(() => of([]))\n      );\n  }\n\n  Recompute(data: any) {\n    return this.httpClient\n      .post('api/recompute_controlstore', {\n        data\n      })\n      .pipe(\n        map((body: any) => {\n          if (body) {\n            if (body) {\n              return body;\n            } else {\n              return {};\n            }\n          } else {\n            return {};\n          }\n        }),\n        catchError(() => of([]))\n      );\n  }\n\n  Recompute_Aus(data: any) {\n    return this.httpClient\n      .post('api/recompute_controlstore_aus', {\n        data\n      })\n      .pipe(\n        map((body: any) => {\n          if (body) {\n            if (body) {\n              return body;\n            } else {\n              return {};\n            }\n          } else {\n            return {};\n          }\n        }),\n        catchError(() => of([]))\n      );\n  }\n\n  Identifyctrlstore(data: any) {\n    return this.httpClient\n      .post('api/identify_ctrlstore', {\n        data\n      })\n      .pipe(\n        retry(2),\n        map((body: any) => {\n          if (body) {\n            if (body) {\n              return body;\n            } else {\n              return {};\n            }\n          } else {\n            return {};\n          }\n        }),\n        catchError(() => of([]))\n      );\n  }\n\n  Identifyctrlstore_Aus(data: any) {\n    return this.httpClient\n      .post('api/identify_ctrlstore_aus', {\n        data\n      })\n      .pipe(\n        retry(2),\n        map((body: any) => {\n          if (body) {\n            if (body) {\n              return body;\n            } else {\n              return {};\n            }\n          } else {\n            return {};\n          }\n        }),\n        catchError(() => of([]))\n      );\n  }\n\n  controlMatchDataSave(data: any) {\n    return this.httpClient\n      .post('api/update_stage', {\n        data\n      })\n      .pipe(\n        map((body: any) => {\n          if (body) {\n            if (body) {\n              return body;\n            } else {\n              return {};\n            }\n          } else {\n            return {};\n          }\n        }),\n        catchError(() => of([]))\n      );\n  }\n\n  getTestStoreMatchControlData(id: any) {\n    console.log(this.$record_list, 'calling the recordlist');\n    if (this.$record_list.value !== null){\n      return this.getSavedRecords();\n    } else {\n      console.log('calling the recordlist else');\n      return this.httpClient.get('api/record-list/' + id).pipe(\n        map((body: any) => {\n          if (body) {\n            this.setSavedrecords(body);\n            return body;\n          } else {\n            return {};\n          }\n        }),\n        catchError(() => of([]))\n      );\n    }\n  }\n\ngetSavedRecords(): Observable<any>{\n  return this.$record_list;\n}\n\nsetSavedrecords(data: any){\n  console.log(data, 'datavalue');\n   this.$record_list.next(data);\n}\ngetSavedselected(): Observable<any>{\n  return this.$selected_list;\n}\n\nsetSavedselected(data: any){\n   this.$selected_list.next(data);\n}\n\ngetcontrolStoreData(id: any){\n  if(this.$record_list.value === null) {\n    this.httpClient.get('api/record-list/' + id).subscribe((data: any) => {\n     this.setSavedrecords(data);\n    },);\n  }\n  if(this.$selected_list.value === null) {\n    this.httpClient.get('api/get_currenttest/' + id).subscribe((data: any) => {\n     this.setSavedselected(data);\n    },);\n  }\n}\n\nGetControlSummaryCorrelation(data: any) {\n  return this.httpClient\n    .post('api/control_summary_correlation', {\n      data\n    })\n    .pipe(\n      retry(2),\n      map((body: any) => {\n        if (body) {\n          if (body) {\n            return body;\n          } else {\n            return {};\n          }\n        } else {\n          return {};\n        }\n      }),\n      catchError(() => of([]))\n    );\n}\n\nuploadControlStore(data: any): Observable<any> {\n  return this.httpClient\n    .post('api/upload_select_controlstore', data)\n    .pipe(\n      retry(2),\n      map((body: any) => {\n        if (body) {\n          if (body) {\n            return body;\n          } else {\n            return {};\n          }\n        } else {\n          return {};\n        }\n      }),\n      catchError(() => of([]))\n    );\n}\n\ndownladControlStoreTemplate(data: any): Observable<any> {\n  const httpOptions = {\n    responseType: 'blob' as 'json'\n  };\n  return this.httpClient\n    .post('api/download_control_store_template', data, httpOptions)\n    .pipe(\n      map((body: any) => {\n        if (body) {\n          if (body) {\n            return body;\n          } else {\n            return {};\n          }\n        } else {\n          return {};\n        }\n      }),\n      catchError(() => of([]))\n    );\n}\n\nuploadControlStorePool(data: any): Observable<any> {\n  return this.httpClient\n    .post('api/upload_control_store_pool', data)\n    .pipe(\n      retry(2),\n      map((body: any) => {\n        if (body) {\n          if (body) {\n            return body;\n          } else {\n            return {};\n          }\n        } else {\n          return {};\n        }\n      }),\n      catchError(() => of([]))\n    );\n}\n}\n","import {AfterViewInit, Component, HostListener, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {MatStepper} from '@angular/material/stepper';\nimport {PerfectScrollbarConfigInterface} from 'ngx-perfect-scrollbar';\nimport {CommonService} from '@app/shared/services/common.service';\nimport {isNullOrUndefined} from 'util';\nimport {Subscription} from 'rxjs';\nimport {GlobalEventsService} from '@app/shared/services/global-events.service';\nimport {TestMeasureService} from '@app/shared/services/testmeasure.service';\nimport {TestConfigService} from '@app/shared/services/testconfig.service';\n\n@Component({\n  selector: 'app-create-test',\n  templateUrl: './create-test.component.html',\n  styleUrls: ['./create-test.component.scss'],\n  // animations: [slideToRightTransition]\n})\nexport class CreateTestComponent implements OnInit, AfterViewInit, OnDestroy {\n  isLinear = false;\n  @ViewChild('stepper') stepper: MatStepper;\n  loadComponent = 0;\n  public config: PerfectScrollbarConfigInterface = {};\n  height = 207;\n  @ViewChild('footer') footer: any;\n  previousStepSubscrption: Subscription = Subscription.EMPTY;\n  controlStoreSubscrption: Subscription = Subscription.EMPTY;\n  currentComponent: any;\n  data: any;\n  showStepper = true;\n  generate_store = 'Control_Store';\n  controlStore = false;\n  generate_Selectstore = 'Test_storePopulation';\n  testStoreToggle = true;\n  tipsDataStr: any;\n  completed1: boolean;\n  state1: string;\n  completed2: boolean;\n  state2: string;\n  completed3: boolean;\n  state3: string;\n  completed4: boolean;\n  state4: string;\n  hideCompraison = false;\n\n  constructor(\n    private homeService: TestConfigService,\n    private testMeasureService: TestMeasureService,public commonService: CommonService,\n              public globalService: GlobalEventsService) {\n    this.previousStepSubscrption = this.globalService.subscribe('MOVE_PREVIOUS', obj => {\n      console.log('Previous subscription');\n      if (obj.module === 'CREATE_TEST') {\n        this.moveControlStore();\n      }\n    });\n    this.controlStoreSubscrption = this.globalService.subscribe('SHOW_CONTROL_STORES', obj => {\n      if (obj.module === 'CREATE_TEST') {\n        this.showStepper = !this.showStepper;\n        this.controlStore = true;\n        const testType = sessionStorage.getItem('test-type');\n        console.log(testType, 'testType');\n        if (testType !== undefined && testType === 'RTM Impact Test') {\n          this.hideCompraison = true;\n        } else {\n          this.hideCompraison = false;\n        }\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    const currentComponent = this.commonService.getCurrentComponentSubject();\n    if (currentComponent === null) {\n      this.commonService.setCurrentComponentSubject(this.loadComponent, this.data, 'other', 'NotfromEdit');\n    } else if (currentComponent.edit === 'other') {\n      this.commonService.setCurrentComponentSubject(null, null, 'other', 'NotfromEdit');\n      window.location.reload();\n    }\n    setTimeout(() => {\n      if (currentComponent != null && currentComponent.edit != 'other') {\n        console.log(currentComponent.edit, 'currentComponent.edit');\n        if (currentComponent !== null && !isNullOrUndefined(currentComponent.currentComponent) && currentComponent.currentComponent !== 0) {\n          console.log(currentComponent.data);\n          this.onEditNav(currentComponent.currentComponent, currentComponent.data, currentComponent.edit);\n          if (currentComponent.currentComponent === 5 && currentComponent.edit === 'edit') {\n            this.showStepper = false;\n            this.controlStore = true;\n            const testType = sessionStorage.getItem('test-type');\n            console.log(testType, 'testType');\n            if (testType !== undefined && testType === 'RTM Impact Test') {\n              this.hideCompraison = true;\n            } else {\n              this.hideCompraison = false;\n            }\n          }\n        }\n      }\n    }, 100);\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\nthis.onResize();\n});\n  }\n\n\n  ngOnDestroy(){\n    this.testMeasureService.setControlStoreMeasurementpost(null);\n    this.homeService.setTestStorePopulationSummary(null);\n    this.homeService.setTestStorePopulationCorrelation(null);\n    this.commonService.setCurrentComponentSubject(null,null,null,null);\n    if(!isNullOrUndefined(this.previousStepSubscrption)){\n    this.previousStepSubscrption.unsubscribe();\n    }\n    if(!isNullOrUndefined(this.controlStoreSubscrption)){\n      this.controlStoreSubscrption.unsubscribe();\n    }\n    console.log(this.previousStepSubscrption,'this.previousStepSubscrption');\n  }\n\n  tipsDataPassed(data: any) {\n    console.log(data, 'data');\n    this.tipsDataStr = data;\n  }\n\n  movenext(event: any) {\n    const currentComponent = this.commonService.getCurrentComponentSubject();\n    console.log(event);\n    console.log(currentComponent.edit);\n    console.log(event);\n    this.currentComponent = event.currentComponent;\n    this.data = event.data;\n    const stepIndex = event.data.stepindex;\n    const testName = event.data.test_name;\n    let movednext = 0;\n    console.log(currentComponent.fromEdit);\n    if (!isNullOrUndefined(this.currentComponent)) {\n      console.log(this.currentComponent);\n      if (this.currentComponent === 0) {\n        this.completed1 = true;\n        this.state1 = 'done';\n      } else if (this.currentComponent === 1) {\n        this.completed1 = true;\n        this.state1 = 'done';\n        this.completed2 = true;\n        this.state2 = 'done';\n      } else if (this.currentComponent === 2) {\n        this.completed1 = true;\n        this.state1 = 'done';\n        this.completed2 = true;\n        this.state2 = 'done';\n        this.completed3 = true;\n        this.state3 = 'done';\n      }\n      if (currentComponent.fromEdit === 'NotfromEdit') {\n        movednext = this.currentComponent + 1;\n        this.stepper.selectedIndex = this.currentComponent + 1;\n        this.commonService.setCurrentComponentSubject(movednext, this.data, 'other', 'NotfromEdit');\n        this.loadComponent = movednext;\n      } else if (this.data.stepindex === 2) {\n        movednext = this.currentComponent + 1;\n        this.stepper.selectedIndex = this.currentComponent + 1;\n        this.commonService.setCurrentComponentSubject(movednext, this.data, 'other', 'NotfromEdit');\n        this.loadComponent = movednext;\n      } else {\n        movednext = this.currentComponent;\n        this.stepper.selectedIndex = this.currentComponent;\n        this.commonService.setCurrentComponentSubject(movednext, this.data, 'other', 'NotfromEdit');\n        this.loadComponent = movednext;\n      }\n\n      console.log(this.currentComponent);\n      console.log(movednext);\n    }\n  }\n\n  previousStep() {\n    let currentComponent: any;\n    currentComponent = this.commonService.getCurrentComponentSubject();\n    console.log(currentComponent, 'currentcomponent');\n    // console.log(this.currentComponent);\n\n    if (currentComponent.fromEdit === 'fromEdit') {\n      if (!isNullOrUndefined(currentComponent.currentComponent) && currentComponent.currentComponent !== 0) {\n        this.stepper.selectedIndex = currentComponent.currentComponent - 2;\n        this.loadComponent = currentComponent.currentComponent - 2;\n        this.commonService.setCurrentComponentSubject(currentComponent.currentComponent - 2, currentComponent.data, 'other', 'NotfromEdit');\n      }\n    } else {\n      if (!isNullOrUndefined(currentComponent.currentComponent) && currentComponent.currentComponent !== 0) {\n        this.stepper.selectedIndex = currentComponent.currentComponent - 1;\n        this.loadComponent = currentComponent.currentComponent - 1;\n        this.commonService.setCurrentComponentSubject(currentComponent.currentComponent - 1, currentComponent.data, 'other', 'NotfromEdit');\n      }\n    }\n    if (currentComponent.currentComponent === 2) {\n      this.completed3 = false;\n      this.state3 = 'edit';\n    } else if (currentComponent.currentComponent === 1) {\n      this.completed2 = false;\n      this.state2 = 'edit';\n    }\n  }\n\n  stepClick(event: any) {\n    this.loadComponent = event.selectedIndex;\n    this.commonService.setCurrentComponentSubject(this.loadComponent, this.data, 'other', 'NotfromEdit');\n    console.log(event, 'index to next stepper');\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.height = window.innerHeight - (64 + this.footer.nativeElement.offsetHeight);\n  }\n\n  changeControlState(event: any) {\n    this.generate_store = event;\n    this.globalService.publish('CONTROL_STORES_VIEW', {\n      module: 'CREATE_TEST',\n      view: this.generate_store\n    });\n  }\n\n  getdisplay() {\n    if (this.showStepper) {\n      return 'block';\n    } else {\n      return 'none';\n    }\n  }\n\n  moveControlStore() {\n    console.log('1');\n    if (!this.showStepper) {\n      this.showStepper = true;\n      if (!this.controlStore) {\n        console.log(this.controlStore, 'controlstore');\n        this.globalService.publish('HIDE_TEST_STORE_COMPRASSION', {\n          module: 'CREATE_TEST'\n        });\n        this.generate_Selectstore = 'Test_storePopulation';\n      } else {\n        this.globalService.publish('HIDE_CONTROL_STORES', {\n          module: 'CREATE_TEST',\n          enable: false\n        });\n      }\n    } else {\n      this.previousStep();\n    }\n  }\n\n  onEditNav(id: any, data: any, edit: any) {\n    if (!isNullOrUndefined(id) && id < 5) {\n      const movednext = id - 1;\n      console.log(movednext);\n\n      this.stepper.selectedIndex = id - 1;\n      if (edit === 'edit') {\n        console.log(edit);\n        this.commonService.setCurrentComponentSubject(id, data, 'other', 'fromEdit');\n      } else {\n        console.log(edit);\n        this.commonService.setCurrentComponentSubject(null, null, 'other', 'fromEdit');\n      }\n      this.loadComponent = movednext;\n      if (id === 2) {\n        this.completed1 = true;\n        this.state1 = 'done';\n      } else if (id === 3) {\n        this.completed1 = true;\n        this.state1 = 'done';\n        this.completed2 = true;\n        this.state2 = 'done';\n      } else if (id === 4) {\n        this.completed1 = true;\n        this.state1 = 'done';\n        this.completed2 = true;\n        this.state2 = 'done';\n        this.completed3 = true;\n        this.state3 = 'done';\n      }\n    } else {\n      const movednext = id - 1;\n      this.showStepper = false;\n      this.loadComponent = movednext;\n    }\n  }\n\n  showComprassionview(event: any) {\n    console.log(event, 'event changes');\n    this.showStepper = !event;\n    this.getdisplay();\n  }\n\n  changeTestStores(event: any, toggle: boolean) {\n    this.testStoreToggle = toggle;\n    this.generate_Selectstore = event;\n  }\n}\n","<perfect-scrollbar [style.height.px]=\"height\" style=\"width:100%;overflow-x: hidden;\">\n  <div class=\"route_container_top route_container_right\" #progressContent id=\"progressContent\">\n    <div class=\"row\" style=\"overflow-x: hidden\">\n      <div class=\"col-md-3 col-lg-3 col-sm-12 col-xl-3\">\n        <mat-card [ngStyle]=\"{display: getdisplay()}\">\n          <mat-vertical-stepper #stepper (selectionChange)=\"stepClick($event)\"\n                                style=\"font-family: Mulish_regular !important;pointer-events: none;\">\n            <ng-template matStepperIcon=\"edit\" id=\"icon_edit\" style=\"background-color: white\">\n              <mat-icon>done</mat-icon>\n            </ng-template>\n            <mat-step [completed]=\"completed1\" [state]=\"state1\">\n              <ng-template matStepLabel><span style=\"font-size: 12px;color: #1f242c\">Enter test details</span>\n              </ng-template>\n            </mat-step>\n            <mat-step [completed]=\"completed2\" [state]=\"state2\">\n              <ng-template matStepLabel><span style=\"font-size: 12px;color: #1f242c\">Applicability criteria</span>\n              </ng-template>\n            </mat-step>\n            <mat-step [completed]=\"completed3\" [state]=\"state3\">\n              <ng-template matStepLabel><span style=\"font-size: 12px;color: #1f242c\">Select test stores</span>\n              </ng-template>\n            </mat-step>\n            <mat-step [completed]=\"completed4\" [state]=\"state4\">\n              <ng-template matStepLabel><span style=\"font-size: 12px;color: #1f242c\">Control store mapping</span>\n              </ng-template>\n            </mat-step>\n          </mat-vertical-stepper>\n        </mat-card>\n        <mat-card *ngIf=\"!showStepper\">\n          <mat-card-content *ngIf=\"controlStore\">\n            <div class=\"control_summary\" (click)=\"changeControlState('Control_Store')\"\n                 [ngClass]=\"{'active_div': generate_store === 'Control_Store', 'inactive_div': generate_store !== 'Control_Store'}\">\n              <span\n                [ngClass]=\"{'active_span control_span_active': generate_store === 'Control_Store', 'control_span_inactive': generate_store !== 'Control_Store'}\"></span>Generate\n              control Stores\n            </div>\n            <div *ngIf=\"!hideCompraison\" class=\"control_summary\" (click)=\"changeControlState('Comprassion_summary')\"\n                 [ngClass]=\"{'active_div': generate_store === 'Comprassion_summary', 'inactive_div': generate_store !== 'Comprassion_summary'}\">\n              <span\n                [ngClass]=\"{'active_span control_span_active': generate_store === 'Comprassion_summary', 'control_span_inactive': generate_store !== 'Comprassion_summary'}\"></span>Comparison\n              Summary\n            </div>\n          </mat-card-content>\n          <mat-card-content *ngIf=\"!controlStore\">\n            <div class=\"control_summary\" (click)=\"changeTestStores('Test_storePopulation', true)\"\n                 [ngClass]=\"{'active_div': generate_Selectstore === 'Test_storePopulation', 'inactive_div': generate_Selectstore !== 'Test_storePopulation'}\">\n              <span\n                [ngClass]=\"{'active_span control_span_active': generate_Selectstore === 'Test_storePopulation', 'control_span_inactive': generate_Selectstore !== 'Test_storePopulation'}\"></span>Test\n              Store correlation\n            </div>\n            <div class=\"control_summary\" (click)=\"changeTestStores('testStore_Comprassion_summary', false)\"\n                 [ngClass]=\"{'active_div': generate_Selectstore === 'testStore_Comprassion_summary', 'inactive_div': generate_Selectstore !== 'testStore_Comprassion_summary'}\">\n              <span\n                [ngClass]=\"{'active_span control_span_active': generate_Selectstore === 'testStore_Comprassion_summary', 'control_span_inactive': generate_Selectstore !== 'testStore_Comprassion_summary'}\"></span>Comparison\n              Summary\n            </div>\n          </mat-card-content>\n        </mat-card>\n\n        <div class=\"route_container_top\">\n          <mat-card class=\"testcard\">\n            <mat-card-content class=\"mat-card_content\">\n              <span class=\"first_heading\">Tips & Tricks</span>\n              <div class=\"image_div\"><img class=\"image_size\" src=\"assets/images/tips.png\" alt=\"sort\"/></div>\n              <hr/>\n              <ul id=\"Create_test\">\n                <li *ngFor=\"let tip of tipsDataStr\">\n                  <span class=\"second_p\">{{tip}}</span>\n                </li>\n              </ul>\n            </mat-card-content>\n          </mat-card>\n        </div>\n      </div>\n      <div class=\"col-md-9 col-lg-9 col-sm-12 col-xl-9 width_grid\">\n        <ng-container *ngIf=\"loadComponent === 0\">\n          <app-test-details (moveNextStep)=\"movenext($event)\" (tipsData)=\"tipsDataPassed($event)\"></app-test-details>\n        </ng-container>\n        <ng-container *ngIf=\"loadComponent === 1\">\n          <app-applicability-criteria (moveNextStep)=\"movenext($event)\"\n                                      (tipsData)=\"tipsDataPassed($event)\"></app-applicability-criteria>\n        </ng-container>\n        <ng-container *ngIf=\"loadComponent === 2\">\n          <app-select-test-stores (moveNextStep)=\"movenext($event)\" [testStore_population]=\"testStoreToggle\"\n                                  (showComprassionView)=\"showComprassionview($event)\"\n                                  (tipsData)=\"tipsDataPassed($event)\"></app-select-test-stores>\n        </ng-container>\n        <ng-container *ngIf=\"loadComponent === 3 || loadComponent === 4 \">\n          <app-control-store-mapping (moveNextStep)=\"movenext($event)\"\n                                     (tipsData)=\"tipsDataPassed($event)\"></app-control-store-mapping>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</perfect-scrollbar>\n<div #footer>\n  <app-footer [currentComponent]=\"loadComponent\" [data]=\"data\"></app-footer>\n</div>\n\n\n\n\n\n\n\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {\n  FormControl,\n  NgForm\n} from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { TooltipPosition } from '@angular/material/tooltip';\nimport { CommonService } from '@app/shared/services/common.service';\nimport { GlobalEventsService } from '@app/shared/services/global-events.service';\nimport { TestConfigService } from '@app/shared/services/testconfig.service';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n  selector: 'app-test-details',\n  templateUrl: './test-details.component.html',\n  styleUrls: ['./test-details.component.scss']\n})\nexport class TestDetailsComponent implements OnInit, AfterViewInit {\n\n  public market: any = [];\n  public plantest: any[] = ['RSV', 'Volume'];\n  public typetest: any[] = ['Frequency Test', 'Duration Test', 'Activity Test', 'Others'];\n  nextStepSubscrption: Subscription = Subscription.EMPTY;\n  testNameSubscrption: Subscription = Subscription.EMPTY;\n  getDateSubscription: Subscription = Subscription.EMPTY;\n  saveStageSubsription: Subscription = Subscription.EMPTY;\n  getDurationOfWeeksSubscription: Subscription = Subscription.EMPTY;\n  testDetailsValue = {\n    TestName: '',\n    TypeTest: '',\n    TargetVariable: '',\n    Description: '',\n    AddDetails: '',\n    TestID: '',\n  };\n  testNameValid = false;\n  typeTestValid = false;\n  targetValid = false;\n  posttestValid = false;\n  pretestValid = false;\n  duplicateTestName = false;\n  positionOptions: TooltipPosition[] = [];\n  position: any;\n  pretestFromDate: any;\n  pretestToDate: any;\n  posttestFromDate: any;\n  posttestToDate: any;\n  pretest: Date[];\n  posttest: Date[];\n  testId: any;\n  user_name: string;\n  userRegion: any;\n  minPreTest: Date;\n  maxPreTest: Date;\n  minPostTest: Date;\n  maxPostTest: Date;\n  saveDraft = false;\n  preDays: number;\n  postDays: number;\n  dateValid: boolean;\n  currentComponent: any;\n  preTestMessage = 'Pre-test weeks should be 4 - 30 weeks';\n  postTestMessage = 'Pre-test weeks should be 4 - 30 weeks';\n  @Output() tipsData: EventEmitter<any> = new EventEmitter<any>();\n  @Output() moveNextStep = new EventEmitter<any>();\n  @ViewChild('testDetails') public testDetails: NgForm;\n  @ViewChild('content') private content: any;\n\n  constructor(\n    private homeservice: TestConfigService,\n    public toastr: ToastrService,\n    public globalService: GlobalEventsService,\n    private commonService: CommonService,\n    private cdr: ChangeDetectorRef\n  ) {\n    this.positionOptions = ['after', 'before', 'above', 'below', 'left', 'right'];\n    this.position = new FormControl(this.positionOptions[0]);\n    this.nextStepSubscrption = this.globalService.subscribe('MOVE_NEXT_TEST_DETAILS', obj => {\n      if (obj.module === 'CREATE_TEST' && obj.currentComponent === 0) {\n        this.saveDraft = obj.saveDraft;\n        this.getValidate();\n      }\n    });\n    this.getDateRange();\n  }\n\n  ngOnInit() {\n\n    this.user_name = localStorage.getItem('username');\n    this.userRegion = sessionStorage.getItem('region');\n    this.currentComponent = this.commonService.getCurrentComponentSubject().data;\n    if (this.currentComponent !== undefined) {\n      this.testDetailsValue.TestName = this.currentComponent.test_name;\n      this.testDetailsValue.TypeTest = this.currentComponent.test_type;\n      this.testDetailsValue.TargetVariable = this.currentComponent.target_variable;\n      this.testDetailsValue.Description = this.currentComponent.desc;\n      this.testDetailsValue.AddDetails = this.currentComponent.additional_det;\n      this.testDetailsValue.TestID = this.currentComponent.test_id;\n      this.testId = this.currentComponent.test_id;\n      setTimeout(() => {\n        this.pretest = [new Date(this.currentComponent.pretest_startdt), new Date(this.currentComponent.pretest_enddt)];\n      });\n      setTimeout(() => {\n        this.posttest = [new Date(this.currentComponent.testwin_startdt), new Date(this.currentComponent.testwin_enddt)];\n      });\n    }\n  }\n\n  ngOnDestroy(){\n    if(!isNullOrUndefined(this.nextStepSubscrption)){\n      this.nextStepSubscrption.unsubscribe();\n      }if(!isNullOrUndefined(this.testNameSubscrption)){\n        this.testNameSubscrption.unsubscribe();\n        }if(!isNullOrUndefined(this.getDateSubscription)){\n          this.getDateSubscription.unsubscribe();\n          }if(!isNullOrUndefined(this.saveStageSubsription)){\n            this.saveStageSubsription.unsubscribe();\n            }if(!isNullOrUndefined(this.getDurationOfWeeksSubscription)){\n              this.getDurationOfWeeksSubscription.unsubscribe();\n              }\n  }\n\n\n  ngAfterViewInit() {\n    if (this.currentComponent === undefined) {\n      this.getValidate();\n    }\n    const tips = ['On average, a user takes 15 mins to design a test and launch it', 'Make sure that your test plan is communicated between your team', 'Your test stores should be communicated in advance before you run a test', 'The user can enter details on the type of test, the target variable to perform the test on, the pre-test window and the post-test window'];\n    setTimeout(() => {\n      this.tipstoParent(tips);\n    });\n    this.cdr.detectChanges();\n  }\n\n  tipstoParent(data: any) {\n    console.log(data, 'data');\n    this.tipsData.emit(data);\n  }\n\n  checkTypeOfTest(event: any) {\n    console.log(event[0].value, 'event');\n    console.log(this.testDetailsValue.TypeTest, 'this.testDetailsValue.TypeTest');\n    if (event[0].value === 'RTM Impact Test' || this.testDetailsValue.TypeTest === 'RTM Impact Test') {\n      this.pretest = [];\n      this.posttest = [];\n      this.preDays = undefined;\n      this.dateValid = false;\n      this.pretestValid = false;\n      this.postDays = undefined;\n      this.posttestValid = false;\n    }\n  }\n\n  checkTestName() {\n\n    this.testDetailsValue.TypeTest = '';\n    this.testDetailsValue.TargetVariable = '';\n    this.testDetailsValue.Description = '';\n    this.testDetailsValue.AddDetails = '';\n    this.pretest = [];\n    this.posttest = [];\n    this.preDays = undefined;\n    this.dateValid = false;\n    this.pretestValid = false;\n    this.postDays = undefined;\n    this.posttestValid = false;\n\n    const data = { testname: this.testDetailsValue.TestName.trim() };\n    if (this.testDetailsValue.TestName.trim() !== '') {\n      this.testNameSubscrption = this.homeservice.getTestName(data).subscribe((apiresponse: any) => {\n        if (apiresponse.status === 'ok') {\n          if (apiresponse.data.length > 0) {\n            this.duplicateTestName = true;\n            this.globalService.publish('ERROR_VALIDATION', {\n              valid: false,\n              message: 'Duplicate Test Name are not Allowed',\n              errorEnable: this.duplicateTestName\n            });\n          } else if (this.duplicateTestName) {\n            this.duplicateTestName = false;\n            this.globalService.publish('ERROR_VALIDATION', {\n              valid: false,\n              message: 'Duplicate Test Name are not Allowed',\n              errorEnable: this.duplicateTestName\n            });\n          }\n        } else {\n          this.duplicateTestName = false;\n        }\n      });\n    } else {\n      this.duplicateTestName = false;\n    }\n    if (this.testDetailsValue.TestName.trim() === '') {\n      this.globalService.publish('ERROR_VALIDATION', {\n        valid: false,\n        message: 'Test Name Field is Required',\n        errorEnable: true\n      });\n    }\n    this.formChange();\n  }\n\n  formChange() {\n    console.log(this.testDetails.valid, 'valid or not');\n    if (this.testDetails.valid && !this.pretestValid && !this.posttestValid\n      && this.pretest && this.posttest && !this.duplicateTestName) {\n      this.globalService.publish('ERROR_VALIDATION', {\n        valid: this.testDetails.valid\n      });\n    } else {\n      this.globalService.publish('TEST_DETAILS_COMPONENT', {\n        valid: false\n      });\n    }\n  }\n\n  getValidate() {\n    if (this.testDetails.valid && !this.duplicateTestName) {\n      const valid = true;\n      const currentComponent = this.commonService.getCurrentComponentSubject().currentComponent;\n      if (valid) {\n        if (currentComponent !== null && this.testDetailsValue.TestName !== '') {\n          this.saveData(currentComponent);\n        } else {\n          this.globalService.publish('ERROR_VALIDATION', {\n            valid: false,\n            errorEnable: false\n          });\n        }\n      }\n    }\n  }\n\n  getDateRange() {\n    this.getDateSubscription = this.commonService.Get_Date().subscribe(response => {\n      if (response.status === 'ok') {\n        this.minPreTest = new Date();\n        this.maxPreTest = new Date();\n        this.minPreTest.setUTCFullYear(parseInt(response.data.startdate));\n        this.minPreTest.setUTCMonth(0);\n        this.minPreTest.setUTCDate(1);\n        this.maxPreTest.setUTCFullYear(parseInt(response.data.enddate));\n        this.maxPreTest.setUTCMonth(11);\n        this.maxPreTest.setUTCDate(31);\n        this.minPostTest = new Date();\n        this.minPostTest.setUTCFullYear(parseInt(response.data.startdate));\n        this.minPostTest.setUTCMonth(0);\n        this.minPostTest.setUTCDate(1);\n      }\n    });\n  }\n\n  onChange(event: any) {\n  }\n\n  pretestDate(event: any) {\n    this.pretestFromDate = event[0].toJSON().split('T')[0];\n    this.pretestToDate = event[1].toJSON().split('T')[0];\n    this.posttest = null;\n    this.postDays = undefined;\n    this.dateValid = false;\n    this.posttestValid = false;\n    const start_year = event[0].getFullYear();\n    const start_month = event[0].getMonth();\n    const start_day = event[0].getDate();\n    const end_year = event[1].getFullYear();\n    const end_month = event[1].getMonth();\n    const end_day = event[1].getDate();\n    this.preDays = undefined;\n    const reqData: any = {\n      start_year,\n      start_month: start_month + 1,\n      start_day,\n      end_year,\n      end_month: end_month + 1,\n      end_day\n    };\n    this.getDurationOfWeeksSubscription = this.homeservice.getDurationOfWeeks(reqData).subscribe((apiResponse: any) => {\n      if (apiResponse.status === 'ok') {\n        this.preDays = parseInt(apiResponse.data.interval);\n        if (this.preDays > 0) {\n          this.dateValid = true;\n        } else {\n          this.dateValid = false;\n          this.preDays = 0;\n        }\n        this.pretestValid = false;\n        if (this.preDays < 4 || this.preDays > 53) {\n          this.pretestValid = true;\n          this.preTestMessage = 'Pre-test weeks should be 4 - 53 weeks';\n        } else {\n          this.pretestValid = false;\n        }\n        this.minPostTest = new Date(this.pretestToDate);\n        const date = new Date(this.incrementDate(this.minPostTest));\n        this.minPostTest.setUTCFullYear(date.getFullYear());\n        this.minPostTest.setUTCMonth(date.getMonth());\n        this.minPostTest.setUTCDate(date.getDate());\n        console.log(date, 'finale update date', this.minPostTest);\n      } else {\n        this.preDays = undefined;\n        this.dateValid = false;\n        this.pretestValid = false;\n      }\n      this.minPostTest = new Date(this.pretestToDate);\n      const date = new Date(this.incrementDate(this.minPostTest));\n      this.minPostTest.setUTCFullYear(date.getFullYear());\n      console.log(date.getMonth(), 'getmonth', this.minPostTest.setUTCMonth(date.getMonth()));\n      this.minPostTest.setMonth(date.getMonth());\n      this.minPostTest.setUTCDate(date.getDate());\n      this.formChange();\n    });\n\n  }\n\n  posttestDate(event: any) {\n    if (event != null) {\n      this.posttestFromDate = event[0].toJSON().split('T')[0];\n      this.posttestToDate = event[1].toJSON().split('T')[0];\n      const start_year = event[0].getFullYear();\n      const start_month = event[0].getMonth();\n      const start_day = event[0].getDate();\n      const end_year = event[1].getFullYear();\n      const end_month = event[1].getMonth();\n      const end_day = event[1].getDate();\n      const reqData: any = {\n        start_year,\n        start_month: start_month + 1,\n        start_day,\n        end_year,\n        end_month: end_month + 1,\n        end_day\n      };\n      this.getDurationOfWeeksSubscription = this.homeservice.getDurationOfWeeks(reqData).subscribe((apiResponse: any) => {\n        if (apiResponse.status === 'ok') {\n          this.postDays = parseInt(apiResponse.data.interval);\n          if (this.postDays > 0) {\n            this.dateValid = true;\n          } else {\n            this.dateValid = false;\n            this.postDays = 0;\n          }\n          this.posttestValid = false;\n          if (this.preDays < 4 || this.preDays > 53) {\n            this.posttestValid = true;\n            this.postTestMessage = 'Post-test weeks should be 4-53 weeks';\n          } else {\n            this.posttestValid = false;\n          }\n        }\n        this.formChange();\n      });\n    }\n  }\n\n  saveData(currentComponent: any) {\n    const data = {\n      test_name: this.testDetailsValue.TestName,\n      test_type: this.testDetailsValue.TypeTest,\n      target_variable: this.testDetailsValue.TargetVariable,\n      desc: this.testDetailsValue.Description,\n      additional_det: this.testDetailsValue.AddDetails,\n      pretest_startdt: this.pretestFromDate,\n      pretest_enddt: this.pretestToDate,\n      testwin_startdt: this.posttestFromDate,\n      testwin_enddt: this.posttestToDate,\n      stepindex: 1,\n      stage_id: 1,\n      test_id: this.testDetailsValue.TestID\n    };\n    localStorage.setItem('TargetVariableValue', this.testDetailsValue.TargetVariable);\n    sessionStorage.setItem('test-type', this.testDetailsValue.TypeTest);\n    this.saveStageSubsription = this.homeservice.Save_stage(data).subscribe((apiresponse: any) => {\n      if (apiresponse.status === 'ok') {\n        if (this.testId === '' || this.testId === undefined || this.testId === 'undefined') {\n          if (this.saveDraft) {\n            this.testDetailsValue.TestID = apiresponse.data;\n          }\n          this.testId = apiresponse.data;\n        } else {\n          this.testId = this.testId;\n        }\n        data.test_id = this.testId;\n        if (!this.saveDraft) {\n          this.moveNextStep.emit({ currentComponent, data });\n        }\n      }\n    });\n  }\n\n  incrementDate(date_str: any) {\n    const date = new Date(date_str);\n    const next_date: any = new Date(date.setDate(date.getDate() + 1));\n    return next_date.getFullYear() + '-' + (next_date.getMonth() + 1) + '-' + next_date.getDate();\n  }\n}\n\n","<mat-card>\n  <mat-card-content class=\"mat-card_content\">\n    <div class=\"header_content\">Enter Test Details</div>\n    <hr/>\n    <form #testDetails=\"ngForm\" (change)=\"formChange()\"  autocomplete=\"on\">\n      <div class=\"row\">\n        <div class=\"col-md-4 col-lg-4 col-sm-12\">\n          <div class=\"form-group\">\n            <label id=\"lbl_test_details_test_name\" class=\"label_change\">Enter Test Name <span class=\"required_font\"> *\n              </span><img class=\"infoicon\" matTooltip=\"Enter the Test Name Here\" [matTooltipPosition]=\"position.value\"\n                          src=\"assets/images/information.png\" alt=\"sort\"/></label>\n            <input type=\"text\" autocomplete=\"off\" class=\"form-control\" id=\"txt_test_details_test_name\"\n                   [(ngModel)]=\"testDetailsValue.TestName\" name=\"TestName\" #TestName=\"ngModel\"\n                   (change)=\"checkTestName()\" autocomplete=\"off\"\n                   placeholder=\"Enter Test Name\" maxlength=\"255\" required>\n            <ng-container>\n              <div class=\"testname_err_msg\" *ngIf=\"duplicateTestName\">Duplicate Test Name not Allowed</div>\n              <div class=\"testname_err_msg\" *ngIf=\"testNameValid\">Please Enter Test Name</div>\n            </ng-container>\n          </div>\n        </div>\n        <div class=\"col-md-4 col-lg-4 col-sm-12\">\n          <div class=\"form-group\">\n            <label id=\"lbl_test_details_typetext\" class=\"label_change\">Select Type of Test <span class=\"required_font\"> *\n              </span><img class=\"infoicon\" matTooltip=\"Select Type of Test Here\" [matTooltipPosition]=\"position.value\"\n                          src=\"assets/images/information.png\" alt=\"sort\"/></label>\n            <ngx-select\n              [(ngModel)]=\"testDetailsValue.TypeTest\"\n              [allowClear]=\"false\" placeholder=\"Select Dropdown\"\n              [items]=\"typetest\" required #TypeTest=\"ngModel\" name=\"TypeTest\" (selectionChanges)=\"checkTypeOfTest($event)\">\n            </ngx-select>\n            <ng-container>\n              <div class=\"testname_err_msg\" *ngIf=\"typeTestValid\">Please Select Type Test</div>\n            </ng-container>\n          </div>\n        </div>\n        <div class=\"col-md-4 col-lg-4 col-sm-12\">\n          <div class=\"form-group\">\n            <label id=\"lbl_test_details_target_variable\" class=\"label_change\">Target Variable <span\n              class=\"required_font\"> *\n              </span><img class=\"infoicon\" matTooltip=\"Select Target Variable Here\"\n                          [matTooltipPosition]=\"position.value\" src=\"assets/images/information.png\" alt=\"sort\"/></label>\n            <ngx-select\n              [(ngModel)]=\"testDetailsValue.TargetVariable\"\n              [allowClear]=\"false\" placeholder=\"Select Dropdown\"\n              [items]=\"plantest\" required #TargetVariable=\"ngModel\" name=\"TargetVariable\">\n            </ngx-select>\n            <ng-container>\n              <div class=\"testname_err_msg\" *ngIf=\"targetValid\">Please Select Target Variable</div>\n            </ng-container>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-4 col-lg-4 col-sm-12\">\n          <label id=\"lbl_test_details_brief_description\" class=\"label_change\">Enter Brief Description</label>\n          <textarea type=\"text\" id=\"txt_test_details_brief_description\" class=\"md-textarea form-control\"\n                    [(ngModel)]=\"testDetailsValue.Description\" name=\"Description\" placeholder=\"Enter Description\"\n                    maxlength=\"255\">\n            </textarea>\n        </div>\n        <div class=\"col-md-8 col-lg-8 col-sm-12\">\n          <label id=\"lbl_test_details_details_description\" class=\"label_change\">Enter Additional Details</label>\n          <textarea type=\"text\" id=\"txt_test_details_details_description\" class=\"md-textarea form-control\"\n                    [(ngModel)]=\"testDetailsValue.AddDetails\" name=\"AddDetails\"\n                    placeholder=\"Enter Additional Details\"  maxlength=\"255\"></textarea>\n        </div>\n      </div>\n      <div class=\"row pt-3\">\n        <div class=\"col-md-4 col-lg-4 col-sm-12\">\n          <div class=\"form-group\">\n            <label id=\"lbl_test_details_pre_test\" class=\"label_change\">Pre-Test Window<span class=\"required_font\"> *\n              </span><img class=\"infoicon\" matTooltip=\"Select Pre Test Date\" [matTooltipPosition]=\"position.value\"\n                          src=\"assets/images/information.png\" alt=\"sort\"/></label>\n            <input id=\"txt_test_details_pre_test\" placeholder=\"From - To\" (bsValueChange)=\"pretestDate($event)\"\n                   bsDaterangepicker triggers=\"keydown click\" class=\"form-control\" [(bsValue)]=\"pretest\"\n                   autocomplete=\"off\"\n                   [minDate]=\"minPreTest\" [maxDate]=\"maxPreTest\"\n                   [bsConfig]=\"{ containerClass : 'theme-default', rangeInputFormat: 'DD MMM, YYYY' }\" required readonly>\n            <div *ngIf=\"preDays\" class=\"pretest-weeks\">{{preDays}} Weeks</div>\n            <ng-container>\n              <div class=\"testname_err_msg\" *ngIf=\"pretestValid\">{{preTestMessage}}</div>\n            </ng-container>\n          </div>\n        </div>\n        <div class=\"col-md-4 col-lg-4 col-sm-12\">\n          <div class=\"form-group\">\n            <label id=\"lbl_test_details_post_test\" class=\"label_change\">Post-Test Window<span class=\"required_font\"> *\n              </span><img class=\"infoicon\" matTooltip=\"Select Post Test Date\" [matTooltipPosition]=\"position.value\"\n                          src=\"assets/images/information.png\" alt=\"sort\"/></label>\n            <input id=\"txt_test_details_post_test\" placeholder=\"From - To\"\n                   (bsValueChange)=\"posttestDate($event)\" bsDaterangepicker triggers=\"keydown click\"\n                   class=\"form-control\" [(bsValue)]=\"posttest\"\n                   [minDate]=\"minPostTest\" [maxDate]=\"maxPostTest\" autocomplete=\"off\" name=\"posttest\"\n                   [bsConfig]=\"{ containerClass : 'theme-default', rangeInputFormat: 'DD MMM, YYYY'}\" required readonly>\n            <div *ngIf=\"postDays\" class=\"pretest-weeks\">{{postDays}} Weeks</div>\n            <ng-container>\n              <div class=\"testname_err_msg\" *ngIf=\"posttestValid\">{{postTestMessage}}</div>\n            </ng-container>\n          </div>\n        </div>\n      </div>\n    </form>\n  </mat-card-content>\n</mat-card>\n","import {\n  Component,\n  EventEmitter,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {CommonService} from '@app/shared/services/common.service';\nimport {GlobalEventsService} from '@app/shared/services/global-events.service';\nimport {ToastrService} from 'ngx-toastr';\nimport {Subscription} from 'rxjs';\nconst config = require('../../../assets/region/config-fields.json');\nimport {TooltipPosition} from '@angular/material/tooltip';\nimport {FormControl} from '@angular/forms';\nimport {TestConfigService} from '@app/shared/services/testconfig.service';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n  selector: 'app-applicability-criteria',\n  templateUrl: './applicability-criteria.component.html',\n  styleUrls: ['./applicability-criteria.component.scss']\n})\nexport class ApplicabilityCriteriaComponent implements OnInit {\n  nextStepSubscrption: Subscription = Subscription.EMPTY;\n  currentComponent: any;\n  data: any;\n  selectedRegion = '';\n  user_name: string;\n  testApplicabilityFields: any;\n  currencySymbol: any;\n  isinSqFt: any = '';\n  userRegion: any;\n  tableName: any = '';\n  regionNames: any = [];\n  banner: any = [];\n  segment: any = [];\n  territory: any = [];\n  storegrid: any = [];\n  bannershow: boolean;\n  segmentshow: boolean;\n  territoryshow: boolean;\n  storegridshow: boolean;\n  categoryshow: boolean;\n  Banner: any;\n  Segment: any;\n  Territory: any;\n  StoreGrid: any;\n  Category: any;\n  validForm = false;\n  strfeat1: any = '1';\n  strfeat2: any;\n  strfeatmand = true;\n  breakenlist: any;\n  cost: any;\n  rsv_estimate: any;\n  req_rsv = true;\n  req_cost = true;\n  dropdownSettingsbanner = {};\n  positionOptions: TooltipPosition[] = ['after', 'before', 'above', 'below', 'left', 'right'];\n  position = new FormControl(this.positionOptions[0]);\n  saveDraft = false;\n  rtmImpact = false;\n  lockStoreFeature = false;\n  @Output('moveNextStep') moveNextStep = new EventEmitter();\n  @Output() tipsData: EventEmitter<any> = new EventEmitter<any>();\n  disableCustomerChain = false;\n  filterData: any = [];\n  constructor(\n    private homeservice: TestConfigService,\n    public toastr: ToastrService,\n    private commonService: CommonService,\n    public globalService: GlobalEventsService,\n  ) {\n    const componentDetails = this.commonService.getCurrentComponentSubject();\n    this.currentComponent = componentDetails.currentComponent;\n    this.data = componentDetails.data;\n    this.nextStepSubscrption = this.globalService.subscribe('MOVE_NEXT_APPLICABILITY_CRITERIA', obj => {\n      if (obj.module === 'CREATE_TEST' && obj.currentComponent === 1) {\n        this.saveDraft = obj.saveDraft;\n        this.validateDropDowns();\n        this.saveData(obj.currentComponent);\n      }\n    });\n    this.dropdownSettingsbanner = {\n      allowSearchFilter: true,\n      clearSearchFilter: true,\n      itemsShowLimit: 1,\n    };\n  }\n\n  ngOnInit() {\n    this.Get_Dropdownvals();\n    this.selectedRegion = sessionStorage.getItem('region');\n    this.user_name = localStorage.getItem('username');\n    this.userRegion = sessionStorage.getItem('region');\n\n    if (sessionStorage.getItem('test-type') === 'RTM Impact Test') {\n      this.lockStoreFeature = true;\n      this.rtmImpact = true;\n      if (this.userRegion === 'DEMO') {\n        this.strfeat2 = '0';\n      } else {\n        this.strfeat2 = '1';\n      }\n    }\n\n\n    if (localStorage.getItem('dropdown_value') !== undefined && localStorage.getItem('dropdown_value') != null && localStorage.getItem('dropdown_value') != 'null') {\n      this.regionNames = JSON.parse(localStorage.getItem('dropdown_value'));\n    }\n\n    if (config[this.userRegion]) {\n      console.log(config[this.userRegion]);\n      this.testApplicabilityFields = config[this.userRegion].fields;\n      this.currencySymbol = config[this.userRegion]['currency'];\n      this.isinSqFt = config[this.userRegion]['OutletSurfaceAreaUnit'];\n      this.tableName = config[this.userRegion];\n    }\n    this.validateDropDowns();\n    this.currentComponent = this.commonService.getCurrentComponentSubject().data;\n    if (this.currentComponent !== undefined) {\n      this.Segment = this.currentComponent.segment;\n      this.Banner = this.currentComponent.banner;\n      this.Territory = this.currentComponent.territory;\n      this.StoreGrid = this.currentComponent.store_grid;\n      this.Category = this.currentComponent.category;\n      if (this.currentComponent.strfeature2 !== undefined) {\n        this.strfeat2 = this.currentComponent.strfeature2.toString();\n      }\n      this.cost = this.currentComponent.cost;\n      if (this.currentComponent.hasOwnProperty('rsv_estimate')) {\n        this.rsv_estimate = (Number(parseFloat((this.currentComponent.rsv_estimate))/1000000));\n      }\n      this.breakenlist = this.currentComponent.break_even_lift;\n    }\n  }\n\n  ngOnDestroy(){\n    if(!isNullOrUndefined(this.nextStepSubscrption)){\n      this.nextStepSubscrption.unsubscribe();\n      }\n  }\n\n  ngAfterViewInit(){\n    let tips: string[];\n    tips = ['The user should select/filter for stores belonging to a particular channel, territory, segment and store grid (This decides the population from which the test stores should be sampled)', 'The user should enter the estimated cost impact and the annual rsv estimate to calculate the break even lift%', 'Note: If the cost impact is negative (Reduction in cost), please enter the cost impact as a negative value.'];\n    setTimeout(() => {\n    this.tipstoParent(tips);\n    });\n  }\n\n  tipstoParent(data: any) {\n    this.tipsData.emit(data);\n  }\n\n  saveData(currentComponent: any) {\n    if (this.selectedRegion === 'DEMO') {\n      this.Category = [];\n    }\n    if (this.validForm === true) {\n      this.data.stepindex = 2;\n      this.data.banner = this.Banner;\n      this.data.segment = this.Segment;\n      this.data.territory = this.Territory;\n      this.data.store_grid = this.StoreGrid;\n      this.data.category = this.Category;\n      this.data.strfeature1 = this.strfeat1;\n      this.data.strfeature2 = this.strfeat2;\n      this.data.break_even_lift = this.breakenlist;\n      this.data.cost = this.cost;\n      this.data.rsv_estimate = this.rsv_estimate;\n      this.data.is_checkconf = false;\n      this.data.is_checkmarg = false;\n      this.data.is_checknum = false;\n      this.data.rsv_estimate = (Math.round(this.data.rsv_estimate* 1000000));\n      console.log(this.data, 'RsVEstimate');\n      this.homeservice.Save_stage(this.data).subscribe((apiResponse: any) => {\n        if (apiResponse.status === 'ok') {\n          if(!this.saveDraft && this.rtmImpact === true) {\n            this.getDataValiditypoints(currentComponent);\n          } else {\n            if (!this.saveDraft) {\n              this.moveNextStep.emit({currentComponent, data: this.data});\n            }\n          }\n        }\n      });\n    }\n  }\n\n  Get_Dropdownvals() {\n    this.homeservice.Get_Dropdownvals().subscribe((apiresponse: any) => {\n      this.banner = [];\n      this.segment = [];\n      this.territory = [];\n      if (apiresponse.status === 'ok') {\n          apiresponse.data['territory'].sort(this.sortNumStr);\n          this.banner = apiresponse.data['banner'];\n          // this.segment = apiresponse.data['segment'];\n          const temp_territory = apiresponse.data['territory'];\n          this.territory = [];\n          for (let i = temp_territory.length - 1; i >= 0; i--) {\n            this.territory.push(temp_territory[i].toString());\n          }\n          this.territory = this.territory.sort((n1: any, n2: any) => n1 - n2);\n          this.storegrid = apiresponse.data['store_grid'];\n          this.filterData = apiresponse.data['filterData'];\n          this.disableCustomerChain = true;\n          this.filterCall();\n      }\n    });\n  }\n\n  sortNumStr(m: any, n: any) {\n    return m - n;\n  }\n\n\n  onMetricSelectAll(event: any) {\n    // console.log(event);\n  }\n\n  BannerShow(event: any) {\n    if (event !== undefined) {\n      if (event.length === 0) {\n        this.bannershow = true;\n      } else {\n        this.bannershow = false;\n      }\n      this.validateDropDowns();\n    }\n  }\n\n  filterCall() {\n    if (this.filterData.length >0) {\n      setTimeout(()=>{\n        this.filterCustomerChain();\n      }, 100);\n    }\n  }\n\n  SegmentShow(event: any) {\n    if (event !== undefined) {\n      if (event.length === 0) {\n        this.segmentshow = true;\n      } else {\n        this.segmentshow = false;\n      }\n      this.validateDropDowns();\n    }\n  }\n\n  TerritoryShow(event: any) {\n    if (event !== undefined) {\n      if (event.length === 0) {\n        this.territoryshow = true;\n      } else {\n        this.territoryshow = false;\n      }\n      this.validateDropDowns();\n    }\n  }\n\n  StoreGridShow(event: any) {\n    if (event !== undefined) {\n      if (event.length === 0) {\n        this.storegridshow = true;\n      } else {\n        this.storegridshow = false;\n      }\n      this.validateDropDowns();\n    }\n  }\n\n  CategoryShow(event: any) {\n    if (event !== undefined) {\n      if (event.length === 0) {\n        this.categoryshow = true;\n      } else {\n        this.categoryshow = false;\n      }\n      this.validateDropDowns();\n    }\n  }\n\n  validateDropDowns(): void {\n    if (this.bannershow !== undefined && this.territory !== undefined\n      && this.segmentshow !== undefined && this.storegridshow !== undefined\n      && !this.bannershow && this.territoryshow !== undefined\n      && !this.territoryshow && !this.segmentshow && !this.storegridshow\n      && ((this.rsv_estimate !== undefined && this.rsv_estimate !== '') && (this.cost !== undefined && this.cost !== '') || this.rtmImpact)\n      && this.strfeat2 !== undefined) {\n      this.globalService.publish('ERROR_VALIDATION', {\n        valid: true\n      });\n      // this.strfeatmand = true;\n      this.validForm = true;\n    } else {\n      this.strfeatmand = false;\n      this.globalService.publish('ERROR_VALIDATION', {\n        valid: false,\n        message: 'Please fill the required fields',\n        errorEnable: true\n      });\n    }\n  }\n\n  CurrentTest(value: any) {\n  }\n\n  onKeyup(event: any) {\n    if (this.rsv_estimate !== '' || this.rsv_estimate != null) {\n      this.req_rsv = true;\n    }\n    if ((this.rsv_estimate !== undefined && this.rsv_estimate !== '') && (this.cost !== undefined && this.cost !== '')) {\n      this.CalcBreakEvenlift();\n    }\n    this.validateDropDowns();\n  }\n\n  CalcBreakEvenlift() {\n    if (this.selectedRegion === 'DEMO') {\n      this.categoryshow = false;\n      this.Category = [];\n    }\n    if (this.selectedRegion === 'DEMO' && ((this.Banner === undefined || this.Banner.length === 0) || (this.StoreGrid === undefined || this.StoreGrid.length === 0) || (this.Territory === undefined || this.Territory.length === 0) || (this.Segment === undefined || this.Segment.length === 0))) {\n      console.log('DEMO');\n      this.breakenlist = '';\n    }else{\n      console.log('else');\n      console.log(this.Banner,this.StoreGrid,this.Territory,this.Segment,this.Category);\n    const dataTemp: any = {\n      banners: this.Banner,\n      segments: this.StoreGrid,\n      territories: this.Territory,\n      store_segments: this.Segment,\n      categories: this.Category,\n      no_of_teststores: 35,\n      rsv_estimate: this.rsv_estimate * 1000000,\n      cost: JSON.parse(this.cost)\n    };\n    console.log(dataTemp, 'dataTemp');\n    this.homeservice.CalculateBreakEven(dataTemp).subscribe((apiresponse: any) => {\n      this.breakenlist = apiresponse.data.toFixed(2);\n    });\n  }\n  }\n\n  onKeyup1(event: any) {\n    if (this.cost === '' || this.cost == null || this.cost === 0) {\n      this.req_cost = true;\n    }\n    if ((this.rsv_estimate !== undefined && this.rsv_estimate !== '') && (this.cost !== undefined && this.cost !== '')) {\n      this.CalcBreakEvenlift();\n    }\n    this.validateDropDowns();\n  }\n\n  filterCustomerChain() {\n    if (this.userRegion === 'DEMO') {\n      const dataArray = this.Banner;\n      const segementArray: any = [];\n      if (dataArray !== undefined && dataArray.length > 0) {\n        this.filterData.forEach((x: any)=>{\n          const findIndex = dataArray.findIndex((y: any)=> y === x['Customer_Group']);\n          if (findIndex !== -1) {\n            segementArray.push(x['Customer_Chain']);\n          }\n        });\n      }\n      console.log(segementArray, 'segmentArray');\n      this.segment = segementArray;\n      if(segementArray.length === 0) {\n        this.disableCustomerChain = true;\n      } else{\n        this.disableCustomerChain = false;\n      }\n      console.log(this.Segment, 'segement');\n      if (!isNullOrUndefined(this.Segment)) {\n          const check = this.segment.some((r: any)=> this.Segment.includes(r));\n          if (!check) {\n            this.Segment =[];\n            this.segmentshow = false;\n          }\n        const arraySegment = this.Segment.filter((val: any) => this.segment.includes(val));\n        console.log(arraySegment);\n        this.Segment = arraySegment;\n      }\n    }\n  }\n\n  getDataValiditypoints(currentComponent: any) {\n    console.log(this.data, 'dataPoins');\n    const data = {\n      test_id: this.data.test_id,\n      prewindow_start: this.data.pretest_startdt,\n      prewindow_end: this.data.pretest_enddt,\n      postwindow_start: this.data.testwin_startdt,\n      postwindow_end: this.data.testwin_enddt\n    };\n    let validPoints;\n    this.homeservice.dataValidaityPoints(data).subscribe((apiresponse: any) => {\n      console.log(apiresponse, 'Apiresponse');\n      if (apiresponse.status === 'ok'){\n        if (apiresponse.data === 1){\n          if (!this.saveDraft) {\n            this.moveNextStep.emit({currentComponent, data: this.data});\n          }\n        }\n      } else if (apiresponse.status === 'not_ok'){\n        this.toastr.warning(apiresponse.data);\n      }\n    });\n  }\n}\n","<mat-card class=\"testcard\">\n  <mat-card-content class=\"mat-card_content\">\n    <div class=\"header_content\">Applicability Criteria</div>\n    <hr/>\n    <div class=\"row\">\n      <div class=\"col-md-4 col-lg-4 col-sm-12\">\n        <div class=\"form-group\" *ngIf=\"testApplicabilityFields[0].is_show\">\n          <label class=\"label_change\">Select {{testApplicabilityFields[0].banner}}</label><span\n          style=\"color: red;font-size: 18px;\"> * </span>\n          <ng-multiselect-dropdown\n            id=\"bannerDropdown\"\n            [placeholder]=\"'---Select---'\"\n            [data]=\"banner\"\n            (ngModelChange)=\"BannerShow($event);filterCall()\"\n            (onSelectAll)=\"onMetricSelectAll($event)\"\n            [settings]=\"dropdownSettingsbanner\"\n            [(ngModel)]=\"Banner\"\n            class=\"bannerDropdown\"\n          >\n          </ng-multiselect-dropdown>\n          <ng-container *ngIf=\"bannershow\">\n            <span style=\"color: red;\">Please Select {{testApplicabilityFields[0].banner}}</span>\n          </ng-container>\n        </div>\n      </div>\n      <div class=\"col-md-4 col-lg-4 col-sm-12\">\n        <div class=\"form-group\" *ngIf=\"testApplicabilityFields[2].is_show\">\n          <label class=\"label_change\">Select {{testApplicabilityFields[2].territory}}</label><span\n          style=\"color: red;font-size: 18px;\"> * </span>\n          <ng-multiselect-dropdown\n            id=\"territoryDropdown\"\n            [placeholder]=\"'---Select---'\"\n            [data]=\"territory\"\n            (ngModelChange)=\"TerritoryShow($event)\"\n            (onSelectAll)=\"onMetricSelectAll($event)\"\n            [settings]=\"dropdownSettingsbanner\"\n            [(ngModel)]=\"Territory\"\n            style=\"border-radius: 0;\"\n          >\n          </ng-multiselect-dropdown>\n          <ng-container *ngIf=\"territoryshow\">\n            <span style=\"color: red;\">Please Select {{testApplicabilityFields[2].territory}}</span>\n          </ng-container>\n        </div>\n      </div>\n      <div class=\"col-md-4 col-lg-4 col-sm-12\">\n        <div class=\"form-group\" *ngIf=\"testApplicabilityFields[1].is_show\">\n          <label class=\"label_change\">Select {{testApplicabilityFields[1].segment}}</label><span\n          style=\"color: red;font-size: 18px;\"> * </span>\n          <img class=\"infoicon\" *ngIf=\"disableCustomerChain\" matTooltip=\"Please select customer group\" [matTooltipPosition]=\"position.value\"\n          src=\"assets/images/information.png\" alt=\"sort\"/>\n          <ng-multiselect-dropdown\n            id=\"segmentDropdown\"\n            [placeholder]=\"'---Select---'\"\n            [data]=\"segment\"\n            (ngModelChange)=\"SegmentShow($event)\"\n            (onSelectAll)=\"onMetricSelectAll($event)\"\n            [settings]=\"dropdownSettingsbanner\"\n            [(ngModel)]=\"Segment\"\n            [disabled]=\"disableCustomerChain\"\n            style=\"border-radius: 0;\"\n          >\n          </ng-multiselect-dropdown>\n          <ng-container *ngIf=\"segmentshow\">\n            <span style=\"color: red;\">Please Select {{testApplicabilityFields[1].segment}}</span>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-4 col-lg-4 col-sm-12\">\n        <div class=\"form-group\" *ngIf=\"testApplicabilityFields[3].is_show\">\n          <label class=\"label_change\">Select {{testApplicabilityFields[3].storegrid}}</label><span\n          style=\"color: red;font-size: 18px;\"> * </span>\n          <ng-multiselect-dropdown\n            id=\"storegridDropdown\"\n            [placeholder]=\"'---Select---'\"\n            [data]=\"storegrid\"\n            (ngModelChange)=\"StoreGridShow($event)\"\n            (onSelectAll)=\"onMetricSelectAll($event)\"\n            [settings]=\"dropdownSettingsbanner\"\n            [(ngModel)]=\"StoreGrid\"\n            style=\"border-radius: 0;\"\n          >\n          </ng-multiselect-dropdown>\n          <ng-container *ngIf=\"storegridshow\">\n            <span style=\"color: red;\">Please Select {{testApplicabilityFields[3].storegrid}}</span>\n          </ng-container>\n        </div>\n      </div>\n      <div class=\"col-md-4 col-lg-4 col-sm-12\">\n        <div class=\"form-group\" *ngIf=\"testApplicabilityFields[4].is_show\">\n          <label class=\"label_change\">Select {{testApplicabilityFields[4].category}}</label><span\n          style=\"color: red;font-size: 18px;\"> * </span>\n          <ng-multiselect-dropdown\n            id=\"categoryDropdown\"\n            [placeholder]=\"'---Select---'\"\n            [data]=\"category\"\n            (ngModelChange)=\"CategoryShow($event)\"\n            (onSelectAll)=\"onMetricSelectAll($event)\"\n            [settings]=\"dropdownSettingsbanner\"\n            [(ngModel)]=\"Category\"\n            style=\"border-radius: 0;\"\n          >\n          </ng-multiselect-dropdown>\n          <ng-container *ngIf=\"categoryshow\">\n            <span style=\"color: red;\">Please Select {{testApplicabilityFields[4].category}}</span>\n          </ng-container>\n        </div>\n      </div>\n      <div class=\"col-md-4 col-lg-4 col-sm-12\">\n      </div>\n    </div>\n    <div class=\"header_content pt-2\">Test Store Feature Selection</div>\n    <hr/>\n    <div class=\"row\">\n      <div class=\"col-md-6 col-lg-6 col-sm-12\">\n        <label class=\"label_change\">Store Feature - 1<span class=\"color_red\"></span></label>\n        <div>\n          <mat-radio-group aria-label=\"Select an option\" [(ngModel)]=\"strfeat1\">\n            <mat-radio-button value=\"1\" [checked]=\"true\"\n                              (change)=\"CurrentTest($event)\">{{testApplicabilityFields[0].banner}}</mat-radio-button>\n          </mat-radio-group>\n        </div>\n      </div>\n      <div class=\"col-md-6 col-lg-6 col-sm-12\">\n        <label class=\"label_change\">Store Feature - 2 <span class=\"color_red\">*</span></label>\n        <div>\n          <mat-radio-group aria-label=\"Select an option\" [(ngModel)]=\"strfeat2\" (change)=\"validateDropDowns()\" [disabled]=\"lockStoreFeature\">\n            <mat-radio-button *ngIf=\"userRegion !== 'DEMO'\" value=\"1\"\n                              [checked]=\"false\">{{testApplicabilityFields[3].storegrid}}</mat-radio-button>\n            <mat-radio-button value=\"0\" [checked]=\"false\" class=\"ml-2\"\n                              (change)=\"CurrentTest($event)\">{{testApplicabilityFields[1].segment}}</mat-radio-button>\n          </mat-radio-group>\n        </div>\n      </div>\n    </div>\n    <div class=\"header_content pt-2\">Break Even Lift Calculation</div>\n    <hr/>\n    <div class=\"row\">\n      <div class=\"col-md-4 col-lg-4 col-sm-12\">\n        <div class=\"form-group\">\n          <label class=\"label_change\">Estimated Cost Impact ({{currencySymbol}})\n            <span style=\"color: red;font-size: 18px;\"> * </span><img class=\"infoicon\"\n                                                                     matTooltip=\"If the test scenario results in a increase in cost of say $100, enter as +100.  If the test scenario results in a savings in cost of say $100, enter as -100.\"\n                                                                     [matTooltipPosition]=\"position.value\"\n                                                                     src=\"assets/images/information.png\"\n                                                                     alt=\"sort\"/></label>\n          <input class=\"form-control bklift_input_field\" [(ngModel)]=\"cost\" type=\"number\" (keyup)=\"onKeyup1($event)\" [disabled]=\"rtmImpact\"/>\n          <p [hidden]=\"req_cost\" style=\"color:red;margin-left: 3.3vw\">Estimated Cost Impact Required</p>\n        </div>\n      </div>\n      <div class=\"col-md-4 col-lg-4 col-sm-12\">\n        <div class=\"form-group\">\n          <label class=\"label_change\">Annual RSV ({{currencySymbol}} in million)\n            <span style=\"color: red;font-size: 18px;\"> * </span><img class=\"infoicon\"\n                                                                     matTooltip=\"Enter the estimated / actuals of annual RSV of current / previous year\"\n                                                                     [matTooltipPosition]=\"position.value\"\n                                                                     src=\"assets/images/information.png\"\n                                                                     alt=\"sort\"/></label>\n          <input class=\"form-control bklift_input_field\" [(ngModel)]=\"rsv_estimate\" type=\"number\"\n                 (keyup)=\"onKeyup($event)\" [disabled]=\"rtmImpact\"/>\n          <p [hidden]=\"req_rsv\" style=\"color:red;margin-left: 3.3vw\">Current Annual RSV Required</p>\n        </div>\n      </div>\n      <div class=\"col-md-4 col-lg-4 col-sm-12\">\n        <div class=\"form-group\">\n          <label class=\"label_change\">Breakeven Lift (%)\n            <span style=\"color: red;font-size: 18px;\"></span><img class=\"infoicon\"\n                                                                  matTooltip=\"Minimum lift/drop in sales to offset the increase/savings in cost, keeping the earnings constant.\"\n                                                                  [matTooltipPosition]=\"position.value\"\n                                                                  src=\"assets/images/information.png\"\n                                                                  alt=\"sort\"/></label>\n          <input class=\"form-control borderradnone bklift_input_field\" [disabled]=\"rtmImpact\" [(ngModel)]=\"breakenlist\"\n                 type=\"number\"/>\n        </div>\n      </div>\n    </div>\n  </mat-card-content>\n</mat-card>\n","import {SelectionModel} from '@angular/cdk/collections';\nimport {\n  Component,\n  OnInit,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  ChangeDetectorRef,\n  ViewChild,\n  AfterViewInit,\n  TemplateRef\n} from '@angular/core';\nimport {GlobalEventsService} from '@app/shared/services/global-events.service';\nimport {Subscription} from 'rxjs';\nconst config = require('../../../assets/region/config-fields.json');\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Sort} from '@angular/material/sort';\nimport {ToastrService} from 'ngx-toastr';\nimport * as moment from 'moment';\nimport {CommonService} from '@app/shared/services/common.service';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {Router} from '@angular/router';\nimport * as Highcharts from 'highcharts';\nimport HC_exporting from 'highcharts/modules/exporting';\nimport {SidenavService} from '@app/shared/services/sidenav.service';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {MatDialog} from '@angular/material/dialog';\nHC_exporting(Highcharts);\ndeclare let require: any;\nconst noData = require('highcharts/modules/no-data-to-display');\nnoData(Highcharts);\nconst More = require('highcharts/highcharts-more');\nimport {isNullOrUndefined} from 'util';\nimport {TestMeasureService} from '@app/shared/services/testmeasure.service';\nimport {ControlStoreService} from '@app/shared/services/controlstore.service';\nimport { TestConfigService } from '@app/shared/services/testconfig.service';\n\ninterface ControlStore {\n  test_storeno: any;\n  control_mapped: any;\n  test_storedetails: any;\n  select: any;\n  similar_value: any;\n  corr_value: any;\n  store_segment: any;\n  avg_duration: any;\n  act_perform: any;\n  others: any;\n}\n\ninterface SelectTest {\n  test_name: string;\n  status: string;\n  details: string;\n  test_window: string;\n  Created: string;\n  Modified: string;\n}\n\nexport interface AdvSettingvalues {\n  TestStore: any;\n}\n\n@Component({\n  selector: 'app-control-store-mapping',\n  templateUrl: './control-store-mapping.component.html',\n  styleUrls: ['./control-store-mapping.component.scss']\n})\nexport class ControlStoreMappingComponent implements OnInit, OnDestroy, AfterViewInit {\n  defaultChecked = '1';\n  selectedFeaturescount = 0;\n  testApplicabilityFields: any;\n  userRegion: any = '';\n  matchingCriteria: any = [];\n  targetVariableValue = 'RSV';\n  control_pertest = 1;\n  @Output('moveNextStep') moveNextStep = new EventEmitter();\n  @Output() tipsData: EventEmitter<any> = new EventEmitter<any>();\n  showControlStores = false;\n  controlStoreView = false;\n  generateSubscrption: Subscription = Subscription.EMPTY;\n  controlstoredata: any = [];\n  SelectedTestStores: any = [];\n  selectedBanner: any = [];\n  selectedSegments: any = [];\n  selectedStoreSegment: any = [];\n  selectedTerritory: any = [];\n  selectedCategory: any = [];\n  ELEMENT_DATA1: any = [];\n  ControlStoreTable = new MatTableDataSource<any>(this.ELEMENT_DATA1);\n  testStoreDataCount: any = 0;\n  selection1 = new SelectionModel<ControlStore>(true, []);\n  selselection = new SelectionModel<SelectTest>(true, []);\n  selection = new SelectionModel<AdvSettingvalues>(true, []);\n  uncheckedItems: any = [];\n  freeze_compute = false;\n  data: any;\n  ELEMENT_DATA2: any = [];\n  testAvailabilityDataCount: any = 0;\n  SelectTestTable: MatTableDataSource<any>;\n  currentComponent: any;\n  displayedColumnsControlStore: string[] = [\n    'select',\n    'test_storeno',\n    'control_mapped',\n    'test_storedetails',\n    'similar_value',\n    'corr_value',\n    'store_segment',\n    'correlation',\n    // 'avg_duration',\n    // 'act_perform',\n    'others'\n  ];\n  displayedColumnsControlStoreDEMO: string[] = [\n    'select',\n    'test_storeno',\n    'control_mapped',\n    // 'test_storedetails',\n    'similar_value',\n    'corr_value',\n    // 'store_segment',\n    'correlation',\n    // 'avg_duration',\n    // 'act_perform',\n    'others'\n  ];\n  confGrid: string[] = [\n    'select',\n    'test_storeno',\n    'control_mapped',\n    'test_storedetails',\n    'similar_value',\n    'corr_value',\n    'store_segment',\n    'correlation',\n    // 'avg_duration',\n    // 'act_perform',\n    'others'\n  ];\n  displayedColumnsTestStore: string[] = [\n    'select',\n    'test_name',\n    // 'status',\n    'details',\n    'test_window',\n    'Created',\n    'Modified'\n  ];\n  tableName: any = '';\n  isTableData: any = false;\n\n  csv_pop: any;\n  csv_popstd: any;\n  csv_poptestmean: any;\n  csv_testdev: any;\n  influence_pop: any;\n  influence_popstd: any;\n  influence_poptestmean: any;\n  influence_testdev: any;\n  out_pop: any;\n  out_popstd: any;\n  out_poptestmean: any;\n  out_testdev: any;\n  shelf_cat_pop: any;\n  shelf_cat_popstd: any;\n  shelf_cat_poptestmean: any;\n  shelf_cat_testdev: any;\n  shelf_choc_pop: any;\n  shelf_choc_popstd: any;\n  shelf_choc_poptestmean: any;\n  shelf_choc_testdev: any;\n  shelf_dog_poptestmean: any = '';\n  shelf_dog_pop: any = '';\n  shelf_dog_popstd: any = '';\n  shelf_dog_testdev: any = '';\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  breakeven_list: any = 0;\n  isDateValid = true;\n  recomputeSubscription: Subscription = Subscription.EMPTY;\n  initiateSubscription: Subscription = Subscription.EMPTY;\n  comprasionSubscription: Subscription = Subscription.EMPTY;\n  saveasDraft = false;\n  avg_test_control: any;\n  sales_test_control: any;\n  seriesData: any = [];\n  categories: any = [];\n  testId: any;\n  tempFilter: any;\n  currencySymbol: any;\n  isinSqFt: any = '';\n  uploadMessage = '';\n  uploadedData: any = [];\n  uploaded = false;\n  uploadSelectedTestStores: any = [];\n  columnHeader1: {};\n  columnHeaderDEMO: {};\n  dialogRef: any;\n  hideIcon: boolean[] = [false];\n  hideOthersColumns: boolean;\n  hideCorrelationColumns: boolean;\n  hideStoreSegmentColumns: boolean;\n  hideCorrValueColumn: boolean;\n  hideSimilarValueColumn: boolean;\n  hideTestStoreDetailsColumn: boolean;\n  hideControlMappedColumns: boolean;\n  hideTestStorenoColumns: boolean;\n  hideSelectColumns: boolean;\n  control: any = 'control';\n  tempsortDirection = '';\n  isRTMImpactTest = false;\n  uploadedControl = false;\n  controlStorePoolData: any = [];\n  uploadeControlData: any;\n  uploadMessageControl = '';\n  controlStoreMessage: string;\n  statusFail = false;\n  statusFailPool = false;\n  searchFilter = false;\n  drop(event: CdkDragDrop<string[]>) {\n    console.log('drop event fired');\n    moveItemInArray(this.displayedColumnsControlStore, event.previousIndex, event.currentIndex);\n  }\n\n  constructor(public globalService: GlobalEventsService,\n              private wizard2service: ControlStoreService,\n              private ref: ChangeDetectorRef,\n              private toastr: ToastrService,\n              private commonservice: CommonService,\n              private testMeasureService: TestMeasureService,\n              private router: Router,\n              private dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n    if(sessionStorage.getItem('test-type') === 'RTM Impact Test'){\n      this.controlStoreMessage = 'Note: Each test store will be mapped to mutiple control stores based on the input provided in this field.';\n    }else{\n      this.controlStoreMessage = 'Note: Each test store will only be mapped to one control store. Control store aggregation not available for this test.';\n    }\n\n\n    const componentDetails = this.commonservice.getCurrentComponentSubject();\n    this.currentComponent = componentDetails.currentComponent;\n    this.data = componentDetails.data;\n    console.log(componentDetails.currentComponent, this.data, 'control store component');\n    if (!isNullOrUndefined(this.data.is_finalize) && this.data.is_finalize){\n      localStorage.setItem('testname', this.data.test_name);\n      this.router.navigate(['./analyseImpact']);\n      return;\n    }\n    console.log(this.data['control_stores']);\n    if (this.data.hasOwnProperty('control_stores') && !isNullOrUndefined(this.data['control_stores'])) {\n      this.defaultChecked = this.data['control_stores'];\n      this.control_pertest = this.data['required_control_stores'];\n    }\n    sessionStorage.setItem('control_feature', this.defaultChecked);\n    if (componentDetails.currentComponent === 5) {\n      const tips = ['Significance level indicates how significant a feature/variable is [0-100%]. Higher value indicates higher significance'];\n      this.tipstoParent(tips);\n      this.showControlStores = true;\n      this.identifyControlStores();\n      this.globalService.publish('SHOW_RECOMPUTE_BUTTON', {\n        module: 'CREATE_TEST',\n        show: true\n      });\n\n      this.globalService.publish('SHOW_HIDE_INITIATE_BUTTON', {\n        module: 'CONTROL_STORES_SUMMARY',\n        enable: true\n      });\n    }\n    this.testId = localStorage.getItem('testid');\n    if (this.data === undefined || this.data === 'undefined') {\n      const test_id = localStorage.getItem('testid');\n      this.wizard2service.GetSelectedStores(test_id).subscribe((apiresponse: any) => {\n        this.targetVariableValue = apiresponse.data.target_var;\n        const data = [];\n        this.selectedBanner = apiresponse.data.banners.replace(/'/g, '');\n        this.selectedBanner = this.selectedBanner.substring(1, this.selectedBanner.length - 1);\n        this.selectedBanner = this.selectedBanner.split(',');\n        for (let i = 0; i < this.selectedBanner.length; i++) {\n          this.selectedBanner[i] = this.selectedBanner[i].trim();\n        }\n        this.selectedSegments = apiresponse.data.store_grid.replace(/'/g, '');\n        this.selectedSegments = this.selectedSegments.substring(1, this.selectedSegments.length - 1);\n        this.selectedSegments = this.selectedSegments.split(',');\n        for (let i = 0; i < this.selectedSegments.length; i++) {\n          this.selectedSegments[i] = this.selectedSegments[i].trim();\n        }\n\n        this.selectedStoreSegment = apiresponse.data.store_segment.replace(/'/g, '');\n        this.selectedStoreSegment = this.selectedStoreSegment.substring(1, this.selectedStoreSegment.length - 1);\n        this.selectedStoreSegment = this.selectedStoreSegment.split(',');\n        for (let i = 0; i < this.selectedStoreSegment.length; i++) {\n          this.selectedStoreSegment[i] = this.selectedStoreSegment[i].trim();\n        }\n\n        this.selectedTerritory = apiresponse.data.territory_name.replace(/'/g, '');\n        this.selectedTerritory = this.selectedTerritory.substring(1, this.selectedTerritory.length - 1);\n        this.selectedTerritory = this.selectedTerritory.split(',');\n        for (let i = 0; i < this.selectedTerritory.length; i++) {\n          this.selectedTerritory[i] = this.selectedTerritory[i].trim();\n        }\n\n        this.selectedCategory = apiresponse.data.category_name.replace(/'/g, '');\n        this.selectedCategory = this.selectedCategory.substring(1, this.selectedCategory.length - 1);\n        this.selectedCategory = this.selectedCategory.split(',');\n        for (let i = 0; i < this.selectedCategory.length; i++) {\n          if (this.selectedCategory[i] !== '') {\n            this.selectedCategory[i] = this.selectedCategory[i].trim();\n          } else {\n            this.selectedCategory.splice(i, 1);\n          }\n        }\n        console.log(this.selectedCategory, 'selected Category');\n        this.freeze_compute = apiresponse.data['freeze_compute'];\n      });\n    } else {\n      this.selectedBanner = this.data.banner;\n      this.selectedSegments = this.data.store_grid;\n      this.selectedStoreSegment = this.data.segment;\n      this.selectedTerritory = this.data.territory;\n      this.selectedCategory = this.data.category;\n      if(this.data.test_type === 'RTM Impact Test') {\n        this.isRTMImpactTest = true;\n      }\n    }\n    this.userRegion = sessionStorage.getItem('region');\n    this.testApplicabilityFields = config[this.userRegion].fields;\n    this.tableName = config[this.userRegion];\n    this.columnHeader1 = {\n      select_csm: 'Select',\n      test_storeno: this.tableName.test_store_id,\n      control_mapped: this.testApplicabilityFields[0].banner,\n      test_storedetails: this.testApplicabilityFields[1].segment,\n      similar_value: this.tableName.control_store_id,\n      corr_value: this.testApplicabilityFields[0].banner,\n      store_segment: this.testApplicabilityFields[1].segment,\n      correlation: 'Sales Correlation',\n      others: 'Similarity Value'\n    };\n    this.columnHeaderDEMO = {\n      select_csm: 'Select',\n      test_storeno: this.tableName.test_store_id,\n      control_mapped: this.testApplicabilityFields[0].banner,\n      similar_value: this.tableName.control_store_id,\n      corr_value: this.testApplicabilityFields[0].banner,\n      correlation: 'Sales Correlation',\n      others: 'Similarity Value'\n    };\n    if (this.data.test_type === 'RTM Impact Test') {\n      delete this.columnHeaderDEMO['select_csm'];\n    };\n    this.currencySymbol = config[this.userRegion]['currency'];\n    this.isinSqFt = config[this.userRegion]['OutletSurfaceAreaUnit'];\n    console.log(this.tableName, 'TableName changes ');\n    this.selectedMatchingCriteria();\n    this.eanbleGenerate();\n    this.generateSubscrption = this.globalService.subscribe('SHOW_CONTROL_STORES', obj => {\n      if (obj.module === 'CREATE_TEST') {\n        if (obj.enable) {\n          const tips = ['Significance level indicates how significant a feature/variable is [0-100%]. Higher value indicates higher significance'];\n          this.tipstoParent(tips);\n        }\n        if (obj.method === 'SUGGESTED_BY_TOOL') {\n          this.showControlStores = obj.enable;\n          this.controlStoreView = false;\n          this.identifyControlStores();\n        } else {\n          let uploadedData;\n          const checkedData = sessionStorage.getItem('control_feature');\n          if(checkedData === '2') {\n            uploadedData = this.uploadedData;\n          } else if(checkedData === '3'){\n            uploadedData = this.uploadeControlData;\n          }\n          if (uploadedData.length > 0) {\n            this.showControlStores = obj.enable;\n            this.controlStoreView = false;\n            this.tableConstructControl(uploadedData, sessionStorage.getItem('region'));\n          } else {\n             this.toastr.warning('There is no Data to generate control stores');\n          }\n        }\n      }\n    });\n    let hideRecompute = false;\n    this.comprasionSubscription = this.globalService.subscribe('CONTROL_STORES_VIEW', obj => {\n      if (obj.module === 'CREATE_TEST') {\n        if (obj.view === 'Control_Store') {\n          this.controlStoreView = false;\n          hideRecompute = !this.controlStoreView;\n        } else {\n          this.controlStoreView = true;\n          hideRecompute = !this.controlStoreView;\n          // localStorage.setItem('saveOneTime')\n          this.saveControlStore(this.currentComponent, false);\n          this.test_analysis_result(false);\n        }\n        const tips = ['Significance level indicates how significant a feature/variable is [0-100%]. Higher value indicates higher significance'];\n        this.tipstoParent(tips);\n        this.showControlStores = true;\n        this.globalService.publish('SHOW_RECOMPUTE_BUTTON', {\n          module: 'CREATE_TEST',\n          show: hideRecompute\n        });\n        console.log(this.controlStoreView, 'controlstore');\n      }\n    });\n    this.globalService.publish('ERROR_VALIDATION', {\n      valid: true\n    });\n    this.ControlStoreTable.paginator = this.paginator;\n    console.log(this.ControlStoreTable.paginator, 'check pagination');\n    this.recomputeSubscription = this.globalService.subscribe('CALL_RECOMPUTE_METHOD', obj => {\n      if (obj.module === 'CREATE_TEST') {\n        this.Recompute();\n      }\n    });\n    this.globalService.subscribe('HIDE_CONTROL_STORES', obj => {\n      if (obj.module === 'CREATE_TEST') {\n        if (obj.enable) {\n          const tips = ['Significance level indicates how significant a feature/variable is [0-100%]. Higher value indicates higher significance'];\n          this.tipstoParent(tips);\n        }\n        this.showControlStores = obj.enable;\n        this.globalService.publish('SHOW_RECOMPUTE_BUTTON', {\n          module: 'CREATE_TEST',\n          show: false,\n          initiateButton: false\n        });\n      }\n    });\n    this.initiateSubscription = this.globalService.subscribe('MOVE_NEXT_CONTROL_STORES', obj => {\n      console.log(obj.currentComponent, 'currentComponent');\n      if (obj.module === 'CREATE_TEST' && (obj.currentComponent === 3 || obj.currentComponent === 4)) {\n        //this.validateDropDowns();\n        this.saveasDraft = obj.saveDraft;\n        if (!this.saveasDraft) {\n          this.test_analysis_result(obj.initate);\n        }\n        this.saveControlStore(obj.currentComponent, true);\n      }\n    });\n    if (this.userRegion === 'DEMO') {\n      this.displayedColumnsControlStore = this.displayedColumnsControlStoreDEMO;\n      this.columnHeader1 = this.columnHeaderDEMO;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.ControlStoreTable.paginator = this.paginator;\n    const tips = ['The user can either choose the option for the tool to recommend the control stores based on the matching features or can manually upload the test-control stores in the provided excel template or can manually upload just the control store pool in the provided excel template.','Note: For RTM Impact Test, Control Stores will be only from store population with Customer Status\t\"Holdout Store\" or \"Not on call Cycle\" unless the user upload control store pool.', 'The user can also select the number of control stores that he wants the tool to suggest for each test store', 'A higher sales correlation between a test store and a control store indicates a strong relationship between the weekly sales', 'Similarity measure between a test store and a control store indicates how well a test store resembles the control store'];\n    setTimeout(() => {\nthis.tipstoParent(tips);\n});\n  }\n\n  tipstoParent(data: any) {\n    console.log(data, 'data');\n    this.tipsData.emit(data);\n  }\n\n  selectedMatchingCriteria() {\n    const netherLandData = ['Customer Group', 'Territory', 'Touchability Score'];\n    this.matchingCriteria = netherLandData;\n    this.selectedFeaturescount = this.matchingCriteria.length;\n  }\n\n  identifyControlStores() {\n    const test_id = [];\n    test_id.push(localStorage.getItem('testid'));\n    this.wizard2service.GetStores_list(test_id).subscribe((apiresponse: any) => {\n      if (apiresponse.status === 'ok' && apiresponse.data !== '') {\n        for (var i = apiresponse.data.length - 1; i >= 0; i--) {\n          let record_date: any;\n          if (apiresponse.data[i].records.length === 1) {\n            record_date = JSON.parse(apiresponse.data[i].records[0].record_value);\n          } else {\n            for (let j = 0; j < apiresponse.data[i].records.length; j++) {\n              if (apiresponse.data[i].records[j].stage_id === 1) {\n                record_date = JSON.parse(apiresponse.data[i].records[j].record_value);\n              }\n            }\n          }\n          const temp: any = [];\n          this.SelectedTestStores = [];\n          console.log(record_date);\n          for (var i = record_date['selectedteststore'].length - 1; i >= 0; i--) {\n            this.SelectedTestStores.push(record_date['selectedteststore'][i]);\n          }\n        }\n        let target_variable = localStorage.getItem('targetvariable');\n        if (isNullOrUndefined(target_variable)) {\n          target_variable = this.data.target_variable;\n        }\n        const data = {\n          teststores: this.SelectedTestStores,\n          target_variable,\n          test_id: localStorage.getItem('testid'),\n          banners: this.selectedBanner,\n          segments: this.selectedSegments,\n          store_segments: this.selectedStoreSegment,\n          territories: this.selectedTerritory,\n          categories: this.selectedCategory,\n          reqcontrolstores: this.control_pertest,\n          prewindow_start: this.data.pretest_startdt,\n          prewindow_end: this.data.pretest_enddt,\n          postwindow_start: this.data.testwin_startdt,\n          postwindow_end: this.data.testwin_enddt,\n          test_type: this.data.test_type\n        };\n\n        if (this.defaultChecked === '3') {\n          data['control_store_pool'] = this.controlStorePoolData;\n        } else {\n          data['control_store_pool'] = [];\n        }\n        let containSavedData: any = false;\n        if (apiresponse.data.length === 1) {\n          if (apiresponse.data[0].records.length > 1) {\n            for (let j = 0; j < apiresponse.data[0].records.length; j++) {\n              if (apiresponse.data[0].records[j].stage_id === 2) {\n                if (apiresponse.data[0].records[j].stepindex === 5) {\n                  containSavedData = true;\n                }\n              }\n            }\n          }\n        }\n        console.log(data, 'Data values');\n        if (containSavedData === false) {\n          this.wizard2service.Identifyctrlstore(data).subscribe((apiresponse: any) => {\n            this.statusFailPool = false;\n            if (apiresponse.status === 'ok') {\n              if (this.defaultChecked === '3') {\n                if (apiresponse.data.hasOwnProperty('finalcontrol_stores')){\n                  this.uploadeControlData = apiresponse.data.finalcontrol_stores;\n                  this.uploadMessageControl = apiresponse.data.message;\n                  this.uploadedControl = true;\n                  this.eanbleGenerate();\n                } else if (apiresponse.data.includes\n                  ('No valid control stores satisfying the criteria to proceed further')) {\n                    this.toastr.warning(apiresponse.data);\n                }\n              } else {\n                this.uploadedControl = false;\n                this.tableConstructControl(apiresponse.data, sessionStorage.getItem('region'));\n              }\n            } else if (apiresponse.data.includes\n              ('No valid control stores satisfying the criteria to proceed further')) {\n              if(this.defaultChecked === '3') {\n                this.uploadMessageControl = apiresponse.data;\n                this.statusFailPool = true;\n              } else {\n                this.toastr.warning(apiresponse.data);\n              }\n            }\n          });\n        } else {\n        }\n      }\n    });\n  }\n\n  test_analysis_result(initate: boolean) {\n    let breakEvenlift;\n    const preperiod_start: any = this.data.pretest_startdt;\n    const preperiod_end: any = this.data.pretest_enddt;\n    const postperiod_start: any = this.data.testwin_startdt;\n    const postperiod_end: any = this.data.testwin_enddt;\n    if (this.data.test_type !== 'RTM Impact Test'){\n      this.breakeven_list = this.data.break_even_lift;\n      breakEvenlift = JSON.stringify(JSON.parse(this.breakeven_list));\n    } else {\n      breakEvenlift = 0;\n    };\n    const selectedTargetVariable = this.data.target_variable;\n    const test_id = this.data.test_id;\n    const data: any = {\n      test_id,\n      preperiod_start,\n      preperiod_end,\n      postperiod_start,\n      postperiod_end,\n      mesmetric_name: selectedTargetVariable,\n      break_even_lift: breakEvenlift,\n    };\n    this.testMeasureService.controlStoreMeasurementpost(data).subscribe((apiresponse: any) => {\n      if (apiresponse.status === 'ok') {\n        if (!initate && this.showControlStores) {\n          setTimeout(() => {\n            this.Validate();\n          }, 100);\n      }\n      } else if (apiresponse.status === 'not_ok') {\n\n      }\n    });\n  }\n\n  sortprogramatic() {\n    let srt: any;\n    let showInitiate = false;\n    let direction: any;\n    if(this.tempsortDirection != ''){\n      direction = this.tempsortDirection;\n    }else{\n      direction = 'asc';\n    }\n    srt = {\n      active: 'test_storeno',\n      direction\n    };\n    console.log(srt, 'calling sort method');\n    this.sortDatacontrolStore(srt);\n    this.ControlStoreTable = new MatTableDataSource<any>(this.ELEMENT_DATA1);\n    this.ref.detectChanges();\n    this.ControlStoreTable.paginator = this.paginator;\n    if (this.ELEMENT_DATA1.length > 0) {\n      this.globalService.publish('SHOW_RECOMPUTE_BUTTON', {\n        module: 'CREATE_TEST',\n        show: true\n      });\n      showInitiate = true;\n    }\n    this.globalService.publish('SHOW_HIDE_INITIATE_BUTTON', {\n      module: 'CONTROL_STORES_SUMMARY',\n      enable: showInitiate\n    });\n  }\n\n  hideOrShowColumns(data: any, index: any) {\n    console.log('data', data, this.hideIcon[data]);\n    if (this.hideIcon[data] === true) {\n      this.hideIcon[data] = false;\n    } else {\n      this.hideIcon[data] = true;\n    }\n    if (data === 'select') {\n      this.hideSelectColumns = !this.hideSelectColumns;\n    } else if (data === 'test_storeno') {\n      this.hideTestStorenoColumns = !this.hideTestStorenoColumns;\n    } else if (data === 'control_mapped') {\n      this.hideControlMappedColumns = !this.hideControlMappedColumns;\n    } else if (data === 'test_storedetails') {\n      this.hideTestStoreDetailsColumn = !this.hideTestStoreDetailsColumn;\n    } else if (data === 'similar_value') {\n      this.hideSimilarValueColumn = !this.hideSimilarValueColumn;\n    } else if (data === 'corr_value') {\n      this.hideCorrValueColumn = !this.hideCorrValueColumn;\n    } else if (data === 'store_segment') {\n      this.hideStoreSegmentColumns = !this.hideStoreSegmentColumns;\n    } else if (data === 'correlation') {\n      this.hideCorrelationColumns = !this.hideCorrelationColumns;\n    } else if (data === 'others') {\n      this.hideOthersColumns = !this.hideOthersColumns;\n    }\n  }\n\n  valueShown(data: any) {\n    if (data === 'select') {\n      return 'Select';\n    } else if (data === 'test_storeno') {\n      return this.tableName.test_store_id;\n    } else if (data === 'control_mapped') {\n      return this.testApplicabilityFields[0].banner;\n    } else if (data === 'test_storedetails') {\n      return this.testApplicabilityFields[1].segment;\n    } else if (data === 'similar_value') {\n      return this.tableName.control_store_id;\n    } else if (data === 'corr_value') {\n      return this.testApplicabilityFields[0].banner;\n    } else if (data === 'store_segment') {\n      return this.testApplicabilityFields[1].segment;\n    } else if (data === 'correlation') {\n      return 'Sales Correlation';\n    } else if (data === 'others') {\n      return 'Similarity Value';\n    }\n  }\n\n\n  sortDatacontrolStore(sort: Sort) {\n    let data;\n    if (!this.searchFilter){\n      data =  this.ELEMENT_DATA1.slice();\n    } else {\n      data = this.ControlStoreTable.data.slice();\n    }\n    this.ControlStoreTable = new MatTableDataSource<any>(data);\n    this.ControlStoreTable.paginator = this.paginator;\n\n    if (!sort.active || sort.direction === '') {\n      this.ELEMENT_DATA1 = data;\n      return;\n    }\n\n    this.tempsortDirection = sort.direction;\n\n    const sortData = data.sort((a: any, b: any) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case 'test_storeno':\n          return compare_seletedstore(a.test_storeno, b.test_storeno, isAsc);\n        case 'control_mapped':\n          return compare_seletedstore(a.control_mapped, b.control_mapped, isAsc);\n        case 'test_storedetails':\n          return compare_seletedstore(a.test_storedetails, b.test_storedetails, isAsc);\n        case 'similar_value':\n          return compare_seletedstore(a.similar_value, b.similar_value, isAsc);\n        case 'corr_value':\n          return compare_seletedstore(a.corr_value, b.corr_value, isAsc);\n        case 'store_segment':\n          return compare_seletedstore(a.store_segment, b.store_segment, isAsc);\n        case 'others':\n          return compare_seletedstore(a.others, b.others, isAsc);\n        default:\n          return 0;\n      }\n    });\n    let filterData;\n    if (this.searchFilter) {\n      filterData = sortData;\n    } else {\n      filterData = sortData;\n      this.ELEMENT_DATA1 = sortData;\n    }\n    this.ControlStoreTable = new MatTableDataSource<any>(filterData);\n    // this.ControlStoreTable.paginator = this.paginator;\n  }\n\n  Recompute() {\n    this.recomputeSubscription = Subscription.EMPTY;\n    this.uncheckedItems = [];\n    const mystres = this.selection1.selected;\n    console.log('selected items', mystres);\n\n    const temp_array = [];\n    for (var i = 0; i <= mystres.length - 1; i++) {\n      temp_array.push(mystres[i]['test_storeno']);\n    }\n\n    const tempPartIdArr: any = [];\n    for (var i = 0; i <= mystres.length - 1; i++) {\n      tempPartIdArr.push(mystres[i]['similar_value']);\n    }\n\n    if (this.controlstoredata.length === mystres.length) {\n      this.toastr.warning('Please unselect the control store to recompute');\n      return;\n    } else {\n\n      const uniqueIDList1: any = [];\n\n      temp_array.forEach((element: any) => {\n        if (!uniqueIDList1.includes(element)) {\n          uniqueIDList1.push(element);\n        }\n      });\n\n      const storeIdFrmControlData: any = [];\n\n      for (let a = 0; a < this.controlstoredata.length; a++) {\n        storeIdFrmControlData.push(this.controlstoredata[a]['Test_store_' + this.tableName['partner_id']]);\n      }\n\n      const counts = {};\n\n      for (var i = 0; i < storeIdFrmControlData.length; i++) {\n        const num = storeIdFrmControlData[i];\n        counts[num] = counts[num] ? counts[num] + 1 : 1;\n      }\n\n      const counts1 = {};\n\n      for (var i = 0; i < temp_array.length; i++) {\n        const num1 = temp_array[i];\n        counts1[num1] = counts1[num1] ? counts1[num1] + 1 : 1;\n      }\n\n      for (let c = 0; c < uniqueIDList1.length; c++) {\n        const value: any = uniqueIDList1[c];\n        if (counts[value] > 1) {\n          if (counts1[value] != 1) {\n            this.toastr.warning('Please unselect the control store to recompute');\n            return;\n          }\n        }\n      }\n      const showtoaster = this.getRecomputemessage(counts, counts1);\n      if (showtoaster) {\n        this.toastr.warning('Please unselect the control store to recompute');\n        return;\n      }\n    }\n    const newarr = [];\n    const temp_checked: any = [];\n    const temp_data: any = [];\n    for (let k = 0; k < mystres.length; k++) {\n      const data: any = {\n        test_store_id: mystres[k]['test_storeno'],\n        control_str_id: mystres[k]['similar_value']\n      };\n      temp_data.push(data);\n    }\n    if (temp_data.length > 0) {\n      for (var i = 0; i < this.controlstoredata.length; i++) {\n        let isAvail: any = false;\n        let arrayValue = [];\n        arrayValue = temp_data.filter((x: any) => x.test_store_id === this.controlstoredata[i]['Test_store_' + this.tableName['partner_id']]\n          && x.control_str_id === this.controlstoredata[i][this.tableName['partner_id']]);\n        if (arrayValue.length > 0) {\n          isAvail = true;\n        }\n        if (isAvail === true) {\n          this.controlstoredata[i].Checked_Flag = 1;\n        } else {\n          this.controlstoredata[i].Checked_Flag = 0;\n          this.uncheckedItems.push(this.controlstoredata[i]);\n        }\n      }\n    } else {\n      for (var i = 0; i < this.controlstoredata.length; i++) {\n        if (this.controlstoredata[i].Checked_Flag === 1) {\n          this.controlstoredata[i].Checked_Flag = 0;\n          this.uncheckedItems.push(this.controlstoredata[i]);\n        } else {\n          this.uncheckedItems.push(this.controlstoredata[i]);\n        }\n      }\n    }\n    let target_variable = localStorage.getItem('targetvariable');\n    if (isNullOrUndefined(target_variable)) {\n      target_variable = this.data.target_variable;\n    }\n    const data = {\n      teststores: this.controlstoredata,\n      target_variable,\n      banners: this.selectedBanner,\n      segments: this.selectedSegments,\n      store_segments: this.selectedStoreSegment,\n      territories: this.selectedTerritory,\n      reqcontrolstores: this.control_pertest,\n      prewindow_start: this.data.pretest_startdt,\n      prewindow_end: this.data.pretest_enddt,\n      postwindow_start: this.data.testwin_startdt,\n      postwindow_end: this.data.testwin_enddt\n    };\n    if (this.uncheckedItems.length > 0) {\n      this.wizard2service.Recompute(data).subscribe((apiresponse: any) => {\n        if (apiresponse.status === 'ok') {\n          const recomputeResponse: any = JSON.parse(apiresponse.data);\n          for (let y = 0; y < recomputeResponse.length; y++) {\n            delete recomputeResponse[y].level_0;\n          }\n          this.controlstoredata = recomputeResponse;\n          const controlstore: any = [];\n          for (var i = 0; i <= this.controlstoredata.length - 1; i++) {\n            this.controlstoredata[i][this.tableName['partner_id']] = parseInt(this.controlstoredata[i][this.tableName['partner_id']]);\n            controlstore.push({\n              test_storeno: this.controlstoredata[i]['Test_store_' + this.tableName['partner_id']],\n              test_storedetails: this.controlstoredata[i]['Test_store_' + this.tableName['segment']],\n              control_mapped: this.controlstoredata[i]['Test_store_' + this.tableName['banner']],\n              select: this.controlstoredata[i]['Test_store_' + this.tableName['partner_id_name']],\n              similar_value: this.controlstoredata[i][this.tableName['partner_id']],\n              corr_value: this.controlstoredata[i][this.tableName['banner']],\n              store_segment: this.controlstoredata[i][this.tableName['segment']],\n              avg_duration: '1 Week',\n              act_perform: 'Activi1ty1',\n              others: this.controlstoredata[i]['Similarity_Measure'],\n              correlation: this.controlstoredata[i]['Correlation']\n            });\n          }\n          this.ELEMENT_DATA1 = [];\n          this.ELEMENT_DATA1 = controlstore;\n          this.ControlStoreTable = this.ELEMENT_DATA1;\n          this.testStoreDataCount = this.ELEMENT_DATA1.length;\n          this.sortprogramatic();\n          const temp: any = [];\n          for (var i = 0; i < controlstore.length; i++) {\n            let isAvail: any = false;\n            for (let j = 0; j < this.uncheckedItems.length; j++) {\n              if (this.uncheckedItems[j][this.tableName['partner_id']] === controlstore[i].similar_value && this.uncheckedItems[j]['Test_store_' + this.tableName['partner_id']] === controlstore[i].test_storeno) {\n                isAvail = true;\n              }\n            }\n            if (isAvail === false) {\n              temp.push(controlstore[i]);\n            }\n          }\n          this.selection1 = new SelectionModel<ControlStore>(true, temp);\n        }\n      });\n    } else {\n      this.toastr.warning('Please unselect the control store to recompute');\n    }\n  }\n\n  getRecomputemessage(counts: any, counts1: any) {\n    const totalData = [];\n    const selectData = [];\n    let showMessage = false;\n    for (const t in counts) {\n      totalData.push(counts[t]);\n    }\n    for (const selected in counts1) {\n      selectData.push(counts1[selected]);\n    }\n    if (totalData.length === selectData.length) {\n      showMessage = true;\n      console.log('length are same');\n      return showMessage;\n    } else {\n      showMessage = false;\n      console.log('length are different');\n      return showMessage;\n    }\n  }\n\n  ngOnDestroy() {\n    this.globalService.publish('ENABLE_GENERATE_BUTTON', {\n      module: 'SELECT_TEST_STORES',\n      enable: false\n    });\n    if(!isNullOrUndefined(this.generateSubscrption)){\n      this.generateSubscrption.unsubscribe();\n      }\n      if(!isNullOrUndefined(this.recomputeSubscription)){\n        this.recomputeSubscription.unsubscribe();\n        }\n        if(!isNullOrUndefined(this.initiateSubscription)){\n          this.initiateSubscription.unsubscribe();\n          }\n          if(!isNullOrUndefined(this.comprasionSubscription)){\n            this.comprasionSubscription.unsubscribe();\n            }\n  }\n\n  format(date: any) {\n    if (date != 0 && date != null && date != undefined) {\n      const dd = moment(date * 1000).format('DD, MMM YYYY');\n      const time = moment(date * 1000).format('hh:mm A');\n      // return dd + ' ' + time;\n      return dd;\n    } else {\n      return '-';\n    }\n  }\n\n  toYMD(date: Date) {\n    return moment(date).format('DD, MMM YYYY');\n  }\n\n  checkboxLabel(row?: SelectTest): string {\n    if (!row) {\n      return `${this.isTestAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    // return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.test_name + 1}`;\n  }\n\n  isTestAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.SelectTestTable.data.length;\n    return numSelected === numRows;\n  }\n\n  showValue(evt: any) {\n    console.log(evt);\n  }\n\n  Validate() {\n    this.comprasionSubscription = Subscription.EMPTY;\n    console.log(this.controlstoredata);\n    this.isTableData = false;\n    const mystres = this.selection1.selected;\n    const temp_array = [];\n    for (var i = 0; i <= mystres.length - 1; i++) {\n      temp_array.push(mystres[i]['test_storeno']);\n    }\n\n    const uniqueIDList1: any = [];\n\n    temp_array.forEach((element: any) => {\n      if (!uniqueIDList1.includes(element)) {\n        uniqueIDList1.push(element);\n      }\n    });\n    const TestStoreID: any = [];\n    for (let j = 0; j < this.controlstoredata.length; j++) {\n      TestStoreID.push(this.controlstoredata[j]['Test_store_' + this.tableName['partner_id']]);\n    }\n    const uniqueIDList: any = [];\n\n    TestStoreID.forEach((element: any) => {\n      if (!uniqueIDList.includes(element)) {\n        uniqueIDList.push(element);\n      }\n    });\n\n    if (uniqueIDList1.length === uniqueIDList.length) {\n      const storeIdFrmControlData: any = [];\n      for (let a = 0; a < this.controlstoredata.length; a++) {\n        storeIdFrmControlData.push(this.controlstoredata[a]['Test_store_' + this.tableName['partner_id']]);\n      }\n      const counts = {};\n\n      for (var i = 0; i < storeIdFrmControlData.length; i++) {\n        const num = storeIdFrmControlData[i];\n        counts[num] = counts[num] ? counts[num] + 1 : 1;\n      }\n      const counts1 = {};\n\n      for (var i = 0; i < temp_array.length; i++) {\n        const num1 = temp_array[i];\n        counts1[num1] = counts1[num1] ? counts1[num1] + 1 : 1;\n      }\n      for (let c = 0; c < uniqueIDList1.length; c++) {\n        const value: any = uniqueIDList1[c];\n        if (counts[value] > 1) {\n          if (counts1[value] != 1) {\n            this.toastr.warning('Please select one control store for each test store');\n            return;\n          }\n        }\n      }\n      const mystress = this.selection1.selected;\n      const tempPartIdArr: any = [];\n      const newarr: any = [];\n      for (var i = 0; i <= mystress.length - 1; i++) {\n        tempPartIdArr.push(mystress[i]['similar_value']);\n      }\n      const temp_data: any = [];\n      for (let k = 0; k < mystress.length; k++) {\n        const data: any = {\n          test_store_name: mystress[k]['test_storeno'],\n          control_str_name: mystress[k]['similar_value']\n        };\n        temp_data.push(data);\n      }\n\n      for (var i = 0; i < this.controlstoredata.length; i++) {\n        let isAvail: any = false;\n        for (let j = 0; j < temp_data.length; j++) {\n          if (this.controlstoredata[i]['Test_store_Customer_Number'] === temp_data[j].test_store_name) {\n            if (this.controlstoredata[i]['Customer_Number'] === temp_data[j].control_str_name) {\n              isAvail = true;\n            }\n          }\n        }\n        if (isAvail == true) {\n          this.controlstoredata[i].Checked_Flag = 1;\n          newarr.push(this.controlstoredata[i]);\n        }\n      }\n      if (newarr.length > 0) {\n        for (let j = 0; j < newarr.length; j++) {\n          newarr[j]['Customer_Number'] = newarr[j]['Customer_Number'];\n        }\n      }\n\n      let comp_var: any = [];\n        comp_var = ['Store_Size_Sq_Ft'];\n      let target_variable = localStorage.getItem('targetvariable');\n      if (isNullOrUndefined(target_variable)) {\n        target_variable = this.data.target_variable;\n      }\n      const data = {\n        teststores: newarr,\n        compare_variables: comp_var,\n        target_variable,\n        prewindow_start: this.data.pretest_startdt,\n        prewindow_end: this.data.pretest_enddt,\n        postwindow_start: this.data.testwin_startdt,\n        postwindow_end: this.data.testwin_enddt\n      };\n      setTimeout(() => {\n        this.getCorrelation();\n      }, 100);\n      this.getControlsummaryTable(data);\n    } else {\n      this.toastr.warning('Please select one control store for each test store');\n    }\n  }\n\n  roundOffWithComma(val: any) {\n    const tempVal: any = Math.round(val);\n    return tempVal.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n  }\n\n  roundOff(val: any) {\n    const tempVal: any = Math.round(val);\n    return tempVal;\n  }\n\n  saveControlStore(currentComponent: any, initate: boolean) {\n    const mystres = this.selection1.selected;\n    const temp_array = [];\n    for (var i = 0; i <= mystres.length - 1; i++) {\n      temp_array.push(mystres[i]['test_storeno']);\n    }\n\n    const uniqueIDList1: any = [];\n\n    temp_array.forEach((element: any) => {\n      if (!uniqueIDList1.includes(element)) {\n        uniqueIDList1.push(element);\n      }\n    });\n\n    const TestStoreID: any = [];\n    for (let j = 0; j < this.controlstoredata.length; j++) {\n      TestStoreID.push(this.controlstoredata[j]['Test_store_' + this.tableName['partner_id']]);\n    }\n\n    const uniqueIDList: any = [];\n\n    TestStoreID.forEach((element: any) => {\n      if (!uniqueIDList.includes(element)) {\n        uniqueIDList.push(element);\n      }\n    });\n\n    if (uniqueIDList1.length === uniqueIDList.length) {\n      const storeIdFrmControlData: any = [];\n      for (let a = 0; a < this.controlstoredata.length; a++) {\n        storeIdFrmControlData.push(this.controlstoredata[a]['Test_store_' + this.tableName['partner_id']]);\n      }\n      const counts = {};\n\n      for (var i = 0; i < storeIdFrmControlData.length; i++) {\n        const num = storeIdFrmControlData[i];\n        counts[num] = counts[num] ? counts[num] + 1 : 1;\n      }\n\n      const counts1 = {};\n\n      for (var i = 0; i < temp_array.length; i++) {\n        const num1 = temp_array[i];\n        counts1[num1] = counts1[num1] ? counts1[num1] + 1 : 1;\n      }\n\n      if (this.data.test_type !== 'RTM Impact Test'){\n        for (let c = 0; c < uniqueIDList1.length; c++) {\n          const value: any = uniqueIDList1[c];\n          if (counts[value] > 1) {\n            if (counts1[value] != 1) {\n              this.toastr.warning('Please select one control store for each test store');\n              return;\n            }\n          }\n        }\n\n      }\n\n      const mystress = this.selection1.selected;\n\n      const tempPartIdArr: any = [];\n      const newarr = [];\n\n      for (var i = 0; i <= mystress.length - 1; i++) {\n        tempPartIdArr.push(mystress[i]['similar_value']);\n      }\n\n      const temp_data: any = [];\n      for (let k = 0; k < mystres.length; k++) {\n        const data: any = {\n          test_store_id: mystres[k]['test_storeno'],\n          control_str_id: mystres[k]['similar_value']\n        };\n        temp_data.push(data);\n      }\n      console.log(temp_data, 'selected data');\n      for (var i = 0; i < this.controlstoredata.length; i++) {\n        let isAvail: any = false;\n        let arrayValue = [];\n        arrayValue = temp_data.filter((x: any) => x.test_store_id === this.controlstoredata[i]['Test_store_' + this.tableName['partner_id']]\n          && x.control_str_id === this.controlstoredata[i][this.tableName['partner_id']]);\n        if (arrayValue.length > 0) {\n          isAvail = true;\n        }\n        if (isAvail == true) {\n          this.controlstoredata[i].Checked_Flag = 1;\n          newarr.push(this.controlstoredata[i]);\n        } else {\n          this.controlstoredata[i].Checked_Flag = 0;\n          newarr.push(this.controlstoredata[i]);\n        }\n      }\n      let features: any;\n        features = [];\n      let comp_var: any = [];\n      comp_var = ['Baycount_Total'];\n      const stringify_data: any = {\n        compare_variables: comp_var,\n        store_features: features,\n        teststores: newarr\n      };\n\n      let TestId: any = '';\n      const temp = JSON.parse(localStorage.getItem('testid'));\n      TestId = temp;\n      localStorage.setItem('testid', TestId);\n      localStorage.setItem('stepper5', 'true');\n      let frezzeData = 0;\n      let isFinalize = 0;\n      let stepIndex = 5;\n      console.log(this.controlStoreView || initate, initate, this.controlStoreView );\n      if (!this.saveasDraft && initate) {\n        frezzeData = 1;\n        isFinalize = 1;\n      }\n      if(!this.showControlStores){\n        stepIndex = 4;\n      }\n      const reqData: any = {\n        stage_id: 2,\n        stepindex: stepIndex,\n        stringified_data: JSON.stringify(stringify_data),\n        w_stringified_data: stringify_data,\n        trial: JSON.parse(TestId),\n        freeze_compute: frezzeData,\n        is_finalize : isFinalize,\n        controlStores: this.defaultChecked,\n        requiredControlStores: this.control_pertest,\n      };\n      this.wizard2service.setSavedrecords(null);\n      this.wizard2service.setSavedselected(null);\n      this.wizard2service.controlMatchDataSave(reqData).subscribe((apiresponse: any) => {\n        if (apiresponse.status === 'ok') {\n          // this.wizard2service.getcontrolStoreData(localStorage.getItem('testid'))\n          if (this.showControlStores) {\n            if (apiresponse.data[0].records.length === 3) {\n              for (let k = 0; k < apiresponse.data[0].records.length; k++) {\n                if (apiresponse.data[0].records[k].stepper_id === 6) {\n                  console.log(apiresponse.data[0].records[k]);\n                  const temp = JSON.parse(apiresponse.data[0].records[k].record_value);\n                  const predata: any = {\n                    pre_end: temp.preperiod_end,\n                    pre_start: temp.preperiod_start,\n                    testwin_end: temp.postperiod_end,\n                    testwin_start: temp.postperiod_start,\n                    test_id: temp.test_id,\n                    target_variable: temp.mesmetric_name,\n                    break_even_lift: temp.break_even_lift\n                  };\n                  const testmeasurePreDetails: any = JSON.stringify(predata);\n                  localStorage.setItem('testmeasure_pre_details', testmeasurePreDetails);\n                  this.toastr.success('Control Store Saved Sucessfully');\n                  localStorage.removeItem('from_test_store');\n                }\n              }\n            } else {\n              const predata: any = {\n                pre_end: apiresponse.data[0].pre_end,\n                pre_start: apiresponse.data[0].pre_start,\n                testwin_end: apiresponse.data[0].testwin_end,\n                testwin_start: apiresponse.data[0].testwin_start,\n                test_id: apiresponse.data[0].test_id,\n                target_variable: apiresponse.data[0].target_var,\n                break_even_lift: apiresponse.data[0].break_even_lift\n              };\n              const testmeasurePreDetails: any = JSON.stringify(predata);\n              localStorage.setItem('testmeasure_pre_details', testmeasurePreDetails);\n              this.toastr.success('Control Store Saved Sucessfully');\n              localStorage.removeItem('from_test_store');\n            }\n            if ((!this.saveasDraft && !this.controlStoreView) || (!this.saveasDraft && initate)) {\n              localStorage.setItem('testname', apiresponse.data[0].test_name);\n              this.router.navigate(['./analyseImpact']);\n            }\n          }\n        }\n      });\n    } else {\n      this.toastr.warning('Please select one control store for each test store');\n    }\n  }\n\n  getCorrelation() {\n    const data = {\n      test_id: this.testId,\n      categories: this.selectedCategory,\n      test_control: this.controlstoredata,\n    };\n    // reseting every time when its called\n    this.seriesData = [];\n    this.categories = [];\n    this.wizard2service.GetControlSummaryCorrelation(data).subscribe((apiresponse: any) => {\n      if (apiresponse.status === 'ok') {\n        const avgTest = apiresponse.data.metrics_dict['Avg_Similarity'];\n        this.avg_test_control = (avgTest * 100).toFixed();\n        const salesTest = apiresponse.data.metrics_dict['Avg_Correlation'];\n        this.sales_test_control = (salesTest * 100).toFixed();\n        const data = JSON.parse(apiresponse.data.combined_avg);\n        for (let i = 0; i < data.length; i++) {\n          const obj = {name: '', color: ''};\n          this.categories.push(data[i]['Week'].toString());\n          if (this.seriesData.length === 0) {\n            obj.name = data[i]['Group'];\n            if (data[i]['Group'] === 'Test') {\n              obj.color = '#d40061';\n            } else {\n              obj.color = '#ec9b02';\n            }\n            const datValue = [];\n            datValue.push(data[i]['Average_' + this.targetVariableValue]);\n            obj['data'] = datValue;\n            this.seriesData.push(obj);\n          } else {\n            const index = this.seriesData.findIndex((x: any) => x.name === data[i]['Group']);\n            if (index === -1) {\n              obj.name = data[i]['Group'];\n              if (data[i]['Group'] === 'Test') {\n                obj.color = '#d40061';\n              } else {\n                obj.color = '#ec9b02';\n              }\n              const datValue = [];\n              datValue.push(data[i]['Average_' + this.targetVariableValue]);\n              obj['data'] = datValue;\n              this.seriesData.push(obj);\n            } else {\n              this.seriesData[index].data.push(data[i]['Average_' + this.targetVariableValue]);\n            }\n          }\n        }\n        const uniqueData = Array.from(new Set(this.categories));\n        this.categories = uniqueData;\n        console.log(this.seriesData, this.categories, 'chart Datas');\n        this.generateHighCharts(this.seriesData, this.categories);\n      }\n    });\n  }\n\n  generateHighCharts(seriesData: [], category: []) {\n    const options: any = {\n      chart: {\n        type: 'areaspline',\n        height: 400,\n      },\n      title: {\n        text: ''\n      },\n      subtitle: {\n        text: ''\n      },\n      legend: {\n        align: 'center',\n        verticalAlign: 'bottom',\n        y: 0,\n        padding: 0,\n        itemMarginTop: 0,\n        itemMarginBottom: 0,\n        itemStyle: {\n          fontSize: '10px'\n        }\n      },\n      xAxis: {\n        categories: category,\n        style: {\n          fontFamily: 'Mulish_regular'\n        }\n      },\n      yAxis: {\n        title: {\n          text: 'Standardised sales'\n        },\n        style: {\n          fontFamily: 'Mulish_regular'\n        }\n      },\n      tooltip: {\n        shared: true,\n        valueSuffix: ''\n      },\n      credits: {\n        enabled: false\n      },\n      plotOptions: {\n        areaspline: {\n          fillOpacity: 0.1\n        }\n      },\n      series: seriesData\n    };\n    Highcharts.chart('control_charts', options);\n  }\n\n  getControlsummaryTable(data: any) {\n    this.wizard2service.GetControlSummary(data).subscribe((apiresponse: any) => {\n      if (apiresponse.status === 'ok') {\n        this.isTableData = true;\n          if (apiresponse['data']['variable_metric'].hasOwnProperty('Store_Size_Sq_Ft')) {\n            this.csv_pop = apiresponse['data']['variable_metric']['Store_Size_Sq_Ft']['Control Mean'];\n            this.csv_poptestmean = apiresponse['data']['variable_metric']['Store_Size_Sq_Ft']['Test Mean'];\n          }\n          if (apiresponse['data']['variable_metric'].hasOwnProperty('RSV')) {\n            this.out_pop = apiresponse['data']['variable_metric']['RSV']['Control Mean'];\n            this.out_poptestmean = apiresponse['data']['variable_metric']['RSV']['Test Mean'];\n          }\n        }\n    });\n  }\n\n  openDailog(templateRef: TemplateRef<any>) {\n    this.dialogRef = this.dialog.open(templateRef);\n  }\n\n  closeDailog() {\n    this.dialogRef.close();\n  }\n\n  FilterLoadSavedTest(event: string) {\n    console.log('filerr Dfska');\n    const val = event.toLowerCase();\n    this.tempFilter = this.ELEMENT_DATA1;\n    if (event === '') {\n      this.searchFilter = false;\n    } else {\n      this.searchFilter = true;\n    }\n    let temp;\n    temp = this.tempFilter.filter(function(d: any) {\n        if (d.others != null) {\n          return (\n            d.test_storeno\n              .toString()\n              .toLowerCase()\n              .indexOf(val) !== -1 ||\n            d.control_mapped\n              .toString()\n              .toLowerCase()\n              .indexOf(val) !== -1 ||\n            d.similar_value\n              .toString()\n              .toLowerCase()\n              .indexOf(val) !== -1 ||\n            d.corr_value\n              .toString()\n              .toLowerCase()\n              .indexOf(val) !== -1 ||\n            d.store_segment\n              .toString()\n              .toLowerCase()\n              .indexOf(val) !== -1 ||\n            d.others\n              .toString()\n              .toLowerCase()\n              .indexOf(val) !== -1 ||\n            d.correlation\n              .toString()\n              .toLowerCase()\n              .indexOf(val) !== -1 ||\n            !val\n          );\n        }\n      });\n    if (this.tempFilter.length > 0) {\n      this.testStoreDataCount = temp.length;\n      this.ControlStoreTable = new MatTableDataSource<any>(temp);\n    } else {\n      this.testStoreDataCount = this.ELEMENT_DATA1.length;\n      this.ControlStoreTable = new MatTableDataSource<any>(this.ELEMENT_DATA1);\n    }\n    // this.ControlStoreTable = temp;\n  }\n\n  convertPercentage(value: number) {\n    if (value !== undefined) {\n      const convertedValue = (1 - value) * 100;\n      return Math.floor(convertedValue) + '%';\n    } else {\n      return '-';\n    }\n\n  }\n\n  downloadTemplate(value: any) {\n    let selecteTestStores;\n    const keyName = '';\n    this.uploadSelectedTestStores = [];\n    if (this.data !== undefined && this.data.hasOwnProperty('selectedteststore')) {\n      selecteTestStores = this.data.selectedteststore;\n      for (let i = 0; i < selecteTestStores.length; i++) {\n        this.uploadSelectedTestStores.push(selecteTestStores[i][this.tableName['partner_id_name']]);\n      }\n    }\n    const data = {};\n    let filename: any = 'TestSummaryReport';\n    if(value === 'testControlPairs') {\n      data['testStores'] = this.uploadSelectedTestStores;\n      data['templateType'] = 'TestControlPairs';\n      filename = 'Test_Control_Pairs_Upload_Template_' + this.userRegion;\n    } else {\n      data['testStores'] = this.SelectedTestStores;\n      data['templateType'] = 'ControlPairs';\n      filename = 'Control_Pairs_Pool_Upload_Template_' + this.userRegion;\n    }\n    this.wizard2service.downladControlStoreTemplate(data).subscribe((response: any) => {\n      const blob = new Blob([response], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      });\n      const downloadURL = window.URL.createObjectURL(response);\n      const link = document.createElement('a');\n      link.href = downloadURL;\n      link.download = filename + '.xlsx';\n      link.click();\n    });\n  }\n\n  handleFileInput(files: FileList) {\n    console.log('files-> ', files.item(0));\n    const file = files.item(0);\n    const formData = new FormData();\n    Array.from(files).forEach(f => formData.append('file', f));\n    console.log(formData, 'twovalues');\n    formData.append('banner', this.selectedBanner);\n    formData.append('store_segments', this.selectedStoreSegment);\n    formData.append('segments', this.selectedSegments);\n    formData.append('territories', this.selectedTerritory);\n    formData.append('categories', this.selectedCategory);\n    formData.append('target_variable', this.targetVariableValue);\n    formData.append('test_id', this.testId);\n    formData.append('prewindow_start', this.data.pretest_startdt,);\n    formData.append('prewindow_end', this.data.pretest_enddt);\n    formData.append('postwindow_start', this.data.testwin_startdt);\n    formData.append('postwindow_end', this.data.testwin_enddt);\n    this.wizard2service.uploadControlStore(formData).subscribe(response => {\n      if (response.status === 'ok') {\n        this.uploadMessage = response.data.message;\n        this.uploadedData = response.data.control_pairs;\n        this.uploaded = true;\n        this.statusFail = false;\n        this.eanbleGenerate();\n      } else if (response.status === 'not_ok') {\n        this.uploaded = false;\n        this.statusFail = true;\n        this.uploadMessage = response.data;\n        // this.toastr.warning(response.data);\n      }\n    }, (error: any) => {\n      this.toastr.error('Something went wrong while upload please try again later');\n    });\n  }\n\n  cancelUpload() {\n    this.uploaded = false;\n    this.uploadedData = [];\n    this.eanbleGenerate();\n  }\n\n  contineUpload() {\n    if (this.uploadedData.length !== 0) {\n      this.globalService.publish('SHOW_CONTROL_STORES', {\n        module: 'CREATE_TEST',\n        method: 'FILE_UPLOAD',\n        enable: true\n      });\n      // this.tableConstruct(this.uploadedData)\n    }\n  }\n\n  tableConstructControl(data: any, region: any) {\n    const controlstore: any = [];\n    if (data !== '' && data.length > 0) {\n      this.controlstoredata = JSON.parse(data);\n      for (var i = 0; i <= this.controlstoredata.length - 1; i++) {\n        this.controlstoredata[i][this.tableName['partner_id']] = JSON.parse(this.controlstoredata[i][this.tableName['partner_id']]);\n        controlstore.push({\n          test_storeno: this.controlstoredata[i]['Test_store_' + this.tableName['partner_id']],\n          test_storedetails: this.controlstoredata[i]['Test_store_' + this.tableName['segment']],\n          control_mapped: this.controlstoredata[i]['Test_store_' + this.tableName['banner']],\n          select: this.controlstoredata[i]['Test_store_' + this.tableName['partner_id']],\n          similar_value: this.controlstoredata[i][this.tableName['partner_id_name']],\n          corr_value: this.controlstoredata[i][this.tableName['banner']],\n          store_segment: this.controlstoredata[i][this.tableName['segment']],\n          avg_duration: '1 Week',\n          act_perform: 'Activi1ty1',\n          others: this.controlstoredata[i]['Similarity_Measure'],\n          correlation: this.controlstoredata[i]['Correlation']\n        });\n      }\n      this.ELEMENT_DATA1 = [];\n      this.ELEMENT_DATA1 = controlstore;\n      this.ControlStoreTable = this.ELEMENT_DATA1;\n      this.testStoreDataCount = this.ELEMENT_DATA1.length;\n      this.ControlStoreTable.paginator = this.paginator;\n    }\n    const temp: any = [];\n    for (var i = 0; i < controlstore.length; i++) {\n      temp.push(controlstore[i]);\n    }\n    this.selection1 = new SelectionModel<ControlStore>(true, temp);\n    this.sortprogramatic();\n    // this.saveDatastep4();\n  }\n\n  handleFileInputControlStore(files: FileList) {\n    console.log('files-> ', files.item(0));\n    const file = files.item(0);\n    const formData = new FormData();\n    Array.from(files).forEach(f => formData.append('file', f));\n    formData.append('test_id', this.testId);\n    this.wizard2service.uploadControlStorePool(formData).subscribe(response => {\n      if (response.status === 'ok') {\n        const data = JSON.parse(response.data);\n        data.forEach((x: any)=>{\n          this.controlStorePoolData.push(x['Control_store_Customer_Number']);\n        });\n        this.identifyControlStores();\n      } else {\n        this.uploadedControl = false;\n        this.toastr.warning(response.data);\n      }\n    }, (error: any) => {\n      this.uploadedControl = false;\n      this.toastr.error('Something went wrong while upload please try again later');\n    });\n  }\n\n  cancelUploadControl() {\n    this.uploadedControl = false;\n    this.uploadeControlData = [];\n    this.eanbleGenerate();\n  }\n\n  contineUploadControl() {\n    if (this.uploadeControlData.length !== 0) {\n      this.globalService.publish('SHOW_CONTROL_STORES', {\n        module: 'CREATE_TEST',\n        method: 'FILE_UPLOAD',\n        enable: true\n      });\n      // this.tableConstruct(this.uploadedData)\n    }\n  }\n\n  callChecked(event: any) {\n    sessionStorage.setItem('control_feature', event);\n    this.resetData(event);\n    this.eanbleGenerate();\n  }\n\n  eanbleGenerate() {\n    console.log('calling Common Generate enable');\n    let disableButton = false;\n    let dataValue = [];\n    if(!isNullOrUndefined(this.uploadedData) && this.uploadedData.length > 0){\n      dataValue = this.uploadedData;\n    } else if(!isNullOrUndefined(this.uploadeControlData) && this.uploadeControlData.length >0){\n      dataValue = this.uploadeControlData;\n    }\n    if ((this.defaultChecked === '2' || this.defaultChecked === '3') && dataValue.length === 0){\n      disableButton = true;\n    }\n    this.globalService.publish('ENABLE_GENERATE_BUTTON', {\n      module: 'SELECT_TEST_STORES',\n      enable: true,\n      disable: disableButton\n    });\n  }\n\n  resetData(evenData: any){\n    this.uploadedData = [];\n    this.uploadeControlData = [];\n    this.statusFail = false;\n    this.statusFailPool = false;\n    this.uploaded = false;\n    this.uploadedControl = false;\n  }\n\n}\n\nfunction compare_seletedstore(a: number | string, b: number | string, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","<div *ngIf=\"!showControlStores\">\n  <mat-card>\n    <mat-card-content class=\"mat-card_content\">\n      <div><span class=\"mat_heading\">Selected features to Map control and test stores</span></div>\n      <hr/>\n      <div>\n        <mat-radio-group [(ngModel)]=\"defaultChecked\" name=\"defaultChecked\" (ngModelChange)=\"callChecked(defaultChecked)\">\n          <mat-radio-button value=\"1\" >I want the tool to recommend</mat-radio-button>\n          <!-- <mat-radio-button *ngIf=\"!isRTMImpactTest\" value=\"2\" class=\"pl-2\">I want to manually select</mat-radio-button>\n          <mat-radio-button value=\"3\" class=\"pl-2\">I want to select control stores pool</mat-radio-button> -->\n        </mat-radio-group>\n      </div>\n      <div *ngIf=\"defaultChecked === '1'\" class=\"suggested_outer\">\n        <div><span class=\"mat_heading\" style=\"font-size: 0.75rem!important;font-family: Mulish_bold!important;\">Selected features ({{selectedFeaturescount}}\n          )</span></div>\n        <hr/>\n        <div class=\"content_alignment\">\n          <div *ngFor=\"let critera of matchingCriteria\">\n            {{critera}}\n            <!-- <i class=\"fa fa-times font_align\" aria-hidden=\"true\"></i> -->\n          </div>\n        </div>\n      </div>\n      <div class=\"row pt-3\">\n        <div class=\"col-md-4 col-sm-12 col-lg-4\">\n          <div class=\"form-group\">\n            <label class=\"label_change\">No. of Control Store per test store</label>\n            <input class=\"form-control\" [(ngModel)]=\"control_pertest\" type=\"number\" name=\"control_pertest\" min=\"1\"  onkeypress=\"return (event.charCode == 8 || event.charCode == 0) ? null : event.charCode >= 48 && event.charCode <= 57\"/>\n          </div>\n        </div>\n        <span style=\"font-style: italic;\n        padding-left: 1rem;\n        font-size: 13px;\">{{controlStoreMessage}}</span>\n      </div>\n    </mat-card-content>\n  </mat-card>\n  <mat-card *ngIf=\"defaultChecked === '2'\" class=\"margin_split_equally\">\n    <mat-card-content class=\"mat-card_content\">\n      <div><span class=\"mat_heading\">Additional Details</span></div>\n      <hr/>\n      <div class=\"upload_container\">\n        <div class=\"uplad_text1 font_mulish_regular\">Want to exclude control stores from mapping? Upload it in this\n          format to go to the next step\n        </div>\n        <div class=\"upload_text2 font_mulish_bold\" (click)=\"dowDEMOoadTemplate('testControlPairs')\" style=\"cursor: pointer;\">Click here to\n          dowDEMOoad the template\n        </div>\n        <ng-container *ngIf=\"statusFail\">\n          <div class=\"upload_text1 font_mulish_regular font_color_fail\">{{uploadMessage}}</div>\n        </ng-container>\n        <ng-container *ngIf=\"uploaded\">\n          <div class=\"upload_text1 font_mulish_regular font_color\">{{uploadMessage}}</div>\n          <div class=\"upload_text3 font_mulish_regular\">You can either continue the upload excluding the conflicting\n            values or cancel the whole upload\n          </div>\n          <button mat-button (click)=\"cancelUpload()\" class=\"button-color-enable font_size_button\"\n                  style=\"margin-right: 1rem\">Cancel\n          </button>\n          <!-- <button mat-button class=\"button-color-enabled-background pl-2 font_size_button\"\n                  (click)=\"contineUpload(false)\">Contine\n          </button> -->\n        </ng-container>\n        <div *ngIf=\"!uploaded\" (click)=\"uploadFile.click()\">\n          <button mat-button class=\"pl-2 button-color-enabled-background\" style=\"margin-top: 1rem;\">Upload File</button>\n          <input #uploadFile type=\"file\" id=\"grade_csv\" style=\"display:none\" accept=\".xlsx\"\n                 (change)=\"handleFileInput($event.target.files)\" name=\"selectTestStore\"/>\n        </div>\n      </div>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card *ngIf=\"defaultChecked === '3'\" class=\"margin_split_equally\">\n    <mat-card-content class=\"mat-card_content\">\n      <div><span class=\"mat_heading\">Additional Details</span></div>\n      <hr/>\n      <div class=\"upload_container\">\n        <div class=\"uplad_text1 font_mulish_regular\">Want to exclude control stores from mapping? Upload it in this\n          format to go to the next step\n        </div>\n        <div class=\"upload_text2 font_mulish_bold\" (click)=\"dowDEMOoadTemplate('controlPairs')\" style=\"cursor: pointer;\">Click here to\n          dowDEMOoad the template\n        </div>\n        <ng-container *ngIf=\"statusFailPool\">\n          <div class=\"upload_text1 font_mulish_regular font_color_fail\">{{uploadMessageControl}}</div>\n        </ng-container>\n        <ng-container *ngIf=\"uploadedControl\">\n          <div class=\"upload_text1 font_mulish_regular font_color\">{{uploadMessageControl}}</div>\n          <div class=\"upload_text3 font_mulish_regular\">You can either continue the upload excluding the conflicting\n            values or cancel the whole upload\n          </div>\n          <button mat-button (click)=\"cancelUploadControl()\" class=\"button-color-enable font_size_button\"\n                  style=\"margin-right: 1rem\">Cancel\n          </button>\n          <!-- <button mat-button class=\"button-color-enabled-background pl-2 font_size_button\"\n                  (click)=\"contineUploadControl(false)\">Contine\n          </button> -->\n        </ng-container>\n        <div *ngIf=\"!uploadedControl\" (click)=\"uploadFileControlpool.click()\">\n          <button mat-button class=\"pl-2 button-color-enabled-background\" style=\"margin-top: 1rem;\">Upload File</button>\n          <input #uploadFileControlpool type=\"file\" id=\"grade_csv\" style=\"display:none\" accept=\".xlsx\"\n                 (change)=\"handleFileInputControlStore($event.target.files)\" name=\"selectTestStore\"/>\n        </div>\n      </div>\n    </mat-card-content>\n  </mat-card>\n</div>\n\n<div *ngIf=\"showControlStores\">\n  <div *ngIf=\"!controlStoreView\">\n    <mat-card>\n      <mat-card-content class=\"mat-card_content\">\n        <div><span class=\"mat_heading\">Test store to Control store mapping</span></div>\n        <hr/>\n        <app-common-table [tableData]=\"ControlStoreTable\" [columnHeader]=\"columnHeader1\" [tableType]=\"control\"\n                          [stringSelectionControlStore]=\"selection1\" (showValueData)=\"showValue($event)\"\n                          (checkboxLabelControlStoreData)=\"checkboxLabel(row)\"\n                          (callSortData)=\"sortDatacontrolStore($event)\" (searchFilter)=\"FilterLoadSavedTest($event)\"></app-common-table>\n        <div *ngIf=\"testStoreDataCount == 0\" style=\"text-align:center\"><p class=\"no_rec_found\">No records found</p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n  <div *ngIf=\"controlStoreView\">\n    <mat-card>\n      <mat-card-content class=\"mat-card_content\">\n        <div><span class=\"mat_heading\">Test - Control comparison summary</span></div>\n        <hr/>\n        <div class=\"row\">\n          <div class=\"col-md-12 col-sm-12 col-lg-12\">\n            <div id=\"control_charts\"></div>\n          </div>\n        </div>\n        <div fxLayout=\"row pt-3\" fxLayoutAlign=\"space-between center\">\n          <div fxFlex=\"48\" class=\"background_change\">\n            <div class=\"row\">\n              <div class=\"col-md-3 col-lg-3 col-sm-3 control_value text-center\">{{avg_test_control}}%</div>\n              <div class=\"col-md-9 col-lg-9 col-sm-9 control_text\">Avg. match between a test stores and control stores\n              </div>\n            </div>\n          </div>\n          <div fxFlex=\"48\" class=\"background_change\">\n            <div class=\"row\">\n              <div class=\"col-md-3 col-lg-3 col-sm-3 control_value text-center\">{{sales_test_control}}%</div>\n              <div class=\"col-md-9 col-lg-9 col-sm-9 control_text\">Sales correlation value between test and control\n                stores\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row mt-4\">\n          <div class=\"col-md-12 col-sm-12 col-lg-12\">\n            <ng-container *ngIf=\"isTableData == true\">\n              <ng-container>\n                <table class=\"table font_mulish_regular\">\n                  <tr class=\"table_head_color\">\n                    <th class=\"border_style_left\">Store characteristics</th>\n                    <th>Test mean</th>\n                    <th class=\"border_style_right\">Control mean</th>\n                  </tr>\n                  <tr>\n                    <td>RSV (in  {{currencySymbol}})</td>\n                    <td>{{roundOffWithComma(out_poptestmean)}}</td>\n                    <td>{{roundOffWithComma(out_pop)}}</td>\n                  </tr>\n                </table>\n              </ng-container>\n            </ng-container>\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n<br/>","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthenticationGuard} from '@app/core';\nimport {CreateTestComponent} from '@app/create-test/create-test.component';\nimport {SharedModule} from '@app/shared';\nimport {ApplicabilityCriteriaComponent} from '@app/create-test/applicability-criteria/applicability-criteria.component';\nimport {TestDetailsComponent} from '@app/create-test/test-details/test-details.component';\nimport {SelectTestStoresComponent} from '@app/create-test/select-test-stores/select-test-stores.component';\nimport {ControlStoreMappingComponent} from '@app/create-test/control-store-mapping/control-store-mapping.component';\nimport {FormsModule} from '@angular/forms';\nimport {NgxSelectModule} from 'ngx-select-ex';\nimport {BsDatepickerModule} from 'ngx-bootstrap/datepicker';\nimport {NgMultiSelectDropDownModule} from 'ng-multiselect-dropdown';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {AgmCoreModule} from '@agm/core';\nimport {FlexLayoutModule, FlexModule} from '@angular/flex-layout';\n\nconst route: Routes = [\n  {\n    path: '', component: CreateTestComponent,\n    canActivate: [AuthenticationGuard],\n    data: {title: 'DEMO'}\n  },\n];\n\n@NgModule({\n  declarations: [CreateTestComponent,\n    ApplicabilityCriteriaComponent, TestDetailsComponent, SelectTestStoresComponent,\n    ControlStoreMappingComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route),\n    SharedModule,\n    FormsModule,\n    NgxSelectModule,\n    BsDatepickerModule,\n    NgMultiSelectDropDownModule,\n    DragDropModule,\n    AgmCoreModule,\n    FlexLayoutModule\n  ]\n})\nexport class CreateTestModule {\n}\n","import {SelectionModel} from '@angular/cdk/collections';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort, Sort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {CommonService} from '@app/shared/services/common.service';\nimport {GlobalEventsService} from '@app/shared/services/global-events.service';\nimport {ToastrService} from 'ngx-toastr';\nimport {Subscription} from 'rxjs';\nconst config = require('../../../assets/region/config-fields.json');\nimport {TooltipPosition} from '@angular/material/tooltip';\nimport {MatDialog} from '@angular/material/dialog';\nimport {SidenavService} from '@app/shared/services/sidenav.service';\nimport * as Highcharts from 'highcharts';\nimport HC_exporting from 'highcharts/modules/exporting';\nimport {isNullOrUndefined} from 'util';\nimport {TestMeasureService} from '@app/shared/services/testmeasure.service';\nimport {TestConfigService} from '@app/shared/services/testconfig.service';\n\nHC_exporting(Highcharts);\nconst Boost = require('highcharts/modules/boost');\nconst noData = require('highcharts/modules/no-data-to-display');\nnoData(Highcharts);\nconst More = require('highcharts/highcharts-more');\n\nexport interface TestStore {\n  store_no: any;\n  store_name: any;\n  banner: any;\n  segment: any;\n  store_segment: any;\n  avg_duration: any;\n  act_perform: any;\n  others: any;\n}\n\nfunction compare_seletedstore(a: number | string, b: number | string, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n\nfunction compare_suggestion(a: number | string, b: number | string, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n\n@Component({\n  selector: 'app-select-test-stores',\n  templateUrl: './select-test-stores.component.html',\n  styleUrls: ['./select-test-stores.component.scss']\n})\nexport class SelectTestStoresComponent implements OnInit, AfterViewInit, OnChanges {\n  showSuggestedByTool = true;\n  testStoreSelectedDataCount: any = 0;\n  totalTestStores: any = 0;\n  confshow: boolean;\n  NoofError: any;\n  errorshow: boolean;\n  teststoreshow: boolean;\n  data: any;\n  generateValidationMessage: any = '';\n  nextStepSubscription: Subscription = Subscription.EMPTY;\n  currentComponent: any;\n  ConfLevel: any;\n  NoofTestStore: any;\n  @Output('moveNextStep') moveNextStep = new EventEmitter();\n  @Output() tipsData: EventEmitter<any> = new EventEmitter<any>();\n  selectTestStores = '1';\n  ELEMENT_DATA3: any = [];\n  TestStoreSelectTable = new MatTableDataSource<any>(this.ELEMENT_DATA3);\n  strselection = new SelectionModel<TestStore>(true, []);\n  loadsize = 10;\n  displayedColumnsTestStoreDEMO: string[] = [\n    'select',\n    'store_no',\n    'banner',\n    'Territory',\n    'segment',\n    'store_segment'\n  ];\n  displayedColumnsTestStore: string[] = [\n    'select',\n    'store_no',\n    'banner',\n    'Territory',\n    'segment',\n    'store_segment'\n  ];\n\n\n  // confGrid = [\n  //   'select',\n  //   'store_no',\n  //   'banner',\n  //   'Territory',\n  //   'segment',\n  //   'store_segment',\n  // ];\n\n  // confGridDEMO = [\n  //   'select',\n  //   'store_no',\n  //   'banner',\n  //   // 'Street',\n  //   // 'city',\n  //   'Territory',\n  //   'segment',\n  //   'store_segment',\n  //   // 'csvoutletShow',\n  //   // 'Influenceoverall',\n  //   // 'Outletsurface'\n  // ];\n\n  testApplicabilityFields: any;\n  currencySymbol: any;\n  isinSqFt: any = '';\n  userRegion: any;\n  tableName: any = '';\n  storeselection = new SelectionModel<TestStore>(true, []);\n  latitude: number;\n  longitude: number;\n  showMapList = '1';\n  agmusePan = true;\n  zoom: number;\n  userLocationMarkerAnimation: string;\n  tableView: any = true;\n  markers: any = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  tempFilter: any = [];\n  temp_valufilter: any;\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  saveasDraft = false;\n  ConfLev: any = 0;\n  uncheck: boolean;\n  Margin: any = 0;\n  cnfcheck = true;\n  mrgerrheck = true;\n  testrheck = true;\n  TestStore: any = 0;\n  positionOptions: TooltipPosition[] = ['after', 'before', 'above', 'below', 'left', 'right'];\n  position = new FormControl(this.positionOptions[0]);\n  uncheck1: boolean;\n  uncheck2: boolean;\n  validate_teststore: any = false;\n  formError = false;\n  @ViewChild(MatSort) sort: MatSort;\n  confrangeshow: boolean;\n  testperashow: boolean;\n  testStore_Errormsg: any = '';\n  Banner: any;\n  Segment: any;\n  Territory: any;\n  StoreGrid: any;\n  Category: any;\n  TargetVariable: any;\n  currentComponentData: any;\n  dialogRef: any;\n  dialogRefConfirm: any;\n  @Input('testStore_population') testStore_population = true;\n  showInsights = true;\n  hideIcon: boolean[] = [false];\n  hideSelectColumns: boolean;\n  hideStoreNoColumns: boolean;\n  hideBannerColumns: boolean;\n  hideTerritoryColumn: boolean;\n  hideSegmentColumn: any;\n  hideStoreSegmentColumn: boolean;\n  columnHeader2: {};\n  comprassion: any = 'comprassion';\n  uploaded = false;\n  uploadMessage = '';\n  uploadedData: any;\n  uploadShow = false;\n  suggestionView = false;\n  selectTargetVariableRadio: any;\n  alreadyKnowRadio: any;\n  knownMarginOfError: any;\n  knownNoOfError: any;\n  suggestionResultView = false;\n  resultNoOfStore: any;\n  resultMarginOfError: any;\n  resultPowerNoOfStores: any = [];\n  resultPowerPower: any = [];\n  displayedColumnsLoadSaved: string[] = [\n    'power',\n    'number_of_stores'\n  ];\n  LOAD_DATA: any = [];\n  powerTable = new MatTableDataSource<any>(this.LOAD_DATA);\n  suggestionViewResult = false;\n  showComprassion = false;\n  COMPRASSION_ELEMENT_DATA3: any = [];\n  @ViewChild(MatPaginator) paginatorComprassion: MatPaginator;\n  comprassionSelectedStores = new MatTableDataSource<any>(this.COMPRASSION_ELEMENT_DATA3);\n  @Output('showComprassionView') showComprassionView = new EventEmitter();\n  displayedComprassionTestStore: string[] = [\n    'store_no',\n    'Street',\n    'similarity_value',\n    'sales_corelation'\n  ];\n  avg_test_population = '';\n  sales_test_population = '';\n  selectStoreView = true;\n  totalComprassionTestStores = 0;\n  tempComprassionFilter: any = [];\n  mapTableData: any = [];\n  seriesData: any = [];\n  categories: any = [];\n\n  // Modal Box\n  csv_pop: any;\n  csv_poptestmean: any;\n  out_pop: any;\n  out: any;\n  out_poptestmean: any;\n  out_testPvalue: any;\n  testresplit: any = [];\n  csv_pvalue: any;\n  title: any;\n  touch_ability: any;\n  touch_ability_mean: any;\n  touch_pValue: any;\n  power_test = '';\n  showMessage = false;\n  columnHeader1 = {};\n  @ViewChild('confirmDialog') confirmDialog: TemplateRef<any>;\n  isIntermediate = false;\n  isChecked = false;\n  filterSubscription: Subscription = Subscription.EMPTY;\n  filterApplied = false;\n  tempFiteredArray: any = [];\n  hideComprassion: Subscription = Subscription.EMPTY;\n  tempsortDirection = '';\n  isRTMImpactTest = false;\n  totalCheckout: any;\n  totalCheckoutMean: any;\n  totalCheckoutpValue: any;\n  uploadMessageFailed: any = '';\n  statusFail = false;\n  showRSV = true;\n  showsizeSqft = true;\n  showManned = true;\n  showTotal = true;\n  searchFilter = false;\n  searchComprassion = false;\n\n  constructor(\n    private homeService: TestConfigService,\n    public toastr: ToastrService,\n    private changeDetectorRefs: ChangeDetectorRef,\n    private commonService: CommonService,\n    public globalService: GlobalEventsService,\n    private dialog: MatDialog,\n    private sideNavservice: SidenavService,\n    private testMeasureService: TestMeasureService\n  ) {\n    const componentDetails = this.commonService.getCurrentComponentSubject();\n    this.currentComponent = componentDetails.currentComponent;\n    this.data = componentDetails.data;\n    this.setData(this.data);\n    console.log('this.data: ', this.data);\n    if(this.data !== undefined) {\n      if(this.data.test_type === 'RTM Impact Test') {\n        this.isRTMImpactTest = true;\n      }\n    }\n\n    this.nextStepSubscription = this.globalService.subscribe('MOVE_NEXT_SELECT_TEST_STORES', obj => {\n      if (obj.module === 'CREATE_TEST' && obj.currentComponent === 2) {\n        console.log('start', this.showComprassion);\n        console.log('start', this.suggestionView);\n        if (!this.showComprassion && this.suggestionView) {\n          console.log('this.suggestionView');\n          this.suggestionView = false;\n          this.showComprassion = false;\n          this.TestStore = true;\n          this.NoofTestStore = parseInt(this.resultNoOfStore);\n          this.NoofError = this.resultMarginOfError;\n          this.Margin = true;\n          this.callCompute();\n        }else if (!this.showComprassion && sessionStorage.getItem('test-type') === 'RTM Impact Test') {\n          console.log('!this.showComprassion && sessionStorage.getItem test-type === RTM Impact Test');\n          this.showConfirm(obj);\n          this.moveNextStep.emit({currentComponent: this.currentComponent, data: this.data});\n          this.showComprassionView.emit(false);\n        } else if (!this.showComprassion) {\n          console.log('!this.showComprassion');\n          this.showConfirm(obj);\n        } else {\n          console.log('else');\n          this.moveNextStep.emit({currentComponent: this.currentComponent, data: this.data});\n          this.showComprassionView.emit(false);\n        }\n      }\n    });\n    this.filterSubscription = this.globalService.subscribe('FILLTER_APPLIED', obj => {\n      if (obj.module === 'FILTERED_COMPONENT' && obj.component === 'Select_Test_Stores') {\n        this.formatfilteredData(obj.data);\n      }\n    });\n\n    this.hideComprassion = this.globalService.subscribe('HIDE_TEST_STORE_COMPRASSION', obj => {\n      console.log('calling the Data HIDE_TEST_STORE_COMPRASSION');\n      if (obj.module === 'CREATE_TEST') {\n        this.showComprassion = false;\n        this.selectStoreView = true;\n        this.previuosData(this.ELEMENT_DATA3);\n        console.log(this.ELEMENT_DATA3, 'when gone previous ');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n\n    console.log(localStorage.getItem('TargetVariableValue'));\n    if (localStorage.getItem('TargetVariableValue') === 'RSV') {\n      this.selectTargetVariableRadio = '1';\n    } else {\n      this.selectTargetVariableRadio = '2';\n    }\n    this.userRegion = sessionStorage.getItem('region');\n    if (config[this.userRegion]) {\n      console.log(config[this.userRegion]);\n      this.testApplicabilityFields = config[this.userRegion].fields;\n      this.currencySymbol = config[this.userRegion]['currency'];\n      this.isinSqFt = config[this.userRegion]['OutletSurfaceAreaUnit'];\n      this.tableName = config[this.userRegion];\n      this.latitude = 51.678418;\n      this.longitude = 7.809007;\n      this.zoom = 8;\n      if (this.data.test_type !== 'RTM Impact Test'){\n        this.columnHeader1 = {\n          select: 'Select Store',\n          store_no: this.tableName.test_store_id,\n          banner: this.testApplicabilityFields[0].banner,\n          Territory: this.tableName.territory,\n          store_segment: this.testApplicabilityFields[3].storegrid\n        };\n      } else {\n        this.columnHeader1 = {\n          store_no: this.tableName.test_store_id,\n          banner: this.testApplicabilityFields[0].banner,\n          Territory: this.tableName.territory,\n          store_segment: this.testApplicabilityFields[3].storegrid\n        };\n      }\n      this.columnHeader2 = {\n        store_no: this.tableName.test_store_id,\n        Street: 'Outlet Address',\n        similarity_value: 'Similarity value to population',\n        sales_corelation: 'Sales correlation'\n      };\n    }\n\n    this.displayedColumnsTestStore = this.displayedColumnsTestStoreDEMO;\n    this.TestStoreSelectTable.paginator = this.paginator;\n    //Edit\n    this.currentComponentData = this.commonService.getCurrentComponentSubject().data;\n    console.log(this.currentComponentData);\n    if (this.currentComponentData !== undefined) {\n      if (this.currentComponentData.confidence_lvl !== null) {\n        if (this.currentComponentData.hasOwnProperty('is_checkconf')) {\n          this.ConfLev = this.currentComponentData.is_checkconf;\n          console.log(this.currentComponentData.is_checkconf);\n          // this.ConfLev = this.currentComponent.is_checkconf;\n          this.ConfLevel = this.currentComponentData.confidence_lvl;\n        }\n      }\n      if (this.currentComponentData.no_of_teststores !== null) {\n        if (this.currentComponentData.hasOwnProperty('is_checknum')) {\n\n          console.log(this.currentComponentData.is_checknum);\n          this.TestStore = this.currentComponentData.is_checknum;\n          this.NoofTestStore = this.currentComponentData.no_of_teststores;\n        }\n      }\n      if (this.currentComponentData.margin_error !== null) {\n        if (this.currentComponentData.hasOwnProperty('is_checkmarg')) {\n          // this.Margin = this.currentComponent.is_checkmarg\n\n          this.Margin = this.currentComponentData.is_checkmarg;\n          console.log(this.currentComponentData.is_checkmarg);\n          this.NoofError = this.currentComponentData.margin_error;\n        }\n      }\n      console.log(this.currentComponentData.selectTestStores, 'testchange');\n      if (!isNullOrUndefined(this.currentComponentData.selectTestStores)) {\n        console.log(this.currentComponentData.selectTestStores, 'selecteTestStoresSelection');\n        this.selectTestStores = this.currentComponentData.selectTestStores;\n        if (this.selectTestStores !== '1') {\n          this.showSuggestedByTool = false;\n        }\n        setTimeout(()=>{\n          this.showGenerate(false);\n        },10);\n      }\n      if (this.isRTMImpactTest && isNullOrUndefined(this.currentComponentData.selectTestStores)){\n        this.ConfLevel=0;\n        this.NoofError = 0;\n        this.NoofTestStore = 0;\n        setTimeout(()=>{\n        this.identifyTestStore();\n        },10);\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    this.TestStoreSelectTable.paginator = this.paginator;\n    this.comprassionSelectedStores.paginator = this.paginatorComprassion;\n    const tips = ['The user can either select test stores as suggested by the tool or manually select the suggested no of test stores from the population or upload them manually in the provided excel template.', 'To generate test stores from the tool, the user must enter any two of the following three metrics - confidence level, margin of error, number of test stores', 'Margin of error tells you how many percentage points your results will differ from the real population value', 'Confidence level tells you the percentage of the time the results to be accurate to within margin of error percentage points Ex: Confidence level = 95%, Margin of Error = 2% Results calculated to be accurate to within 2 percentages points (+/- 2) 95% of the time', 'Power of test is the probability of suggesting there is a change in sales (lift/drop) when actually there is one','Note: For RTM Impact Test all valid stores with Customer Status as “Active” will be used as Test Stores once the user has applied the filters based on channel, territory, segment, and store grid. No manual upload or selection of Test stores will be available.'];\n    setTimeout(() => {\nthis.tipstoParent(tips);\n});\n  }\n\n  ngOnDestroy() {\n    if(!isNullOrUndefined(this.nextStepSubscription)){\n      this.nextStepSubscription.unsubscribe();\n      }\n      if(!isNullOrUndefined(this.filterSubscription)){\n        this.filterSubscription.unsubscribe();\n        }\n        if(!isNullOrUndefined(this.hideComprassion)){\n          this.hideComprassion.unsubscribe();\n          }\n  }\n\n\n  tipstoParent(data: any) {\n    console.log(data, 'data');\n    this.tipsData.emit(data);\n  }\n\n  ConfShow() {\n    this.confshow = false;\n  }\n\n  ErrorShow() {\n    this.errorshow = false;\n  }\n\n  TestStoreShow() {\n    this.teststoreshow = false;\n  }\n\n  navigateSuggestedTool() {\n    this.suggestionView = true;\n  }\n\n  generateSuggestion() {\n    if (this.selectTargetVariableRadio == undefined) {\n      this.generateValidationMessage = 'Choose the target variable';\n      return;\n    } else if (this.alreadyKnowRadio == undefined) {\n      this.generateValidationMessage = 'Select Already know option';\n      return;\n    } else if ((this.knownMarginOfError == '' || this.knownMarginOfError == undefined) && (this.knownNoOfError == '' || this.knownNoOfError == undefined)) {\n      this.generateValidationMessage = 'Give input values for chosen field';\n      return;\n    } else {\n      this.generateValidationMessage = '';\n    }\n    //this.data = JSON.parse('{\"margin_of_error\":6,\"banners\":[\"Albert Heijn\",\"Jumbo\"],\"segments\":[\"Supermarket Small\",\"Supermarket Medium\",\"Supermarket Large\"],\"store_segments\":[\"Low CSV - Medium Influence\",\"Medium CSV - Low Influence\",\"Low CSV - Low Influence\",\"Medium CSV - Medium Influence\",\"High CSV - Low Influence\",\"Medium CSV - High Influence\",\"Low CSV - High Influence\",\"High CSV - Medium Influence\",\"High CSV - High Influence\"],\"segment_variables\":[\"Overall_Segment\"],\"territories\":[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"23\",\"27\"],\"categories\":[\"Chocolate\",\"Petcare\"],\"target_variable\":\"RSV\"}')\n    let marginOfError: any;\n    let noOfTestStore: any;\n    if (this.alreadyKnowRadio === '1') {\n      marginOfError = this.knownMarginOfError;\n      noOfTestStore = '';\n    } else if (this.alreadyKnowRadio == '2') {\n      marginOfError = '';\n      noOfTestStore = this.knownNoOfError;\n    }\n    const segment_variables: any[] = [config[this.userRegion]['overall_segment']];\n    const data = {\n      margin_of_error: parseInt(this.knownMarginOfError),\n      noOfTestStore,\n      banners: this.data.banner,\n      segments: this.data.segment,\n      store_segments: this.data.store_grid,\n      segment_variables,\n      territories: this.data.territory,\n      categories: this.data.category,\n      target_variable: this.selectTargetVariableRadio == 1 ? 'RSV' : 'Volume',\n      prewindow_start: this.data.pretest_startdt,\n      prewindow_end: this.data.pretest_enddt,\n      postwindow_start: this.data.testwin_startdt,\n      postwindow_end: this.data.testwin_enddt\n    };\n    data['num_test_stores'] = parseInt(noOfTestStore);\n    data['margin_of_error'] = parseInt(marginOfError);\n    if (noOfTestStore == '') {\n      this.homeService.generateSuggestionForNoOfTestStore(data).subscribe(response => {\n        if (response.status == 'ok') {\n          this.resultMarginOfError = marginOfError;\n          this.suggestionResultView = true;\n          this.resultNoOfStore = response.data['no_of_teststores'];\n          const resultPower = JSON.parse(response.data['power_stores']);\n          this.resultPowerPower = resultPower['Power %'];\n          this.resultPowerNoOfStores = resultPower['Number of Stores'];\n          this.showCharts(true);\n        }\n      });\n    } else {\n      this.homeService.generateSuggestionForMarginOfError(data).subscribe((response: any) => {\n        if (response.status === 'ok') {\n          this.suggestionResultView = true;\n          this.resultNoOfStore = noOfTestStore;\n          this.resultMarginOfError = response.data['margin_of_error'];\n          const resultPower = JSON.parse(response.data['power_stores']);\n          this.resultPowerPower = resultPower['Power %'];\n          this.resultPowerNoOfStores = resultPower['Margin of Error'];\n          this.showCharts(false);\n        }\n      });\n    }\n  }\n\n  showCharts(isTestStore: boolean) {\n    this.title = isTestStore ? 'Number of test stores' : 'Margin of error';\n    const yAxisValue = isTestStore ? '{value}' : '{value}%';\n    const ary: any = [];\n\n    const power = [];\n    for (const key in this.resultPowerPower) {\n      power.push(this.resultPowerPower[key]);\n    }\n    const noOfStore = [];\n    for (const key in this.resultPowerNoOfStores) {\n      noOfStore.push(this.resultPowerNoOfStores[key]);\n    }\n    console.log(power);\n    console.log(noOfStore);\n    for (const i in power) {\n      ary.push({\n        power: power[i],\n        noOfStore: noOfStore[i]\n      });\n    }\n\n    this.LOAD_DATA = ary;\n    this.powerTable = new MatTableDataSource(this.LOAD_DATA);\n    setTimeout(() => this.powerTable.paginator = this.paginator);\n    this.suggestionViewResult = true;\n    const options: any = {\n      chart: {\n        type: 'areaspline',\n        height: 400,\n      },\n      title: null,\n      legend: {\n        layout: 'vertical',\n        align: 'left',\n        verticalAlign: 'top',\n        x: 100,\n        y: 70,\n        floating: true,\n        borderWidth: 1,\n        backgroundColor: Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\n      },\n      exporting: {\n        chartOptions: {\n          title: {\n            text: null\n          }\n        }\n      },\n      xAxis: {\n        categories: power,\n        title: {\n          text: 'Power %'\n        },\n        style: {\n          fontFamily: 'Mulish_regular'\n        }\n      },\n      yAxis: {\n        title: {\n          text: this.title\n        },\n        labels: {\n          format: yAxisValue\n        },\n        style: {\n          fontFamily: 'Mulish_regular'\n        }\n      },\n      plotOptions: {\n\n        area: {\n          fillOpacity: 0.5,\n        },\n        series: {\n          lineColor: 'black',\n        },\n      },\n      credits: {\n        enabled: false\n      },\n      series: [{\n        name: this.title,\n        showIDEMOegend: false,\n        data: noOfStore,\n        color: 'black',\n        zoneAxis: 'x',\n        zones: [{\n          fillColor: '#FFFFFF',\n          value: noOfStore.indexOf(this.resultNoOfStore),\n        }, {\n          fillColor: 'palegreen',\n          color: 'green',\n          value: noOfStore.length,\n        }]\n      }]\n    };\n    const options2: any = {\n      chart: {\n        type: 'areaspline',\n        height: 400,\n      },\n      title: null,\n      legend: {\n        layout: 'vertical',\n        align: 'left',\n        verticalAlign: 'top',\n        x: 100,\n        y: 70,\n        floating: true,\n        borderWidth: 1,\n        backgroundColor: Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\n      },\n      exporting: {\n        chartOptions: {\n          title: {\n            text: null\n          }\n        }\n      },\n      xAxis: {\n        categories: power,\n        title: {\n          text: 'Power %'\n        },\n        style: {\n          fontFamily: 'Mulish_regular'\n        }\n      },\n      yAxis: {\n        title: {\n          text: this.title\n        },\n        labels: {\n          format: yAxisValue\n        },\n        style: {\n          fontFamily: 'Mulish_regular'\n        }\n      },\n      plotOptions: {\n\n        area: {\n          fillOpacity: 0.5,\n        },\n        series: {\n          lineColor: 'black',\n        },\n      },\n      credits: {\n        enabled: false\n      },\n      series: [{\n        name: this.title,\n        showIDEMOegend: false,\n        data: noOfStore,\n        color: 'black',\n        zoneAxis: 'x',\n        zones: [{\n          fillColor: '#FFFFFF',\n          value: noOfStore.indexOf(this.resultMarginOfError)\n        }, {\n          fillColor: 'palegreen',\n          color: 'green',\n          value: noOfStore.length\n        }]\n      }]\n    };\n    if (this.alreadyKnowRadio === '1') {\n      Highcharts.chart('power-chart', options);\n    } else if (this.alreadyKnowRadio === '2') {\n      Highcharts.chart('power-chart', options2);\n    }\n  }\n\n  selectAKRadioChange() {\n    this.suggestionViewResult = false;\n  }\n\n  sortDataQuickSuggestionTable(sort: Sort) {\n    const data = this.LOAD_DATA.slice();\n    this.powerTable = new MatTableDataSource<any>(this.LOAD_DATA);\n\n    if (!sort.active || sort.direction === '') {\n      this.LOAD_DATA = data;\n      return;\n    }\n\n    this.LOAD_DATA = data.sort((a: any, b: any) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case 'power':\n          return compare_suggestion(a.power, b.power, isAsc);\n        case 'number_of_stores':\n          return compare_suggestion(a.banner, b.banner, isAsc);\n        default:\n          return 0;\n      }\n    });\n  }\n\n\n  sortDataTeststoreSelected(sort: Sort) {\n    console.log('sort Function');\n    let data ;\n    if (!this.searchFilter){\n      data = this.ELEMENT_DATA3.slice();\n    } else {\n      data = this.TestStoreSelectTable.data.slice();\n    }\n    this.TestStoreSelectTable = new MatTableDataSource<any>(data);\n    this.TestStoreSelectTable.paginator = this.paginator;\n\n\n    if (!sort.active || sort.direction === '') {\n      this.ELEMENT_DATA3 = data;\n      return;\n    }\n    this.tempsortDirection = sort.direction;\n    const tempData = data.sort((a: any, b: any) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case 'store_no':\n          return compare_seletedstore(a.store_no, b.store_no, isAsc);\n        case 'banner':\n          return compare_seletedstore(a.banner, b.banner, isAsc);\n        case 'Territory':\n          return compare_seletedstore(a.Territory, b.Territory, isAsc);\n        case 'segment':\n          return compare_seletedstore(a.segment, b.segment, isAsc);\n        case 'store_segment':\n          return compare_seletedstore(a.store_segment, b.store_segment, isAsc);\n        case 'Street':\n          return compare_seletedstore(a.Street, b.Street, isAsc);\n        default:\n          return 0;\n      }\n    });\n    let filterData;\n    if (this.searchFilter) {\n      filterData = tempData;\n    } else {\n      filterData = tempData;\n      this.ELEMENT_DATA3 = tempData;\n    }\n    this.TestStoreSelectTable = new MatTableDataSource<any>(filterData);\n    this.TestStoreSelectTable.paginator = this.paginator;\n  }\n\n  isAllSelectedTestStore() {\n    const numSelected = this.storeselection.selected.length;\n    const numRows = this.TestStoreSelectTable.data.length;\n    return numSelected === numRows;\n  }\n\n  checkboxLabelTeststore(row?: TestStore): string {\n    if (!row) {\n      return `${this.isAllSelectedTestStore() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.storeselection.isSelected(row) ? 'deselect' : 'select'} row ${row.store_name + 1}`;\n  }\n\n  identifyTestStore() {\n    let segment_variables: any[];\n    segment_variables = [config[this.userRegion]['banner']];\n    const dataStore = this.data;\n    const newData = {\n      data: {\n        test_name: this.data.test_name,\n        test_id: this.data.test_id,\n        type_of_test: this.data.test_type,\n        banners: this.data.banner,\n        segments: this.data.store_grid,\n        store_segments: this.data.segment,\n        segment_variables,\n        territories: this.data.territory,\n        categories: this.data.category,\n        no_of_teststores: this.NoofTestStore,\n        target_variable: this.data.target_variable,\n        prewindow_start: this.data.pretest_startdt,\n        prewindow_end: this.data.pretest_enddt,\n        postwindow_start: this.data.testwin_startdt,\n        postwindow_end: this.data.testwin_enddt\n      }\n    };\n    this.homeService.IdentifyTest(newData).subscribe((apiResponse4: any) => {\n      if (apiResponse4.status === 'ok') {\n        if(apiResponse4.data === ''){\n          this.toastr.error('No test stores pair satisfying the criteria to proceed further.');\n        }else {\n          this.tableConstruct(apiResponse4.data);\n        }\n      } else {\n        this.toastr.error('Something went wrong please try again later.');\n      }\n    });\n  }\n\n  getTerritoryData(value: any) {\n    return value;\n  }\n\n  dowDEMOoadTemplate() {\n    const link = document.createElement('a');\n    link.download = 'Upload_Teststores_Template_' + this.userRegion + '.xlsx';\n    link.href = 'assets/excel_files/Upload_Teststores_Template_' + this.userRegion + '.xlsx';\n    link.click();\n  }\n\n  handleFileInput(files: FileList) {\n    console.log('files-> ', files.item(0));\n    const file = files.item(0);\n    const formData = new FormData();\n    Array.from(files).forEach(f => formData.append('file', f));\n    console.log(formData, 'twovalues');\n    const data = {\n      FILES: formData,\n      banner: this.Banner\n    };\n    formData.append('banner', this.Banner);\n    formData.append('store_segments', this.StoreGrid);\n    formData.append('segments', this.Segment);\n    formData.append('territories', this.Territory);\n    formData.append('categories', this.Category);\n    formData.append('target_variable', this.TargetVariable);\n    formData.append('prewindow_start', this.data.pretest_startdt);\n    formData.append('prewindow_end', this.data.pretest_enddt);\n    formData.append('postwindow_start', this.data.testwin_startdt);\n    formData.append('postwindow_end', this.data.testwin_enddt);\n    this.homeService.uploadTestStore(formData).subscribe((response: any) => {\n      if (response.status === 'ok') {\n        this.uploadMessage = response.data.message2;\n        this.uploadedData = response.data.filtered_teststores;\n        this.uploaded = true;\n        this.NoofError = response.data.margin_of_error;\n        this.ConfLev = response.data.confidence_level;\n        this.NoofTestStore = response.data.num_test_stores;\n        this.power_test = response.data.power_test;\n        this.statusFail = false;\n      } else {\n        this.uploaded = false;\n        this.uploadMessageFailed = response.data;\n        this.statusFail = true;\n        // this.toastr.warning(response.data);\n      }\n    }, (error: any) => {\n      this.toastr.error('Something went wrong while upload please try again later');\n    });\n  }\n\n  formatNumber(num: any) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n  }\n\n  getTestStoreName(row: any) {\n    return row.store_no;\n  }\n\n\n  tableConstruct(apiresponse: any) {\n    const dt = JSON.parse(apiresponse);\n    console.log(dt);\n    let allArray: any = [];\n    allArray = dt;\n    const ary: any = [];\n      for (var i = 0; i < dt.length; i++) {\n        let correlation = 0;\n        let similarity_value = 0;\n        if (dt[i].hasOwnProperty('Correlation')) {\n          correlation = dt[i]['Correlation'];\n        }\n        if (dt[i].hasOwnProperty('Similarity_Measure')) {\n          similarity_value = dt[i]['Similarity_Measure'];\n        }\n        ary.push({\n          store_no: dt[i]['Customer_Number'],\n          banner: dt[i]['Customer_Group'],\n          city: dt[i]['City'],\n          Street: dt[i]['Outlet_Address'],\n          store_segment: dt[i]['Store_Number'],\n          Territory: dt[i]['Territory'],\n          csvoutletShow: dt[i]['Store_Size_Sq_Ft'],\n          index: dt[i]['index'],\n          teststre_flg: dt[i]['is_teststore'],\n          zipcode: dt[i]['Postcode'],\n          sales_corelation: correlation,\n          similarity_value,\n          latitude: dt[i]['Latitude'],\n          longitude: dt[i]['Longitude'],\n          customer_name: dt[i]['Customer_Name'],\n          customer_status: dt[i]['Customer_Status'],\n          touchability_score: dt[i]['Touchability_Score'],\n          icon: 'assets/images/map_icon.png',\n          selected_icon: 'assets/images/active_map.png',\n          active_icon: 'assets/images/map_icon.png',\n          store_id: dt[i]['store_id'],\n          region: dt[i]['Region'],\n          division: dt[i]['Division'],\n          sales_represtative: dt[i]['Sales_Representative'],\n          total_checkout_locations: dt[i]['total_checkout_locations'],\n          Manned_Checkouts: dt[i]['Manned_Checkouts'],\n          customerChain: dt[i]['Customer_Chain']\n        });\n      }\n\n    if (this.showComprassion) {\n      this.COMPRASSION_ELEMENT_DATA3 = ary;\n      var temp: any = [];\n      for (var i = 0; i < this.COMPRASSION_ELEMENT_DATA3.length; i++) {\n        if (this.COMPRASSION_ELEMENT_DATA3[i].teststre_flg == 1) {\n          temp.push(this.COMPRASSION_ELEMENT_DATA3[i]);\n        }\n      }\n      console.log(this.COMPRASSION_ELEMENT_DATA3);\n      this.testStoreSelectedDataCount = temp.length;\n      this.totalComprassionTestStores = ary.length;\n      this.comprassionSelectedStores = new MatTableDataSource(this.COMPRASSION_ELEMENT_DATA3);\n      this.comprassionSelectedStores.paginator = this.paginatorComprassion;\n      this.changeDetectorRefs.detectChanges();\n      this.strselection = new SelectionModel<TestStore>(true, temp);\n      this.loadsize = 10;\n    } else {\n      this.ELEMENT_DATA3 = ary;\n      var temp: any = [];\n      for (var i = 0; i < this.ELEMENT_DATA3.length; i++) {\n        if (this.ELEMENT_DATA3[i].teststre_flg == 1) {\n          temp.push(this.ELEMENT_DATA3[i]);\n        }\n      }\n      console.log(this.ELEMENT_DATA3);\n      this.testStoreSelectedDataCount = temp.length;\n      this.totalTestStores = ary.length;\n      this.TestStoreSelectTable = new MatTableDataSource(this.ELEMENT_DATA3);\n      this.TestStoreSelectTable.paginator = this.paginator;\n      this.changeDetectorRefs.detectChanges();\n      this.strselection = new SelectionModel<TestStore>(true, temp);\n      this.loadsize = 10;\n    }\n\n    if (this.selectTestStores === '3') {\n      this.NoofError = 0;\n      this.ConfLevel = 0;\n      this.NoofTestStore = this.ELEMENT_DATA3.length;\n    }\n  }\n\n  showGenerate(click: boolean) {\n    if (click) {\n      if (this.selectTestStores === '1' && (this.Margin == 0 || this.Margin == false || !this.NoofError) && (this.TestStore == 0 || this.TestStore == false || !this.NoofTestStore)) {\n        console.log('Margin and Number of test store is empty');\n        this.formError = true;\n        return;\n      }\n    }\n\n    this.formError = false;\n    console.log('Firing Generate');\n    this.ELEMENT_DATA3 = [];\n    this.testStoreSelectedDataCount = 0;\n    this.totalTestStores = 0;\n    this.TestStoreSelectTable = new MatTableDataSource(this.ELEMENT_DATA3);\n    this.TestStoreSelectTable.paginator = this.paginator;\n    if (this.selectTestStores === '1' && !isNullOrUndefined(this.selectTestStores)) {\n      this.identifyTestStore();\n    } else if (this.selectTestStores === '2' && !isNullOrUndefined(this.selectTestStores)) {\n      this.identifyMannually();\n    } else if (this.selectTestStores === '3' && !isNullOrUndefined(this.selectTestStores)) {\n      let records;\n      const index  = this.data.records.findIndex((x: any)=> x.stepper_id === 3);\n      if(index !== -1){\n        if(this.data.records.length > 0 && this.data.records[index].stepper_id === 3){\n          records = JSON.parse(this.data.records[index].record_value);\n          console.log(records, 'recordsvalue');\n          this.tableConstruct(JSON.stringify(records.selectedteststore));\n        }\n      }\n    }\n\n  }\n\n\n  omit_char(event: any) {\n    const keyChar = event.key;\n    let allowCharacter: boolean;\n    if (keyChar === '-' && event.target.selectionStart !== 0) {\n      allowCharacter = false;\n    } else if (\n      keyChar === 'Tab' ||\n      keyChar === '+' ||\n      keyChar === 'Enter' ||\n      keyChar === 'Backspace' ||\n      keyChar === 'ArrowLeft' ||\n      keyChar === 'ArrowRight' ||\n      keyChar === 'Delete'\n    ) {\n      allowCharacter = true;\n    } else {\n      allowCharacter = (keyChar >= '0' && keyChar <= '9') || keyChar === '.';\n    }\n    if (this.NoofError !== undefined && this.NoofError !== null && (this.NoofError).toString().length >= 10) {\n      event.preventDefault();\n    }\n    if (!allowCharacter) {\n      event.preventDefault();\n    }\n  }\n\n  mapReading() {\n    this.userLocationMarkerAnimation = 'DROP';\n  }\n\n  toggleView(change: any) {\n    console.log(change, 'toogle change value');\n  }\n\n  getMarkerList() {\n    const data = this.ELEMENT_DATA3;\n    let count = 0;\n    this.mapTableData = [];\n    if (this.showMapList === '1') {\n      count = this.ELEMENT_DATA3.length;\n    } else if (this.showMapList === '2') {\n      count = 10;\n    } else if (this.showMapList === '3') {\n      count = 20;\n    }\n    this.markers = [];\n    const arry = [];\n    for (let i = 0; i < count; i++) {\n      if (data[i]['teststre_flg'] === 1) {\n        data[i]['active_icon'] = data[i]['selected_icon'];\n        data[i]['teststre_flg'] = 1;\n      } else {\n        data[i]['active_icon'] = data[i]['icon'];\n        data[i]['teststre_flg'] = 0;\n      }\n      arry.push(data[i]);\n    }\n    this.markers = arry;\n  }\n\n  selectedMarker(storeNumber: any, teststre_flg: any) {\n    console.log(this.markers, 'markersData');\n    if (teststre_flg === 0) {\n      const index = this.markers.findIndex((x: any) => x.store_no === storeNumber);\n      if (index !== -1) {\n        this.markers[index]['active_icon'] = this.markers[index]['selected_icon'];\n        this.markers[index]['teststre_flg'] = 1;\n      }\n    } else if (teststre_flg === 1) {\n      const index = this.markers.findIndex((x: any) => x.store_no === storeNumber);\n      if (index !== -1) {\n        this.markers[index]['active_icon'] = this.markers[index]['icon'];\n        this.markers[index]['teststre_flg'] = 0;\n      }\n    }\n    this.mapTableData = this.markers;\n    const selectedCount = this.mapTableData.filter((x: any) => x.teststre_flg === 1);\n    this.testStoreSelectedDataCount = selectedCount.length;\n  }\n\n  selectedstrtable(store_id: any) {\n    console.log(this.ELEMENT_DATA3, 'data');\n    for (let i = 0; i < this.ELEMENT_DATA3.length; i++) {\n      if (this.ELEMENT_DATA3[i]['store_no'] === store_id) {\n        if (this.ELEMENT_DATA3[i]['teststre_flg'] === 1) {\n          this.ELEMENT_DATA3[i]['teststre_flg'] = 0;\n        } else {\n          this.ELEMENT_DATA3[i]['teststre_flg'] = 1;\n        }\n      }\n    }\n\n    if (this.temp_valufilter != undefined) {\n      const val = this.temp_valufilter;\n\n      this.tempFilter = this.ELEMENT_DATA3;\n\n      const temp = this.tempFilter.filter(function(d: any) {\n        return (\n          d['store_no'].toString().indexOf(val) !== -1 ||\n          d['banner']\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          d['segment']\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          d['store_segment']\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          d['Territory']\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          d['segment']\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          d['store_segment']\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        );\n      });\n      if (this.tempFilter.length > 0) {\n        console.log(this.tempFilter, 'if condition');\n        this.testStoreSelectedDataCount = temp.length;\n        this.totalTestStores = temp.length;\n        this.TestStoreSelectTable = new MatTableDataSource<any>(temp);\n        this.TestStoreSelectTable.paginator = this.paginator;\n      } else {\n        console.log(this.tempFilter, 'else condition');\n        this.testStoreSelectedDataCount = this.ELEMENT_DATA3.length;\n        this.ELEMENT_DATA3 = this.ELEMENT_DATA3;\n        this.totalTestStores = temp.length;\n        this.TestStoreSelectTable = new MatTableDataSource<any>(this.ELEMENT_DATA3);\n        this.TestStoreSelectTable.paginator = this.paginator;\n      }\n    } else if (!this.filterApplied) {\n      const data = this.ELEMENT_DATA3.filter((x: any) => x.teststre_flg === 1);\n      if (data.length > 0) {\n        this.testStoreSelectedDataCount = data.length;\n        if (this.ELEMENT_DATA3.length === data.length) {\n          this.isChecked = true;\n        } else {\n          this.isIntermediate = true;\n        }\n      } else {\n        this.testStoreSelectedDataCount = data.length;\n      }\n      this.TestStoreSelectTable = new MatTableDataSource(this.ELEMENT_DATA3);\n      this.TestStoreSelectTable.paginator = this.paginator;\n    } else if (this.filterApplied) {\n      const data = this.tempFiteredArray.filter((x: any) => x.teststre_flg === 1);\n      if (data.length > 0) {\n        this.testStoreSelectedDataCount = data.length;\n        if (this.ELEMENT_DATA3.length === data.length) {\n          this.isChecked = true;\n        } else {\n          this.isIntermediate = true;\n        }\n      } else {\n        this.testStoreSelectedDataCount = data.length;\n      }\n      this.totalTestStores = this.tempFiteredArray.length;\n      this.TestStoreSelectTable = new MatTableDataSource<any>(this.tempFiteredArray);\n      this.TestStoreSelectTable.paginator = this.paginator;\n    }\n  }\n\n  Savestep3One(currentComponent: any) {\n    /*Covert date format*/\n    const pretest_start = this.data.pretest_startdt;\n    const pretest_end = this.data.pretest_enddt;\n    const test_start = this.data.testwin_startdt;\n    const test_end = this.data.testwin_enddt;\n    const mystres = this.strselection.selected;\n    const storessel = [];\n    if (this.selectTestStores === '2'&& this.testStoreSelectedDataCount < Number(this.NoofTestStore)) {\n      this.closeDailogConfirm();\n    }\n    if (mystres.length === 0) {\n      this.toastr.warning('Please select atleast one test stores');\n      return;\n    }\n    for (let i = 0; i < mystres.length; i++) {\n      storessel.push({\n        Customer_Number: mystres[i]['store_no'],\n        Customer_Group: mystres[i]['banner'],\n        City: mystres[i]['City'],\n        Customer_Name: mystres[i]['customer_name'],\n        Outlet_Address: mystres[i]['Street'],\n        Store_Number: mystres[i]['store_segment'],\n        Territory: mystres[i]['Territory'],\n        Customer_Status: mystres[i]['customer_status'],\n        Latitude: mystres[i]['latitude'],\n        Longitude: mystres[i]['longitude'],\n        Store_Size_Sq_Ft: mystres[i]['csvoutletShow'],\n        Postcode: mystres[i]['zipcode'],\n        store_id: mystres[i]['store_id'],\n        Region: mystres[i]['region'],\n        Division: mystres[i]['division'],\n        Sales_Representative: mystres[i]['sales_represtative'],\n        Manned_Checkouts: mystres[i]['Manned_Checkouts'],\n        total_checkout_locations: mystres[i]['total_checkout_locations'],\n        Customer_Chain: mystres[i]['customerChain'],\n        index: mystres[i]['index'],\n        is_teststore: mystres[i]['teststre_flg'],\n        touchability_score: mystres[i]['touchability_score']\n      });\n    }\n    let data: any;\n    let record: any;\n    this.data.stepindex = 4;\n    this.data.selectedteststore = storessel;\n    localStorage.setItem('testid', this.data.test_id);\n    localStorage.setItem('test_type', this.data.test_type);\n\n    const stringified_data = JSON.stringify(this.data);\n\n    record = {\n      strfeature1: this.data.strfeature1,\n      strfeature2: this.data.strfeature2,\n      selectedteststore: this.data.selectedteststore,\n      test_name: this.data.test_name,\n      test_type: this.data.test_type,\n      target_variable: this.data.target_variable,\n      desc: this.data.desc,\n      additional_det: this.data.additional_det,\n      banner: this.Banner,\n      segment: this.StoreGrid,\n      territory: this.Territory,\n      store_grid: this.Segment,\n      category: this.Category,\n      pretest_startdt: this.data.pretest_startdt,\n      pretest_enddt: this.data.pretest_enddt,\n      testwin_startdt: this.data.testwin_startdt,\n      testwin_enddt: this.data.testwin_enddt,\n      confidence_lvl: this.ConfLevel,\n      margin_error: this.NoofError,\n      break_even_lift: this.data.break_even_lift,\n      no_of_teststores: this.NoofTestStore,\n      records: stringified_data,\n      stepindex: 3,\n      stage_id: 1,\n      is_checkconf: this.ConfLev,\n      is_checkmarg: this.Margin,\n      is_checknum: this.TestStore,\n      selectTestStores: this.selectTestStores,\n      test_id: this.data.test_id //remove before push\n    };\n    localStorage.setItem('testidmatch', this.data.test_id);\n    const dataTemp: any = [];\n    dataTemp.push(this.data.test_id);\n    localStorage.setItem('testidstage2', JSON.stringify(dataTemp));\n    localStorage.setItem('from_test_store', 'true');\n    // Setting the Selected Stores\n    console.log(record);\n    this.homeService.Save_stage(record).subscribe((apiresponse: any) => {\n      if (apiresponse.status == 'ok') {\n        this.toastr.success('', 'Selected Test Stores saved successfully');\n        if (!this.saveasDraft) {\n          console.log(sessionStorage.getItem('test-type'), 'testType changes');\n          if(sessionStorage.getItem('test-type') !== 'RTM Impact Test'){\n            console.log('RTM Impact Test Not');\n            const tips = ['A higher sales correlation between a test store and stores in the entire population indicates a strong directional relationship between their weekly sales', 'Similarity measure between a test store and stores in the entire population indicates how well a test store resembles the stores in the population'];\n            this.tipstoParent(tips);\n            this.showComprassion = true;\n            this.showComprassionView.emit(true);\n            this.getComprassionTable();\n          }\n        }\n      }\n    });\n  }\n\n  ConfLevels(event: any) {\n    if (event == 'A') {\n      if ((this.Margin == 1 && this.ConfLev == true) || (this.Margin == true && this.ConfLev == 1)) {\n        this.uncheck = true;\n        this.testrheck = false;\n      }\n      if ((this.TestStore == 1 && this.ConfLev == true) || (this.TestStore == true && this.ConfLev == 1)) {\n        this.uncheck = true;\n        this.mrgerrheck = false;\n      }\n\n      if (this.ConfLev == true || this.ConfLev == 1) {\n        this.uncheck = true;\n      }\n    } else if (event == 'B') {\n      if ((this.Margin == 1 && this.ConfLev == false) || (this.Margin == true && this.ConfLev == false)) {\n        this.uncheck = true;\n        this.testrheck = true;\n      }\n      if ((this.TestStore == 1 && this.ConfLev == false) || (this.TestStore == true && this.ConfLev == false)) {\n        this.uncheck = true;\n        this.mrgerrheck = true;\n      }\n      if (this.Margin == false || this.ConfLev == 0) {\n        this.uncheck = false;\n        this.ConfLevel = '';\n      }\n    }\n  }\n\n  MarginError(event: any) {\n    if (event == 'C') {\n      if ((this.ConfLev == 1 && this.Margin == true) || (this.ConfLev == true && this.Margin == 1)) {\n        this.uncheck1 = true;\n        this.testrheck = false;\n      }\n      if ((this.TestStore == 1 && this.Margin == true) || (this.TestStore == true && this.Margin == 1)) {\n        this.uncheck1 = true;\n        this.cnfcheck = false;\n      }\n      if (this.Margin == true || this.Margin == 1) {\n        this.uncheck1 = true;\n      }\n    } else if (event == 'D') {\n      if ((this.ConfLev == 1 && this.Margin == false) || (this.ConfLev == true && this.Margin == false)) {\n        this.uncheck1 = true;\n        this.testrheck = true;\n      }\n      if ((this.TestStore == 1 && this.Margin == false) || (this.TestStore == true && this.Margin == false)) {\n        this.uncheck1 = true;\n        this.cnfcheck = true;\n      }\n      if (this.Margin == false || this.Margin == 0) {\n        this.uncheck1 = false;\n        this.NoofError = '';\n      }\n    }\n  }\n\n  TestStores(event: any) {\n    if (event == 'E') {\n      if ((this.ConfLev == 1 && this.TestStore == true) || (this.ConfLev == true && this.TestStore == 1)) {\n        this.uncheck2 = true;\n        this.mrgerrheck = false;\n      }\n      if ((this.Margin == 1 && this.TestStore == true) || (this.Margin == true && this.TestStore == 1)) {\n        this.uncheck2 = true;\n        this.cnfcheck = false;\n      }\n      if (this.TestStore == true || this.TestStore == 1) {\n        this.uncheck2 = true;\n      }\n    } else if (event == 'F') {\n      if ((this.ConfLev == 1 && this.TestStore == false) || (this.ConfLev == true && this.TestStore == false)) {\n        this.uncheck2 = true;\n        this.mrgerrheck = true;\n      }\n      if ((this.Margin == 1 && this.TestStore == false) || (this.Margin == true && this.TestStore == false)) {\n        this.uncheck2 = true;\n        this.cnfcheck = true;\n      }\n      if (this.TestStore == false || this.TestStore == 0) {\n        this.uncheck2 = false;\n        this.NoofTestStore = '';\n        this.validate_teststore = false;\n      }\n    }\n  }\n\n  selectRadioChange() {\n    this.ConfLev = 0;\n    this.NoofError = 0;\n    this.NoofTestStore = 0;\n    this.ConfLevel = '';\n    this.NoofError = '';\n    this.NoofTestStore = '';\n    this.TestStoreSelectTable = new MatTableDataSource([]);\n    this.ELEMENT_DATA3 = [];\n    this.testStoreSelectedDataCount = 0;\n    this.mapTableData = [];\n    this.markers = [];\n    this.totalTestStores = 0;\n    this.showMessage = false;\n    if (this.selectTestStores === '1') {\n      this.showSuggestedByTool = true;\n    } else if (this.selectTestStores === '2') {\n      this.showSuggestedByTool = false;\n      this.formError = false;\n    } else if (this.selectTestStores === '3') {\n      this.showSuggestedByTool = false;\n      this.formError = false;\n      this.uploaded = false;\n      this.uploadShow = false;\n      this.uploadMessageFailed = '';\n      this.statusFail = false;\n    }\n  }\n\n  hideOrShowColumns(data: any, index: any) {\n    console.log('data', data, this.hideIcon[data]);\n    if (this.hideIcon[data] == true) {\n      this.hideIcon[data] = false;\n    } else {\n      this.hideIcon[data] = true;\n    }\n    if (data == 'select') {\n      this.hideSelectColumns = !this.hideSelectColumns;\n    } else if (data == 'store_no') {\n      this.hideStoreNoColumns = !this.hideStoreNoColumns;\n    } else if (data == 'banner') {\n      this.hideBannerColumns = !this.hideBannerColumns;\n    } else if (data == 'Territory') {\n      this.hideTerritoryColumn = !this.hideTerritoryColumn;\n    } else if (data == 'segment') {\n      this.hideSegmentColumn = !this.hideSegmentColumn;\n    } else if (data == 'store_segment') {\n      this.hideStoreSegmentColumn = !this.hideStoreSegmentColumn;\n    }\n  }\n\n  valueShown(data: any) {\n    if (data == 'select') {\n      return 'Select Store';\n    } else if (data == 'store_no') {\n      return this.tableName.test_store_id;\n    } else if (data == 'banner') {\n      return this.testApplicabilityFields[0].banner;\n    } else if (data == 'Territory') {\n      return this.tableName.territory;\n    } else if (data == 'segment') {\n      return this.testApplicabilityFields[1].segment;\n    } else if (data == 'store_segment') {\n      return this.testApplicabilityFields[3].storegrid;\n    }\n  }\n\n  identifyMannually() {\n    const segment_variables: any[] = [config[this.userRegion]['overall_segment']];\n    const newData = {\n      data: {\n        test_name: this.data.test_name,\n        test_id: this.data.test_id,\n        type_of_test: this.data.test_type,\n        banners: this.data.banner,\n        segments: this.data.store_grid,\n        store_segments: this.data.segment,\n        segment_variables,\n        territories: this.data.territory,\n        categories: this.data.category,\n        no_of_teststores: this.NoofTestStore,\n        target_variable: this.data.target_variable,\n        prewindow_start: this.data.pretest_startdt,\n        prewindow_end: this.data.pretest_enddt,\n        postwindow_start: this.data.testwin_startdt,\n        postwindow_end: this.data.testwin_enddt\n      }\n    };\n    this.homeService.IdentifyTestManually(newData).subscribe((apiResponse: any) => {\n      if (apiResponse.status == 'ok') {\n        this.showMessage = true;\n        this.NoofError = apiResponse.data.margin_of_error;\n        this.ConfLev = apiResponse.data.confidence_level;\n        this.NoofTestStore = apiResponse.data.num_test_stores;\n        this.tableConstruct(apiResponse.data.teststores);\n        this.power_test = apiResponse.data.power_test;\n        this.ConfLevel = this.ConfLev;\n      }\n    });\n  }\n\n\n  setData(data: any) {\n    if (this.data !== undefined) {\n      this.Territory = this.data.territory;\n      this.Category = this.data.category;\n      this.Segment = this.data.store_grid;\n      this.StoreGrid = this.data.segment;\n      this.TargetVariable = this.data.target_variable;\n      this.Banner = this.data.banner;\n    }\n  }\n\n  // Calculate Confidence level and margin of error\n\n  callCompute() {\n    if (this.NoofError || this.NoofTestStore || this.ConfLev) {\n      this.Compute();\n    }\n  }\n\n  Compute() {\n\n    this.formError = false;\n    const prewinstrt = this.data.pretest_startdt;\n    const prewinend = this.data.pretest_enddt;\n    const testwinstrt = this.data.testwin_startdt;\n    const testwinend = this.data.testwin_enddt;\n    let data: any;\n    console.log(testwinstrt);\n    if (this.ConfLev && this.TestStore) {\n      data = {\n        data: {\n          confidence_level: parseInt(this.ConfLevel) / 100,\n          num_test_stores: this.NoofTestStore,\n          testwindow_start: testwinstrt,\n          testwindow_end: testwinend,\n          prewinstrt,\n          prewinend,\n          target_variable: this.TargetVariable,\n          banners: this.Banner,\n          segments: this.StoreGrid,\n          store_segments: this.Segment,\n          territories: this.Territory,\n          categories: this.Category\n        }\n      };\n      if (!isNullOrUndefined(this.NoofTestStore) && JSON.parse(this.NoofTestStore) < 30) {\n        this.validate_teststore = true;\n        this.testStore_Errormsg = 'Given samplesize is less than 30 (Minimum required samplesize).Please modify the sample size and try again';\n        return;\n      } else {\n        this.validate_teststore = false;\n      }\n    } else if (this.ConfLev && this.Margin) {\n      data = {\n        data: {\n          confidence_level: parseInt(this.ConfLevel) / 100,\n          margin_of_error: (Number(parseFloat(this.NoofError).toFixed(2))) / 100,\n          testwindow_start: testwinstrt,\n          testwindow_end: testwinend,\n          prewinstrt,\n          prewinend,\n          target_variable: this.TargetVariable,\n          banners: this.Banner,\n          segments: this.StoreGrid,\n          store_segments: this.Segment,\n          territories: this.Territory,\n          categories: this.Category\n        }\n      };\n    } else if (this.TestStore && this.Margin) {\n      data = {\n        data: {\n          margin_of_error: (Number(parseFloat(this.NoofError).toFixed(2))) / 100,\n          num_test_stores: this.NoofTestStore,\n          testwindow_start: testwinstrt,\n          testwindow_end: testwinend,\n          prewinstrt,\n          prewinend,\n          target_variable: this.TargetVariable,\n          banners: this.Banner,\n          segments: this.StoreGrid,\n          store_segments: this.Segment,\n          territories: this.Territory,\n          categories: this.Category,\n\n        }\n      };\n      if (!isNullOrUndefined(this.NoofTestStore) && JSON.parse(this.NoofTestStore) < 30) {\n        this.validate_teststore = true;\n        return;\n      } else {\n        this.validate_teststore = false;\n      }\n    }\n\n    let flag_conf: any;\n\n    if (this.ConfLev == 1) {\n      if (this.ConfLevel < 70 || this.ConfLevel > 99) {\n        flag_conf = 'invalid';\n      } else {\n        flag_conf = 'valid';\n      }\n    }\n\n    if (\n      (this.ConfLev == 1 && this.TestStore == 1 && this.ConfLevel && this.NoofTestStore && flag_conf == 'valid') ||\n      (this.TestStore == 1 && this.Margin == 1 && this.NoofError && this.NoofTestStore) ||\n      (this.ConfLev == 1 && this.Margin == 1 && this.ConfLevel && this.NoofError && flag_conf == 'valid')\n    ) {\n      this.homeService.Testparam(data).subscribe((apiresponse: any) => {\n        if (apiresponse.status == 'ok') {\n          this.validate_teststore = false;\n          if (this.ConfLev && this.TestStore && flag == 'valid') {\n            this.NoofError = (((apiresponse.data * 100) * 100 + Number.EPSILON) / 100).toFixed(2);\n            this.toastr.success('', 'Margin of error computed');\n          } else if (this.ConfLev && this.Margin && flag == 'valid') {\n            this.NoofTestStore = apiresponse.data;\n            this.toastr.success('', 'Number  of Teststores computed');\n          } else if (this.TestStore && this.Margin) {\n            const apicnflevel = apiresponse.data * 100;\n            if (apicnflevel < 70 || apicnflevel > 99) {\n              this.ConfLevel = apiresponse.data * 100;\n              this.toastr.error('', 'Confidence level not in range');\n              this.confrangeshow = true;\n            } else {\n              this.ConfLevel = apiresponse.data * 100;\n              this.toastr.success('', 'Confidence level computed');\n              this.confrangeshow = false;\n            }\n          }\n        } else {\n          if (apiresponse.data) {\n            if (apiresponse.data != '') {\n              this.validate_teststore = true;\n              this.testStore_Errormsg = 'Calculated samplesize is less than 30 (Minimum required samplesize).Hence we suggest 30 as the sample size.';\n              // this.toastr.error('', apiresponse.data);\n            } else {\n              this.toastr.error('', 'Computation failed for given value!');\n            }\n          } else {\n            this.toastr.error('', 'Computation failed for given value!');\n          }\n        }\n      });\n      if (\n        (this.ConfLev == 1 && this.TestStore == 1 && this.ConfLevel && this.NoofTestStore) ||\n        (this.TestStore == 1 && this.Margin == 1 && this.NoofError && this.NoofTestStore) ||\n        (this.ConfLev == 1 && this.Margin == 1 && this.ConfLevel && this.NoofError)\n      ) {\n        var flag: any;\n        if (this.ConfLev == 1) {\n          if (this.ConfLevel < 70 || this.ConfLevel > 99) {\n            flag = 'invalid';\n            this.confrangeshow = true;\n          } else {\n            this.confrangeshow = false;\n            // this.show_required_metrics = true;\n            flag = 'valid';\n          }\n        } else {\n          // this.show_required_metrics = true;\n        }\n      }\n    } else if (flag_conf == 'invalid') {\n      this.confrangeshow = true;\n    } else {\n      //ivalid meesgae\n      // this.show_required_metrics = false;\n    }\n  }\n\n  filterCall() {\n    this.sideNavservice.toggleFilter('Filter');\n    setTimeout(() => {\n      this.globalService.publish('FILTER_OPEN_METHOD', {\n        module: 'Select_Test_Stores',\n        data: this.ELEMENT_DATA3\n      });\n    });\n  }\n\n  FilterLoadTestStoreSelect(event: string) {\n    const val = event.toLowerCase();\n    this.tempFilter = this.ELEMENT_DATA3;\n    let temp;\n    if (event === '') {\n      this.searchFilter = false;\n    } else {\n      this.searchFilter = true;\n    }\n    console.log(this.tempFilter, this.ELEMENT_DATA3,'Filter Search');\n    temp = this.tempFilter.filter(function(d: any) {\n      return (\n        d.store_no\n          .toString()\n          .toLowerCase()\n          .indexOf(val) !== -1 ||\n        d.banner\n          .toString()\n          .toLowerCase()\n          .indexOf(val) !== -1 ||\n        d.Territory\n          .toString()\n          .toLowerCase()\n          .indexOf(val) !== -1 ||\n        d.store_segment\n          .toString()\n          .toLowerCase()\n          .indexOf(val) !== -1 ||\n        !val\n      );\n    });\n    if (this.tempFilter.length > 0) {\n      const data = temp.filter((x: any) => x.teststre_flg === 1);\n      this.testStoreSelectedDataCount = data.length;\n      this.TestStoreSelectTable = new MatTableDataSource<any>(temp);\n      // setTimeout(() => this.TestStoreSelectTable.paginator = this.paginator);\n    } else {\n      this.ELEMENT_DATA3 = this.ELEMENT_DATA3;\n      const data = this.ELEMENT_DATA3.filter((x: any) => x.teststre_flg === 1);\n      this.testStoreSelectedDataCount = data.length;\n      this.TestStoreSelectTable = new MatTableDataSource<any>(this.ELEMENT_DATA3);\n      // setTimeout(() => this.TestStoreSelectTable.paginator = this.paginator);\n    }\n  }\n\n  openDailog(templateRef: TemplateRef<any>) {\n    this.dialogRef = this.dialog.open(templateRef);\n  }\n\n  closeDailog() {\n    this.dialogRef.close();\n  }\n\n  // getCheckboxValues(data: any) {\n  //   if (sessionStorage.getItem('region') == 'DEMO') {\n  //     const el = this.confGridDEMO.find((itm: any) => itm === data);\n\n  //     if (el) {\n  //       this.confGridDEMO.splice(this.confGridDEMO.indexOf(el), 1);\n  //     }\n  //     this.displayedColumnsTestStoreDEMO = this.confGridDEMO;\n  //     console.log(this.confGridDEMO);\n  //   } else {\n  //     const el = this.confGrid.find((itm: any) => itm === data);\n\n  //     if (el) {\n  //       this.confGrid.splice(this.confGrid.indexOf(el), 1);\n  //     }\n  //     this.displayedColumnsTestStore = this.confGrid;\n  //     console.log(this.confGrid);\n  //   }\n  // }\n\n  cancelUpload() {\n    this.uploaded = false;\n  }\n\n  contineUpload() {\n    if (this.uploadedData.length !== 0) {\n      this.uploadShow = true;\n      this.tableConstruct(this.uploadedData);\n    }\n  }\n\n  sortComprassionTeststoreSelected(sort: Sort) {\n    const data = this.ELEMENT_DATA3.slice();\n    this.TestStoreSelectTable = new MatTableDataSource<any>(this.ELEMENT_DATA3);\n    this.TestStoreSelectTable.paginator = this.paginator;\n    if (!sort.active || sort.direction === '') {\n      this.ELEMENT_DATA3 = data;\n      return;\n    }\n    this.ELEMENT_DATA3 = data.sort((a: any, b: any) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case 'store_no':\n          return compare_seletedstore(a.store_no, b.store_no, isAsc);\n        case 'banner':\n          return compare_seletedstore(a.banner, b.banner, isAsc);\n        // case 'city':\n        //   return compare_seletedstore(a.city, b.city, isAsc);\n        case 'Territory':\n          return compare_seletedstore(a.Territory, b.Territory, isAsc);\n        case 'segment':\n          return compare_seletedstore(a.segment, b.segment, isAsc);\n        case 'store_segment':\n          return compare_seletedstore(a.store_segment, b.store_segment, isAsc);\n        case 'Street':\n          return compare_seletedstore(a.Street, b.Street, isAsc);\n        default:\n          return 0;\n      }\n    });\n    this.TestStoreSelectTable.paginator = this.paginator;\n  }\n\n  sortPopulationMapping(sort: Sort) {\n    let data;\n    if (!this.searchComprassion){\n      data =  this.COMPRASSION_ELEMENT_DATA3.slice();\n    } else {\n      data = this.comprassionSelectedStores.data.slice();\n    }\n    this.comprassionSelectedStores = new MatTableDataSource<any>(data);\n    this.comprassionSelectedStores.paginator = this.paginatorComprassion;\n    if (!sort.active || sort.direction === '') {\n      this.COMPRASSION_ELEMENT_DATA3 = data;\n      return;\n    }\n    const comprassionData = data.sort((a: any, b: any) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case 'store_no':\n          return compare_seletedstore(a.store_no, b.store_no, isAsc);\n        case 'Street':\n          return compare_seletedstore(a.Street, b.Street, isAsc);\n        // case 'city':\n        //   return compare_seletedstore(a.city, b.city, isAsc);\n        case 'similarity_value':\n          return compare_seletedstore(a.similarity_value, b.similarity_value, isAsc);\n        case 'sales_corelation':\n          return compare_seletedstore(a.sales_corelation, b.sales_corelation, isAsc);\n        default:\n          return 0;\n      }\n    });\n    let filterData;\n    if (this.searchComprassion) {\n      filterData = comprassionData;\n    } else {\n      filterData = comprassionData;\n      this.ELEMENT_DATA3 = comprassionData;\n    }\n    this.comprassionSelectedStores = new MatTableDataSource<any>(filterData);\n    // this.comprassionSelectedStores.paginator = this.paginator;\n  }\n\n  getComprassionTable() {\n    const data = {\n      test_id: this.data.test_id,\n      banners: this.data.banner,\n      segments: this.data.store_grid,\n      store_segments: this.data.segment,\n      territories: this.data.territory,\n      categories: this.data.category,\n      target_variable: this.data.target_variable,\n      selected_test_stores: this.data.selectedteststore,\n      prewindow_start: this.data.pretest_startdt,\n      prewindow_end: this.data.pretest_enddt,\n      postwindow_start: this.data.testwin_startdt,\n      postwindow_end: this.data.testwin_enddt\n    };\n    this.homeService.selected_testStore_comprassion(data).subscribe((apiresponse: any) => {\n      if (apiresponse.status == 'ok') {\n        this.tableConstruct(apiresponse.data);\n      }\n    });\n  }\n\n  viewInsights() {\n    this.showInsights = !this.showInsights;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.testStore_population) {\n      this.selectStoreView = this.testStore_population;\n      console.log(this.selectStoreView, 'when go previous');\n      if (!this.selectStoreView) {\n        this.showTestSummaryTable();\n        this.test_analysis_result();\n      }\n    }\n  }\n\n  FilterComprassionStoreSelect(event: string) {\n    const val = event.toLowerCase();\n    this.tempComprassionFilter = this.COMPRASSION_ELEMENT_DATA3;\n    console.log(this.tempComprassionFilter);\n    if (event === '') {\n      this.searchComprassion = false;\n    } else {\n      this.searchComprassion = true;\n    }\n    let temp;\n      temp = this.tempComprassionFilter.filter(function(d: any) {\n        console.log(d);\n        if (d.similarity_value != null) {\n          return (\n            d.store_no\n              .toString()\n              .toLowerCase()\n              .indexOf(val) !== -1 ||\n            d.Street\n              .toString()\n              .toLowerCase()\n              .indexOf(val) !== -1 ||\n            d.similarity_value\n              .toString()\n              .toLowerCase()\n              .indexOf(val) !== -1 ||\n            d.sales_corelation\n              .toString()\n              .toLowerCase()\n              .indexOf(val) !== -1 ||\n            !val\n          );\n        }\n      });\n    if (this.tempComprassionFilter.length > 0) {\n      this.totalComprassionTestStores = temp.length;\n      this.comprassionSelectedStores = new MatTableDataSource<any>(temp);\n    } else {\n      this.COMPRASSION_ELEMENT_DATA3 = this.COMPRASSION_ELEMENT_DATA3;\n      this.totalComprassionTestStores = this.COMPRASSION_ELEMENT_DATA3.length;\n      this.comprassionSelectedStores = new MatTableDataSource<any>(this.COMPRASSION_ELEMENT_DATA3);\n    }\n  }\n\n  showTestSummaryTable() {\n    const data = {\n      test_id: this.data.test_id,\n      banners: this.data.banner,\n      segments: this.data.store_grid,\n      store_segments: this.data.segment,\n      territories: this.data.territory,\n      categories: this.data.category,\n      target_variable: this.data.target_variable,\n      selected_test_stores: this.selectTestStoresFormat(),\n      prewindow_start: this.data.pretest_startdt,\n      prewindow_end: this.data.pretest_enddt,\n      postwindow_start: this.data.testwin_startdt,\n      postwindow_end: this.data.testwin_enddt\n    };\n    this.homeService.testStore_population_summary(data).subscribe((apiresponse: any) => {\n      if (apiresponse.status == 'ok') {\n          if (apiresponse['data']['variables_metrics_dict'].hasOwnProperty('RSV')) {\n            this.showRSV = true;\n            this.csv_pop = apiresponse['data']['variables_metrics_dict']['RSV']['Population Mean'];\n            this.csv_poptestmean = apiresponse['data']['variables_metrics_dict']['RSV']['Test Mean'];\n            this.csv_pvalue = this.convertPercentage(apiresponse['data']['pvalue_dict']['RSV']);\n          } else {\n            this.showRSV = false;\n          }\n          if (apiresponse['data']['variables_metrics_dict'].hasOwnProperty('Store_Size_Sq_Ft')) {\n            this.showsizeSqft = true;\n            this.out_pop = apiresponse['data']['variables_metrics_dict']['Store_Size_Sq_Ft']['Population Mean'];\n            this.out_poptestmean = apiresponse['data']['variables_metrics_dict']['Store_Size_Sq_Ft']['Test Mean'];\n            this.out_testPvalue = this.convertPercentage(apiresponse['data']['pvalue_dict']['Store_Size_Sq_Ft']);\n          } else{\n            this.showsizeSqft = false;\n          }\n          if (apiresponse['data']['variables_metrics_dict'].hasOwnProperty('Manned_Checkouts')) {\n            this.showManned = true;\n            this.touch_ability = apiresponse['data']['variables_metrics_dict']['Manned_Checkouts']['Population Mean'];\n            this.touch_ability_mean = apiresponse['data']['variables_metrics_dict']['Manned_Checkouts']['Test Mean'];\n            this.touch_pValue = this.convertPercentage(apiresponse['data']['pvalue_dict']['Manned_Checkouts']);\n          } else {\n            this.showManned = false;\n          }\n          if (apiresponse['data']['variables_metrics_dict'].hasOwnProperty('total_checkout_locations')) {\n            this.showTotal = true;\n            this.totalCheckout = apiresponse['data']['variables_metrics_dict']['total_checkout_locations']['Population Mean'];\n            this.totalCheckoutMean = apiresponse['data']['variables_metrics_dict']['total_checkout_locations']['Test Mean'];\n            this.totalCheckoutpValue = this.convertPercentage(apiresponse['data']['pvalue_dict']['total_checkout_locations']);\n          } else {\n            this.showTotal = false;\n          }\n      }\n    });\n  }\n\n  showComprassionChart() {\n    const data = {\n      test_id: this.data.test_id,\n      banners: this.data.banner,\n      segments: this.data.store_grid,\n      store_segments: this.data.segment,\n      territories: this.data.territory,\n      categories: this.data.category,\n      target_variable: this.data.target_variable,\n      selected_test_stores: this.selectTestStoresFormat(),\n      prewindow_start: this.data.pretest_startdt,\n      prewindow_end: this.data.pretest_enddt,\n      postwindow_start: this.data.testwin_startdt,\n      postwindow_end: this.data.testwin_enddt\n    };\n    this.homeService.testStore_population_correlation(data).subscribe((apiresponse: any) => {\n      if (apiresponse.status == 'ok') {\n        console.log(apiresponse.data);\n        this.seriesData = [];\n        this.categories = [];\n        const targetVariableValue = this.data.target_variable;\n        const avgTest = apiresponse.data.metrics_dict['Avg_Similarity'];\n        this.avg_test_population = (avgTest * 100).toFixed();\n        const salesTest = apiresponse.data.metrics_dict['Avg_Correlation'];\n        this.sales_test_population = (salesTest * 100).toFixed();\n        const data = JSON.parse(apiresponse.data.combined_avg);\n        for (let i = 0; i < data.length; i++) {\n          const obj = {name: '', color: ''};\n          this.categories.push(data[i]['Week'].toString());\n          if (this.seriesData.length === 0) {\n            obj.name = data[i]['Group'];\n            if (data[i]['Group'] === 'Test') {\n              obj.color = '#d40061';\n            } else {\n              obj.color = '#ec9b02';\n            }\n            const datValue = [];\n            datValue.push(data[i]['Average_' + targetVariableValue]);\n            obj['data'] = datValue;\n            this.seriesData.push(obj);\n          } else {\n            const index = this.seriesData.findIndex((x: any) => x.name === data[i]['Group']);\n            if (index === -1) {\n              obj.name = data[i]['Group'];\n              if (data[i]['Group'] === 'Test') {\n                obj.color = '#d40061';\n              } else {\n                obj.color = '#ec9b02';\n              }\n              const datValue = [];\n              datValue.push(data[i]['Average_' + targetVariableValue]);\n              obj['data'] = datValue;\n              this.seriesData.push(obj);\n            } else {\n              this.seriesData[index].data.push(data[i]['Average_' + targetVariableValue]);\n            }\n          }\n        }\n        const uniqueData = Array.from(new Set(this.categories));\n        this.categories = uniqueData;\n        console.log(this.seriesData, this.categories, 'chart Datas');\n        setTimeout(() => this.generateHighCharts(this.seriesData, this.categories));\n      }\n    });\n  }\n\n  test_analysis_result() {\n    const preperiod_start: any = this.data.pretest_startdt;\n    const preperiod_end: any = this.data.pretest_enddt;\n    const postperiod_start: any = this.data.testwin_startdt;\n    const postperiod_end: any = this.data.testwin_enddt;\n    const breakeven_list = this.data.break_even_lift;\n    const selectedTargetVariable = this.data.target_variable;\n    const test_id = this.data.test_id;\n    const data: any = {\n      test_id,\n      preperiod_start,\n      preperiod_end,\n      postperiod_start,\n      postperiod_end,\n      mesmetric_name: selectedTargetVariable,\n      break_even_lift: JSON.stringify(JSON.parse(breakeven_list)),\n      // stringified_data: JSON.stringify(stringifiedData)\n    };\n    this.testMeasureService.controlStoreMeasurementpost(data).subscribe((apiresponse: any) => {\n      if (apiresponse.status == 'ok') {\n        this.showComprassionChart();\n      } else if (apiresponse.status == 'not_ok') {\n\n      }\n    });\n  }\n\n  selectTestStoresFormat() {\n    const mystres = this.comprassionSelectedStores.data;\n    const finalisedData = [];\n    for (let i = 0; i < mystres.length; i++) {\n      finalisedData.push({\n        Customer_Number: mystres[i]['store_no'],\n        Customer_Status: mystres[i]['customer_status'],\n        Customer_Group: mystres[i]['banner'],\n        City: mystres[i]['city'],\n        Outlet_Address: mystres[i]['Street'],\n        Postcode: mystres[i]['zipcode'],\n        is_teststore: mystres[i]['teststre_flg'],\n        Correlation: mystres[i]['sales_corelation'],\n        Similarity_Measure: mystres[i]['similarity_value'],\n        Customer_Name: mystres[i]['customer_name'],\n        index: mystres[i]['index'],\n        Store_Size_Sq_Ft: mystres[i]['csvoutletShow'],\n        Territory_Geocode: this.getTerritoryData(mystres[i]['Territory']),\n        Store_Number: mystres[i]['store_segment'],\n        Touchability_Score: mystres[i]['touchability_score'],\n        store_id: mystres[i]['store_id'],\n        Region: mystres[i]['region'],\n        Division: mystres[i]['division'],\n        Sales_Representative: mystres[i]['sales_represtative'],\n        total_checkout_locations: mystres[i]['total_checkout_locations'],\n        Manned_Checkouts: mystres[i]['Manned_Checkouts']\n      });\n    }\n    console.log(finalisedData, 'finalisedData');\n    return finalisedData;\n  }\n\n  generateHighCharts(seriesData: [], category: []) {\n    const options: any = {\n      chart: {\n        type: 'areaspline',\n        height: 400,\n      },\n      title: {\n        text: ''\n      },\n      subtitle: {\n        text: ''\n      },\n      legend: {\n        align: 'center',\n        verticalAlign: 'bottom',\n        y: 0,\n        padding: 0,\n        itemMarginTop: 0,\n        itemMarginBottom: 0,\n        itemStyle: {\n          fontSize: '10px'\n        }\n      },\n      xAxis: {\n        categories: category,\n        style: {\n          fontFamily: 'Mulish_regular'\n        }\n      },\n      yAxis: {\n        title: {\n          text: 'Standardised sales'\n        },\n        style: {\n          fontFamily: 'Mulish_regular'\n        }\n      },\n      tooltip: {\n        shared: true,\n        valueSuffix: ''\n      },\n      credits: {\n        enabled: false\n      },\n      plotOptions: {\n        areaspline: {\n          fillOpacity: 0.1\n        }\n      },\n      series: seriesData\n    };\n    Highcharts.chart('test_population_charts', options);\n  }\n\n  convertPercentage(value: number) {\n    if (value !== undefined) {\n      const convertedValue = (1 - value) * 100;\n      return Math.floor(convertedValue) + '%';\n    } else {\n      return '-';\n    }\n  }\n\n  roundOff(val: any) {\n    const tempVal: any = Math.round(val);\n    return tempVal;\n  }\n\n  roundOffWithComma(val: any) {\n    const tempVal: any = Math.round(val);\n    return tempVal.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n  }\n\n  getDataUpdated() {\n    this.TestStoreSelectTable = new MatTableDataSource([]);\n    if (!this.tableView) {\n      this.mapTableData = this.TestStoreSelectTable.data;\n      this.getMarkerList();\n    } else {\n      // ODEMOy To make the teststore Flag true\n      const filteredData = this.mapTableData.filter((x: any) => x.teststre_flg === 1);\n      if (filteredData.length > 0) {\n        for (let i = 0; i < filteredData.length; i++) {\n          const index = this.ELEMENT_DATA3.findIndex((x: any) => x.store_no === filteredData[i]['store_no']);\n          if (index !== -1) {\n            this.ELEMENT_DATA3[index]['teststre_flg'] = 1;\n          }\n        }\n      }\n      const temp: any = [];\n      for (let i = 0; i < this.ELEMENT_DATA3.length; i++) {\n        if (this.ELEMENT_DATA3[i].teststre_flg == 1) {\n          temp.push(this.ELEMENT_DATA3[i]);\n        }\n      }\n      this.testStoreSelectedDataCount = temp.length;\n      this.totalTestStores = this.ELEMENT_DATA3.length;\n      this.TestStoreSelectTable = new MatTableDataSource(this.ELEMENT_DATA3);\n      setTimeout(() => this.TestStoreSelectTable.paginator = this.paginator);\n      console.log(this.TestStoreSelectTable.paginator, 'pagintorset');\n      // this.changeDetectorRefs.detectChanges();\n      this.strselection = new SelectionModel<TestStore>(true, temp);\n      // this.loadsize = 10;\n    }\n  }\n\n  onMouseOver(infoWindow: any, $event: MouseEvent) {\n    infoWindow.open();\n  }\n\n  onMouseOut(infoWindow: any, $event: MouseEvent) {\n    infoWindow.close();\n  }\n\n  showConfirm(obj: any) {\n    if (this.selectTestStores === '2' && this.testStoreSelectedDataCount < Number(this.NoofTestStore)) {\n      this.openDailogConfirm(this.confirmDialog);\n    } else {\n      this.Savestep3One(obj.currentComponent);\n    }\n\n  }\n\n  openDailogConfirm(template: TemplateRef<any>) {\n    this.dialogRefConfirm = this.dialog.open(template);\n  }\n\n  closeDailogConfirm() {\n    this.dialogRefConfirm.close();\n  }\n\n  isAllSelected() {\n    const numSelected = this.strselection.selected.length;\n    const numRows = this.TestStoreSelectTable.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    if (this.isAllSelected() === false){\n      this.masterChecked(false);\n    } else {\n      this.masterChecked(true);\n    }\n  }\n\n\n  sellectAllStores(event: any) {\n    console.log('callin when SelectAllStores', event);\n    for (let i = 0; i < this.ELEMENT_DATA3.length; i++) {\n      if (event === true) {\n        this.ELEMENT_DATA3[i]['teststre_flg'] = 1;\n      } else {\n        this.ELEMENT_DATA3[i]['teststre_flg'] = 0;\n      }\n    }\n    const data = this.ELEMENT_DATA3.filter((x: any) => x.teststre_flg === 1);\n    if (data.length > 0) {\n      this.testStoreSelectedDataCount = data.length;\n    } else {\n      this.testStoreSelectedDataCount = 0;\n    }\n    this.TestStoreSelectTable = new MatTableDataSource(this.ELEMENT_DATA3);\n    this.TestStoreSelectTable.paginator = this.paginator;\n    this.isChecked = true;\n  }\n\n  masterChecked(event: boolean) {\n    if(!event){\n      this.TestStoreSelectTable.data.forEach(row => {\n        this.strselection.select(row);\n      });\n      this.sellectAllStores(!event);\n    } else {\n      this.strselection.clear();\n      this.sellectAllStores(!event);\n    }\n  }\n\n  formatfilteredData(dataValue: any) {\n    const data = [];\n    const tempData = this.ELEMENT_DATA3;\n    this.filterApply(dataValue, tempData);\n  }\n\n  filterApply(dataValue: any, tempData: any) {\n    const keyValues: any = [];\n    const valuesArray: any = [];\n    for (let i = 0; i < dataValue.length; i++) {\n      keyValues.push(dataValue[i]['name']);\n      for (let j = 0; j < dataValue[i]['data'].length; j++) {\n        // console.log(dataValue[i], dataValue[i]['data'][j])\n        valuesArray.push(dataValue[i]['data'][j]);\n      }\n    }\n    if (valuesArray.length > 0) {\n      this.filterApplied = true;\n    } else {\n      this.filterApplied = false;\n    }\n    const result = tempData.filter(function(e: any) {\n      return keyValues.every(function(a: any) {\n        return !valuesArray.includes(e[a]);\n      });\n    });\n    tempData = result;\n    console.log(result, 'tempDatavalue filter');\n    this.tempFiteredArray = tempData;\n    this.TestStoreSelectTable = new MatTableDataSource<any>(tempData);\n    this.TestStoreSelectTable.paginator = this.paginator;\n  }\n\n// When click previous the Checked flag are reset\n  previuosData(ary: any) {\n    this.ELEMENT_DATA3 = ary;\n    const temp: any = [];\n    for (let i = 0; i < this.ELEMENT_DATA3.length; i++) {\n      if (this.ELEMENT_DATA3[i].teststre_flg == 1) {\n        temp.push(this.ELEMENT_DATA3[i]);\n      }\n    }\n    console.log(this.ELEMENT_DATA3);\n    this.testStoreSelectedDataCount = temp.length;\n    this.totalTestStores = ary.length;\n    this.TestStoreSelectTable = new MatTableDataSource(this.ELEMENT_DATA3);\n    setTimeout(() => this.TestStoreSelectTable.paginator = this.paginator);\n    this.changeDetectorRefs.detectChanges();\n    this.strselection = new SelectionModel<TestStore>(true, temp);\n    this.loadsize = 10;\n  }\n}\n","<div *ngIf=\"suggestionView\">\n  <mat-card class=\"fontMulishRegular\">\n    <mat-card-content class=\"mat-card_content\">\n      <div class=\"header_content\">Suggestion tool for test stores</div>\n      <hr />\n      <span style=\"font-size: 13px;\">What you want to calculate the lift on? </span>\n      <img class=\"infoicon\" matTooltip=\"Choose the target variable\" [matTooltipPosition]=\"position.value\"\n        src=\"assets/images/information.png\" alt=\"sort\" /><br />\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <mat-radio-group class=\"space-radio\" [(ngModel)]=\"selectTargetVariableRadio\">\n            <mat-radio-button value=\"1\" [checked]=\"false\" class=\"ml-2\">RSV</mat-radio-button>\n            <mat-radio-button value=\"2\" [checked]=\"false\" class=\"ml-2\">Volume</mat-radio-button>\n          </mat-radio-group>\n          <br />\n        </div>\n      </div>\n\n      <span style=\"font-size: 13px;\">Already know my</span><br />\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <mat-radio-group class=\"space-radio2\" [(ngModel)]=\"alreadyKnowRadio\" (ngModelChange)=\"selectAKRadioChange()\">\n            <!-- (ngModelChange)=\"selectAKRadioChange()\"-->\n            <mat-radio-button value=\"1\" [checked]=\"false\" class=\"ml-2\">Margin of error %</mat-radio-button>\n            <mat-radio-button value=\"2\" [checked]=\"false\" class=\"ml-2\">No of test stores</mat-radio-button>\n          </mat-radio-group>\n          <br />\n          <div *ngIf=\"alreadyKnowRadio==1\">\n            <input class=\"form-control\" type=\"number\" id=\"margin-error\" [(ngModel)]=\"knownMarginOfError\"\n              placeholder=\"Enter the margin of error %\" style=\"width: 25% !important\" />\n          </div>\n          <div *ngIf=\"alreadyKnowRadio==2\">\n            <input class=\"form-control\" type=\"number\" id=\"no-of-teststore\" [(ngModel)]=\"knownNoOfError\"\n              placeholder=\"Enter the no.of teststore\" style=\"width: 25% !important\" />\n          </div>\n          <br />\n          <hr />\n        </div>\n      </div>\n      <div class=\"row pt-2 pb-2\">\n        <div class=\"col-12\">\n          <span style=\"float: left;color: red;\">{{generateValidationMessage}}</span>\n          <button mat-raised-button class=\"font_size_button\"\n            style=\"float: right;background-color: #000091; color: white;\" (click)=\"generateSuggestion()\"><b>Generate</b>\n          </button>\n        </div>\n      </div>\n    </mat-card-content>\n  </mat-card>\n  <br>\n  <mat-card class=\"fontMulishRegular\" [hidden]=\"!suggestionViewResult\" style=\"border-radius: 15px 15px 15px 15px !important;\n  height: 4rem;\">\n    <mat-card-content class=\"mat-card_content\">\n      <div>\n        <div *ngIf=\"alreadyKnowRadio == 1\"><span style=\"font-size: 13px;width: 75%;\n      float: left;\">We recommend having <b>{{resultNoOfStore}} test stores</b> to reach close to\n            {{resultMarginOfError}}% margin of error</span></div>\n        <div *ngIf=\"alreadyKnowRadio == 2\"><span style=\"font-size: 13px;width: 75%;\n        float: left;\">We recommend having <b>{{resultMarginOfError}}% margin of error</b> to reach close to\n            {{resultNoOfStore}} test stores</span></div>\n        <!-- <div (click)=\"viewInsights()\" style=\"float: right;color: blue;cursor: pointer;font-size: 12px;\">View insights&nbsp;&nbsp;<div style=\"float: right;\"><mat-icon *ngIf = \"showInsights\" style=\"color: blue;\">keyboard_arrow_up</mat-icon>\n         <mat-icon *ngIf = \"!showInsights\" style=\"color: blue;\">keyboard_arrow_down</mat-icon></div></div> -->\n      </div>\n    </mat-card-content>\n  </mat-card>\n  <mat-card [hidden]=\"!suggestionViewResult\" class=\"fontMulishRegular\" style=\"height: 33rem !important;border-radius: 0px 0px 15px 15px !important;\n  bottom: 1rem;\">\n    <!--[hidden]=\"!suggestionViewResult || !showInsights\"-->\n    <mat-card-content class=\"mat-card_content\">\n\n      <hr />\n      <div [hidden]=\"!suggestionViewResult\">\n        <!--*ngIf = \"showInsights\"-->\n        <div style=\"width: 40%;float: left;\">\n          <table style=\"font-family: Mulish_regular !important;\" mat-table matSort [dataSource]=\"powerTable\"\n            class=\"mat-elevation-z8\" (matSortChange)=\"sortDataQuickSuggestionTable($event)\">\n            <!-- Power % Column -->\n            <ng-container matColumnDef=\"power\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"remove_border\">\n                <span class=\"table-header-label\">Power %</span>\n              </th>\n              <td mat-cell *matCellDef=\"let row\"\n                style=\"white-space: nowrap; text-align: center;font-size: 11px !important;\">\n                <span\n                  [ngClass]=\"{'font_green': (title == 'Margin of error' && row.noOfStore >= resultMarginOfError) || (title == 'Number of test stores' && row.noOfStore >= resultNoOfStore) , 'font_normal': (title == 'Margin of error' && row.noOfStore < resultMarginOfError) || (title == 'Number of test stores' && row.noOfStore < resultNoOfStore)}\">{{\n                  row.power }}</span>\n              </td>\n            </ng-container>\n            <!-- Number of store Column -->\n            <ng-container matColumnDef=\"number_of_stores\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"remove_border\">\n                <span class=\"table-header-label\" style=\"padding-left: 8px\">{{title}}</span>\n              </th>\n              <td mat-cell *matCellDef=\"let row\"\n                style=\"white-space: nowrap; text-align: center;font-size: 11px !important;\">\n                <span\n                  [ngClass]=\"{'font_green': (title == 'Margin of error' && row.noOfStore >= resultMarginOfError) || (title == 'Number of test stores' && row.noOfStore >= resultNoOfStore) , 'font_normal': (title == 'Margin of error' && row.noOfStore < resultMarginOfError) || (title == 'Number of test stores' && row.noOfStore < resultNoOfStore)}\">{{\n                  row.noOfStore }}</span><span\n                  [ngClass]=\"{'font_green': (title == 'Margin of error' && row.noOfStore >= resultMarginOfError) || (title == 'Number of test stores' && row.noOfStore >= resultNoOfStore) , 'font_normal': (title == 'Margin of error' && row.noOfStore < resultMarginOfError) || (title == 'Number of test stores' && row.noOfStore < resultNoOfStore)}\"\n                  *ngIf=\"title=='Margin of error'\">%</span>\n              </td>\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsLoadSaved;sticky: true\"\n              style=\"white-space: nowrap !important;height: 38px !important;\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumnsLoadSaved\" style=\"height: 38px !important;\"\n              [ngClass]=\"{'background-color-green': (title == 'Margin of error' && row.noOfStore >= resultMarginOfError) || (title == 'Number of test stores' && row.noOfStore >= resultNoOfStore), '': (title == 'Margin of error' && row.noOfStore < resultMarginOfError) || (title == 'Number of test stores' && row.noOfStore < resultNoOfStore)}\"\n              (click)=\"selection.toggle(row)\">\n            </tr>\n          </table>\n          <ul class=\"legend\">\n            <li><span class=\"acceptableRange\"></span> <span class=\"arTxt\">Acceptable Range</span></li>\n          </ul>\n        </div>\n        <div style=\"width: 60%;float: right;\">\n          <div id=\"power-chart\"></div>\n          <ul class=\"legend2\">\n            <li><span class=\"acceptableRange2\"></span> <span class=\"arTxt2\">Acceptable Range</span></li>\n          </ul>\n        </div>\n      </div>\n      <br />\n    </mat-card-content>\n  </mat-card>\n  <br>\n</div>\n\n<ng-container *ngIf=\"!showComprassion\">\n  <div *ngIf=\"!suggestionView\">\n    <mat-card style=\"margin-bottom: 2%;\" class=\"fontMulishRegular\">\n      <div>\n        <span>\n          <b>\n            Not sure how to select test stores? &nbsp;\n          </b>\n        </span>\n        <span style=\"color:#66768f\">\n          Use our quick suggestion tool\n        </span>\n        <img src=\"assets/images/Icons_side arrow.png\" (click)=\"navigateSuggestedTool()\" class=\"arrow_navigate\">\n      </div>\n    </mat-card>\n    <ng-container *ngIf=\"!isRTMImpactTest\">\n      <mat-card class=\"fontMulishRegular\" style=\"margin-top:1.5rem\">\n        <mat-card-content class=\"mat-card_content\">\n\n          <div>\n            <span style=\"font-weight: bold;font-size: 16px;\">Enter the test config details\n            </span>\n            <hr />\n          </div>\n          <div *ngIf=\"!isRTMImpactTest\">\n            <div>\n              <span style=\"font-weight: bold;font-size: 16px;\">Select test stores\n              </span>\n            </div>\n            <hr />\n            <span style=\"font-size: 13px;\">How would you like to select test stores?</span><br />\n            <div class=\"row\">\n              <div class=\"col-md-12\" style=\"padding-top: 12px;padding-bottom: 12px\">\n                <mat-radio-group [(ngModel)]=\"selectTestStores\" (ngModelChange)=\"selectRadioChange()\">\n                  <mat-radio-button value=\"1\" [checked]=\"true\">Suggested by tool</mat-radio-button>\n                  <!-- <mat-radio-button value=\"2\" [checked]=\"false\" class=\"ml-2\">Manually</mat-radio-button>\n                  <mat-radio-button value=\"3\" [checked]=\"false\" class=\"ml-2\">Uploading an excel list</mat-radio-button> -->\n                </mat-radio-group>\n                <br />\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"selectTestStores !== '3'\">\n            <div class=\"row\" *ngIf=\"showSuggestedByTool\">\n              <div class=\"col-md-4 col-lg-4 col-sm-12\">\n                <div class=\"form-group\">\n                  <input type=\"checkbox\" [(ngModel)]=\"ConfLev\" [disabled]=\"!cnfcheck\"\n                    (change)=\"ConfLevels(ConfLev?'A':'B')\" name=\"conf\">\n                  <label id=\"exampleInputEmail1\" class=\"label_change\">Confidence Level\n                    <img class=\"infoicon\"\n                      matTooltip=\"Confidence level determines the quality of test, in other words, it tells with how much certainty the test results can be implemented in the market. Recommended level: 85%\"\n                      [matTooltipPosition]=\"position.value\" src=\"assets/images/information.png\" alt=\"sort\" />\n                  </label>\n                  <input type=\"number\" class=\"form-control borderradnone\" id=\"exampleInputEmail1\"\n                    placeholder=\"Enter Confidence Level\" (keypress)=\"omit_char($event);\" (keydown)=\"ConfShow()\"\n                    [(ngModel)]=\"ConfLevel\" (keyup)=\"callCompute()\" [disabled]=\"!ConfLev || ConfLev == 0\">\n                  <ng-container *ngIf=\"confshow\">\n                    <p><span style=\"color: red;\">Please Enter Confidence Level</span></p>\n                  </ng-container>\n                  <ng-container *ngIf=\"confrangeshow\">\n                    <p><span style=\"color: red;\">Please Enter a Confidence Level between 70 -99</span></p>\n                  </ng-container>\n                </div>\n              </div>\n              <div class=\"col-md-4 col-lg-4 col-sm-12\">\n                <div class=\"form-group\">\n                  <input type=\"checkbox\" [(ngModel)]=\"Margin\" [disabled]=\"!mrgerrheck\"\n                    (change)=\"MarginError(Margin?'C':'D')\" name=\"margin\">\n                  <label class=\"label_change\">Margin of Error\n                    <img class=\"infoicon\"\n                      matTooltip=\"Minimum difference of the Target variable to be observed between test and control group. (Recommended range - 3% to 4%)\"\n                      [matTooltipPosition]=\"position.value\" src=\"assets/images/information.png\" alt=\"sort\" />\n                  </label>\n                  <input type=\"number\" class=\"form-control borderradnone\" id=\"exampleInputEmail1\"\n                    placeholder=\"Enter Margin of Error\" (keydown)=\"ErrorShow()\" (keypress)=\"omit_char($event);\"\n                    [(ngModel)]=\"NoofError\" (keyup)=\"callCompute()\" [disabled]=\"!Margin || Margin == 0\">\n                </div>\n                <ng-container *ngIf=\"errorshow\">\n                  <span style=\"color: red;\">Please Enter No of Error</span>\n                </ng-container>\n              </div>\n              <div class=\"col-md-4 col-lg-4 col-sm-12\">\n                <div class=\"form-group\">\n                  <input type=\"checkbox\" [(ngModel)]=\"TestStore\" [disabled]=\"!testrheck\"\n                    (change)=\"TestStores(TestStore?'E':'F')\" name=\"teststores\">\n                  <label class=\"label_change\">Number of Test store\n                    <img class=\"infoicon\"\n                      matTooltip=\"Choose the number of stores which gives a high confidence level and a decent measurement of error. (Minimum sample size - 30 to 40)\"\n                      [matTooltipPosition]=\"position.value\" src=\"assets/images/information.png\" alt=\"sort\" />\n                  </label>\n                  <input type=\"number\" class=\"form-control borderradnone\" id=\"exampleInputEmail1\"\n                    placeholder=\"Enter Number of test stores\" (keydown)=\"TestStoreShow()\" [(ngModel)]=\"NoofTestStore\"\n                    (keyup)=\"callCompute()\" [disabled]=\"!TestStore || TestStore == 0\">\n                </div>\n                <ng-container *ngIf=\"teststoreshow\">\n                  <span style=\"color: red;\">Please Enter No of Test Stores</span>\n                </ng-container>\n                <ng-container *ngIf=\"validate_teststore\">\n                  <span style=\"color: red;\">{{testStore_Errormsg}}</span>\n                </ng-container>\n              </div>\n            </div>\n            <p *ngIf=\"formError\" class=\"option_error\">You must select and enter values for any two options</p>\n            <br>\n            <hr>\n            <div class=\"row pt-2 pb-2\">\n              <div class=\"col-6\">\n                <!-- <ng-container *ngIf=\"showMessage\">\n                  <div class=\"fontMulishBold\">The number of recommended test stores = {{NoofTestStore}}</div>\n                  <div class=\"fontMulishBold\">\n                    Recommended statistical thresholds:\n                    <ul>\n                      <li>Confidence level: {{ConfLev}}</li>\n                      <li>Margin of error: {{NoofError}}</li>\n                      <li>Power of Test: {{power_test}}</li>\n                    </ul>\n                  </div>\n                </ng-container> -->\n              </div>\n              <div class=\"col-6\">\n                <button mat-raised-button class=\"font_size_button\"\n                  style=\"float: right;background-color: #000091; color: white;\"\n                  (click)=\"showGenerate(true)\"><b>Generate</b>\n                </button>\n              </div>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectTestStores === '3' && !uploadShow\">\n            <div class=\"upload_container mt-2\">\n              <ng-container *ngIf=\"!uploaded\">\n                <div class=\"upload_text1 font_mulish_regular\">Already have a repository of test stores? Upload it in this\n                  format to go to the next step\n                </div>\n                <div class=\"upload_text2 font_mulish_bold btn-link dowDEMOoad_template\" (click)=\"dowDEMOoadTemplate()\">Click\n                  here\n                  to dowDEMOoad the template\n                </div>\n              </ng-container>\n              <ng-container *ngIf=\"statusFail\">\n                <div class=\"upload_text1 font_mulish_regular font_color_fail\">{{uploadMessageFailed}}</div>\n              </ng-container>\n              <ng-container *ngIf=\"uploaded\">\n                <div class=\"upload_text1 font_mulish_regular font_color\">The number of recommended test stores\n                  = {{NoofTestStore}}</div>\n                <div class=\"upload_text1 font_mulish_regular font_color\">\n                  Recommended statistical thresholds:\n                  <div>Confidence level: {{ConfLev}}</div>\n                  <div>Margin of error: {{NoofError}}</div>\n                  <div>Power of Test: {{power_test}}</div>\n                </div>\n                <div class=\"upload_text1 font_mulish_regular font_color\">{{uploadMessage}}</div>\n                <div class=\"upload_text3 font_mulish_regular\">You can either continue the upload excluding the conflicting\n                  values or cancel the whole upload\n                </div>\n                <button mat-button (click)=\"cancelUpload()\" class=\"button-color-enable font_size_button\"\n                  style=\"margin-right: 1rem\">Cancel\n                </button>\n                <button mat-button class=\"button-color-enabled-background pl-2 font_size_button\"\n                  (click)=\"contineUpload(false)\">Continue\n                </button>\n              </ng-container>\n              <!-- <button mat-button class=\"pl-2 button-color-enabled-background\" style=\"margin-top: 1rem;\">Upload File</button> -->\n              <div *ngIf=\"!uploaded\" (click)=\"uploadFile.click()\">\n                <button mat-button class=\"pl-2 button-color-enabled-background\" style=\"margin-top: 1rem;\">Upload\n                  File\n                </button>\n                <input #uploadFile type=\"file\" id=\"grade_csv\" style=\"display:none\" accept=\".xlsx\"\n                  (change)=\"handleFileInput($event.target.files)\" name=\"selectTestStore\" />\n              </div>\n            </div>\n          </ng-container>\n        </mat-card-content>\n      </mat-card>\n    </ng-container>\n\n    <div class=\"route_container_top\">\n      <mat-card class=\"fontMulishRegular\">\n        <mat-card-content class=\"mat-card_content\">\n          <!-- <form #selectTest=\"ngForm\"> -->\n          <div><span style=\"font-weight: bold;font-size: 16px;\">Selected number of stores:\n              {{testStoreSelectedDataCount}}</span>\n            <div style=\"float: right\">\n              <mat-button-toggle-group #grou=\"matButtonToggleGroup\" [(ngModel)]=\"tableView\" [value]=\"tableView\"\n                (ngModelChange)=\"getDataUpdated()\">\n                <mat-button-toggle [value]=\"true\" [ngClass]=\"{'not_checked': !tableView}\" aria-label=\"Text align left\">\n                  <mat-icon class=\"toggle_icon\"> table_chart</mat-icon>\n                  Table\n                </mat-button-toggle>\n                <mat-button-toggle [value]=\"false\" [ngClass]=\"{'not_checked': tableView}\"\n                  aria-label=\"Text align center\">\n                  <mat-icon class=\"toggle_icon\"> pin_drop</mat-icon>\n                  Map\n                </mat-button-toggle>\n              </mat-button-toggle-group>\n            </div>\n          </div>\n          <hr />\n          <ng-container *ngIf=\"tableView\">\n            <div *ngIf=\"totalTestStores!== 0\">\n              <app-common-table [tableData]=\"TestStoreSelectTable\" [columnHeader]=\"columnHeader1\" [tableHeader]=\"\"\n                [stringSelection]=\"strselection\" (selectedStrTableData)=\"selectedstrtable($event)\"\n                (checkboxLabelTeststoreData)=\"checkboxLabelTeststore($event)\" (masterToggleData)=\"masterToggle()\"\n                (isAllSelectedData)=\"isAllSelected()\" (selectAllStoresData)=\"sellectAllStores($event)\"\n                (callFilterData)=\"filterCall()\" (callSortData)=\"sortDataTeststoreSelected($event)\" (searchFilter)=\"FilterLoadTestStoreSelect($event)\">\n              </app-common-table>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div *ngIf=\"totalTestStores == 0\" style=\"text-align: center;\">\n                  <p class=\"no_rec_found\">No Records Found</p>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n          <!-- </form> -->\n          <ng-container *ngIf=\"!tableView\">\n            <div class=\"row\">\n              <div class=\"col-md-12 col-sm-12\">\n                <agm-map [latitude]=\"latitude\" [longitude]=\"longitude\" [zoom]=\"zoom\" [usePanning]=\"agmusePan\"\n                  (mapReady)=\"mapReading()\">\n                  <agm-marker *ngFor=\"let m of markers; let i = index\" [agmFitBounds]=\"true\"\n                    [iconUrl]='{\"url\": m.active_icon,\"scaledSize\": {\"height\": 30, \"width\": 30},labelOrigin:{x:80,y:20}}'\n                    (markerClick)=\"selectedMarker(m.store_no, m.teststre_flg)\" [latitude]=\"m.latitude\"\n                    [longitude]=\"m.longitude\" [markerDraggable]=\"m.draggable\" [animation]=\"userLocationMarkerAnimation\"\n                    (mouseOut)=\"onMouseOut(infoWindow, $event)\" (mouseOver)=\"onMouseOver(infoWindow,$event)\">\n                    <agm-info-window [disableAutoPan]=\"true\" #infoWindow>\n                      <div class=\"info_window fontMulishRegular\">\n                        <div class=\"font_size\">\n                          <b class=\"store-id-map\">{{tableName.test_store_id}} : #{{m.store_no}}</b>\n                          <div class=\"store-id-map\">City : {{m.city}}</div>\n                          <div class=\"store-id-map\">Zip Code: {{m.zipcode}}</div>\n                        </div>\n                      </div>\n                    </agm-info-window>\n                  </agm-marker>\n                </agm-map>\n              </div>\n            </div>\n          </ng-container>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showComprassion\">\n  <div *ngIf=\"selectStoreView\" style=\"padding-bottom: 15px !important;\">\n    <mat-card class=\"fontMulishRegular\">\n      <mat-card-content class=\"mat-card_content\">\n        <div><span style=\"font-weight: bold;font-size: 16px;\">Test Stores to population mapping</span></div>\n        <hr />\n        <ng-container>\n\n          <div>\n            <app-common-table [tableData]=\"comprassionSelectedStores\" [columnHeader]=\"columnHeader2\"\n              [tableType]=\"comprassion\" (callSortData)=\"sortPopulationMapping($event)\"\n              (searchFilter)=\"FilterComprassionStoreSelect($event)\"></app-common-table>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div *ngIf=\"totalComprassionTestStores == 0\" style=\"text-align: center;\">\n                <p class=\"no_rec_found\">No Records Found</p>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <div *ngIf=\"!selectStoreView\">\n    <mat-card>\n      <mat-card-content class=\"mat-card_content\">\n        <div><span class=\"mat_heading\">Test - Population comparison summary</span></div>\n        <hr />\n        <div class=\"row\">\n          <div class=\"col-md-12 col-sm-12 col-lg-12\">\n            <div id=\"test_population_charts\"></div>\n          </div>\n        </div>\n        <div fxLayout=\"row pt-3\" fxLayoutAlign=\"space-between center\">\n          <div fxFlex=\"48\" class=\"background_change\">\n            <div class=\"row\">\n              <div class=\"col-md-3 col-lg-3 col-sm-3 control_value text-center\">{{avg_test_population}}%</div>\n              <div class=\"col-md-9 col-lg-9 col-sm-9 control_text\">Avg. match between a test stores and population</div>\n            </div>\n          </div>\n          <div fxFlex=\"48\" class=\"background_change\">\n            <div class=\"row\">\n              <div class=\"col-md-3 col-lg-3 col-sm-3 control_value text-center\">{{sales_test_population}}%</div>\n              <div class=\"col-md-9 col-lg-9 col-sm-9 control_text\">Sales correlation value between test and population\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row mt-4\">\n          <div class=\"col-md-12 col-sm-12 col-lg-12\">\n            <ng-container>\n              <table class=\"table font_mulish_regular\" *ngIf=\"showRSV\">\n                <tr class=\"table_head_color\">\n                  <th class=\"border_style_left\">Store characteristics</th>\n                  <th>Test mean</th>\n                  <th class=\"border_style_right\">Population mean</th>\n                </tr>\n                <tr>\n                  <td>RSV (in {{currencySymbol}})</td>\n                  <td>{{roundOffWithComma(csv_poptestmean)}}</td>\n                  <td>{{roundOffWithComma(csv_pop)}}</td>\n                </tr>\n              </table>\n\n              <table class=\"table font_mulish_regular\" *ngIf=\"showManned || showsizeSqft\">\n                <tr class=\"table_head_color\">\n                  <th class=\"border_style_left\">Store characteristics</th>\n                  <th>Test mean</th>\n                  <th>Population mean</th>\n                  <th class=\"border_style_right\">Feature Importance (%)</th>\n                </tr>\n                <tr *ngIf=\"showsizeSqft\">\n                  <td class=\"border_change\">Store Szie {{isinSqFt}} </td>\n                  <td class=\"border_change\">{{roundOff(out_poptestmean)}}</td>\n                  <td class=\"border_change\">{{roundOff(out_pop)}}</td>\n                  <td class=\"border_change\">{{out_testPvalue}}</td>\n                </tr>\n                <tr *ngIf=\"showManned\">\n                  <td>Manned Checkouts</td>\n                  <td>{{roundOffWithComma(touch_ability_mean)}}</td>\n                  <td>{{roundOffWithComma(touch_ability)}}</td>\n                  <td>{{touch_pValue}}</td>\n                </tr>\n              </table>\n            </ng-container>\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</ng-container>\n\n<ng-template #confirmDialog>\n  <mat-dialog-content style=\"width:25rem\">\n    <ng-container *ngIf=\"showMessage\">\n      <div class=\"fontMulishBold font_size\">The number of recommended test stores = {{NoofTestStore}}</div>\n      <div class=\"fontMulishBold font_size\">\n        Recommended statistical thresholds:\n        <ul>\n          <li>Confidence level: {{ConfLev}}</li>\n          <li>Margin of error: {{NoofError}}</li>\n          <li>Power of Test: {{power_test}}</li>\n        </ul>\n      </div>\n    </ng-container>\n  </mat-dialog-content>\n  <mat-divider></mat-divider>\n  <mat-dialog-actions style=\"float: right;padding-top: 1rem;margin-bottom: -10px\">\n    <button mat-button class=\"button-color\" (click)=\"closeDailogConfirm()\" style=\"cursor: pointer\">Cancel</button>\n    <button mat-button class=\"pl-2 button-color-enabled-background\" (click)=\"Savestep3One()\" style=\"cursor: pointer\"\n      type=\"submit\">Continue\n    </button>\n  </mat-dialog-actions>\n</ng-template>\n"],"sourceRoot":"webpack:///"}